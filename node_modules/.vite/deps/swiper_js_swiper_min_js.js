import {
  __commonJS
} from "./chunk-RSJERJUL.js";

// node_modules/swiper/js/swiper.min.js
var require_swiper_min = __commonJS({
  "node_modules/swiper/js/swiper.min.js"(exports, module) {
    !function(e, t) {
      "object" == typeof exports && "undefined" != typeof module ? module.exports = t() : "function" == typeof define && define.amd ? define(t) : (e = e || self).Swiper = t();
    }(exports, function() {
      "use strict";
      function e(e2) {
        return null !== e2 && "object" == typeof e2 && "constructor" in e2 && e2.constructor === Object;
      }
      function t(i2, s2) {
        void 0 === i2 && (i2 = {}), void 0 === s2 && (s2 = {}), Object.keys(s2).forEach(function(a2) {
          void 0 === i2[a2] ? i2[a2] = s2[a2] : e(s2[a2]) && e(i2[a2]) && Object.keys(s2[a2]).length > 0 && t(i2[a2], s2[a2]);
        });
      }
      var i = "undefined" != typeof document ? document : {}, s = { body: {}, addEventListener: function() {
      }, removeEventListener: function() {
      }, activeElement: { blur: function() {
      }, nodeName: "" }, querySelector: function() {
        return null;
      }, querySelectorAll: function() {
        return [];
      }, getElementById: function() {
        return null;
      }, createEvent: function() {
        return { initEvent: function() {
        } };
      }, createElement: function() {
        return { children: [], childNodes: [], style: {}, setAttribute: function() {
        }, getElementsByTagName: function() {
          return [];
        } };
      }, createElementNS: function() {
        return {};
      }, importNode: function() {
        return null;
      }, location: { hash: "", host: "", hostname: "", href: "", origin: "", pathname: "", protocol: "", search: "" } };
      t(i, s);
      var a = "undefined" != typeof window ? window : {};
      t(a, { document: s, navigator: { userAgent: "" }, location: { hash: "", host: "", hostname: "", href: "", origin: "", pathname: "", protocol: "", search: "" }, history: { replaceState: function() {
      }, pushState: function() {
      }, go: function() {
      }, back: function() {
      } }, CustomEvent: function() {
        return this;
      }, addEventListener: function() {
      }, removeEventListener: function() {
      }, getComputedStyle: function() {
        return { getPropertyValue: function() {
          return "";
        } };
      }, Image: function() {
      }, Date: function() {
      }, screen: {}, setTimeout: function() {
      }, clearTimeout: function() {
      }, matchMedia: function() {
        return {};
      } });
      var r = function(e2) {
        for (var t2 = 0; t2 < e2.length; t2 += 1)
          this[t2] = e2[t2];
        return this.length = e2.length, this;
      };
      function n(e2, t2) {
        var s2 = [], n2 = 0;
        if (e2 && !t2 && e2 instanceof r)
          return e2;
        if (e2) {
          if ("string" == typeof e2) {
            var o2, l2, d2 = e2.trim();
            if (d2.indexOf("<") >= 0 && d2.indexOf(">") >= 0) {
              var h2 = "div";
              for (0 === d2.indexOf("<li") && (h2 = "ul"), 0 === d2.indexOf("<tr") && (h2 = "tbody"), 0 !== d2.indexOf("<td") && 0 !== d2.indexOf("<th") || (h2 = "tr"), 0 === d2.indexOf("<tbody") && (h2 = "table"), 0 === d2.indexOf("<option") && (h2 = "select"), (l2 = i.createElement(h2)).innerHTML = d2, n2 = 0; n2 < l2.childNodes.length; n2 += 1)
                s2.push(l2.childNodes[n2]);
            } else
              for (o2 = t2 || "#" !== e2[0] || e2.match(/[ .<>:~]/) ? (t2 || i).querySelectorAll(e2.trim()) : [i.getElementById(e2.trim().split("#")[1])], n2 = 0; n2 < o2.length; n2 += 1)
                o2[n2] && s2.push(o2[n2]);
          } else if (e2.nodeType || e2 === a || e2 === i)
            s2.push(e2);
          else if (e2.length > 0 && e2[0].nodeType)
            for (n2 = 0; n2 < e2.length; n2 += 1)
              s2.push(e2[n2]);
        }
        return new r(s2);
      }
      function o(e2) {
        for (var t2 = [], i2 = 0; i2 < e2.length; i2 += 1)
          -1 === t2.indexOf(e2[i2]) && t2.push(e2[i2]);
        return t2;
      }
      n.fn = r.prototype, n.Class = r, n.Dom7 = r;
      var l = { addClass: function(e2) {
        if (void 0 === e2)
          return this;
        for (var t2 = e2.split(" "), i2 = 0; i2 < t2.length; i2 += 1)
          for (var s2 = 0; s2 < this.length; s2 += 1)
            void 0 !== this[s2] && void 0 !== this[s2].classList && this[s2].classList.add(t2[i2]);
        return this;
      }, removeClass: function(e2) {
        for (var t2 = e2.split(" "), i2 = 0; i2 < t2.length; i2 += 1)
          for (var s2 = 0; s2 < this.length; s2 += 1)
            void 0 !== this[s2] && void 0 !== this[s2].classList && this[s2].classList.remove(t2[i2]);
        return this;
      }, hasClass: function(e2) {
        return !!this[0] && this[0].classList.contains(e2);
      }, toggleClass: function(e2) {
        for (var t2 = e2.split(" "), i2 = 0; i2 < t2.length; i2 += 1)
          for (var s2 = 0; s2 < this.length; s2 += 1)
            void 0 !== this[s2] && void 0 !== this[s2].classList && this[s2].classList.toggle(t2[i2]);
        return this;
      }, attr: function(e2, t2) {
        var i2 = arguments;
        if (1 === arguments.length && "string" == typeof e2)
          return this[0] ? this[0].getAttribute(e2) : void 0;
        for (var s2 = 0; s2 < this.length; s2 += 1)
          if (2 === i2.length)
            this[s2].setAttribute(e2, t2);
          else
            for (var a2 in e2)
              this[s2][a2] = e2[a2], this[s2].setAttribute(a2, e2[a2]);
        return this;
      }, removeAttr: function(e2) {
        for (var t2 = 0; t2 < this.length; t2 += 1)
          this[t2].removeAttribute(e2);
        return this;
      }, data: function(e2, t2) {
        var i2;
        if (void 0 !== t2) {
          for (var s2 = 0; s2 < this.length; s2 += 1)
            (i2 = this[s2]).dom7ElementDataStorage || (i2.dom7ElementDataStorage = {}), i2.dom7ElementDataStorage[e2] = t2;
          return this;
        }
        if (i2 = this[0]) {
          if (i2.dom7ElementDataStorage && e2 in i2.dom7ElementDataStorage)
            return i2.dom7ElementDataStorage[e2];
          var a2 = i2.getAttribute("data-" + e2);
          return a2 || void 0;
        }
      }, transform: function(e2) {
        for (var t2 = 0; t2 < this.length; t2 += 1) {
          var i2 = this[t2].style;
          i2.webkitTransform = e2, i2.transform = e2;
        }
        return this;
      }, transition: function(e2) {
        "string" != typeof e2 && (e2 += "ms");
        for (var t2 = 0; t2 < this.length; t2 += 1) {
          var i2 = this[t2].style;
          i2.webkitTransitionDuration = e2, i2.transitionDuration = e2;
        }
        return this;
      }, on: function() {
        for (var e2, t2 = [], i2 = arguments.length; i2--; )
          t2[i2] = arguments[i2];
        var s2 = t2[0], a2 = t2[1], r2 = t2[2], o2 = t2[3];
        function l2(e3) {
          var t3 = e3.target;
          if (t3) {
            var i3 = e3.target.dom7EventData || [];
            if (i3.indexOf(e3) < 0 && i3.unshift(e3), n(t3).is(a2))
              r2.apply(t3, i3);
            else
              for (var s3 = n(t3).parents(), o3 = 0; o3 < s3.length; o3 += 1)
                n(s3[o3]).is(a2) && r2.apply(s3[o3], i3);
          }
        }
        function d2(e3) {
          var t3 = e3 && e3.target && e3.target.dom7EventData || [];
          t3.indexOf(e3) < 0 && t3.unshift(e3), r2.apply(this, t3);
        }
        "function" == typeof t2[1] && (s2 = (e2 = t2)[0], r2 = e2[1], o2 = e2[2], a2 = void 0), o2 || (o2 = false);
        for (var h2, p2 = s2.split(" "), c2 = 0; c2 < this.length; c2 += 1) {
          var u2 = this[c2];
          if (a2)
            for (h2 = 0; h2 < p2.length; h2 += 1) {
              var v2 = p2[h2];
              u2.dom7LiveListeners || (u2.dom7LiveListeners = {}), u2.dom7LiveListeners[v2] || (u2.dom7LiveListeners[v2] = []), u2.dom7LiveListeners[v2].push({ listener: r2, proxyListener: l2 }), u2.addEventListener(v2, l2, o2);
            }
          else
            for (h2 = 0; h2 < p2.length; h2 += 1) {
              var f2 = p2[h2];
              u2.dom7Listeners || (u2.dom7Listeners = {}), u2.dom7Listeners[f2] || (u2.dom7Listeners[f2] = []), u2.dom7Listeners[f2].push({ listener: r2, proxyListener: d2 }), u2.addEventListener(f2, d2, o2);
            }
        }
        return this;
      }, off: function() {
        for (var e2, t2 = [], i2 = arguments.length; i2--; )
          t2[i2] = arguments[i2];
        var s2 = t2[0], a2 = t2[1], r2 = t2[2], n2 = t2[3];
        "function" == typeof t2[1] && (s2 = (e2 = t2)[0], r2 = e2[1], n2 = e2[2], a2 = void 0), n2 || (n2 = false);
        for (var o2 = s2.split(" "), l2 = 0; l2 < o2.length; l2 += 1)
          for (var d2 = o2[l2], h2 = 0; h2 < this.length; h2 += 1) {
            var p2 = this[h2], c2 = void 0;
            if (!a2 && p2.dom7Listeners ? c2 = p2.dom7Listeners[d2] : a2 && p2.dom7LiveListeners && (c2 = p2.dom7LiveListeners[d2]), c2 && c2.length)
              for (var u2 = c2.length - 1; u2 >= 0; u2 -= 1) {
                var v2 = c2[u2];
                r2 && v2.listener === r2 || r2 && v2.listener && v2.listener.dom7proxy && v2.listener.dom7proxy === r2 ? (p2.removeEventListener(d2, v2.proxyListener, n2), c2.splice(u2, 1)) : r2 || (p2.removeEventListener(d2, v2.proxyListener, n2), c2.splice(u2, 1));
              }
          }
        return this;
      }, trigger: function() {
        for (var e2 = [], t2 = arguments.length; t2--; )
          e2[t2] = arguments[t2];
        for (var s2 = e2[0].split(" "), r2 = e2[1], n2 = 0; n2 < s2.length; n2 += 1)
          for (var o2 = s2[n2], l2 = 0; l2 < this.length; l2 += 1) {
            var d2 = this[l2], h2 = void 0;
            try {
              h2 = new a.CustomEvent(o2, { detail: r2, bubbles: true, cancelable: true });
            } catch (e3) {
              (h2 = i.createEvent("Event")).initEvent(o2, true, true), h2.detail = r2;
            }
            d2.dom7EventData = e2.filter(function(e3, t3) {
              return t3 > 0;
            }), d2.dispatchEvent(h2), d2.dom7EventData = [], delete d2.dom7EventData;
          }
        return this;
      }, transitionEnd: function(e2) {
        var t2, i2 = ["webkitTransitionEnd", "transitionend"], s2 = this;
        function a2(r2) {
          if (r2.target === this)
            for (e2.call(this, r2), t2 = 0; t2 < i2.length; t2 += 1)
              s2.off(i2[t2], a2);
        }
        if (e2)
          for (t2 = 0; t2 < i2.length; t2 += 1)
            s2.on(i2[t2], a2);
        return this;
      }, outerWidth: function(e2) {
        if (this.length > 0) {
          if (e2) {
            var t2 = this.styles();
            return this[0].offsetWidth + parseFloat(t2.getPropertyValue("margin-right")) + parseFloat(t2.getPropertyValue("margin-left"));
          }
          return this[0].offsetWidth;
        }
        return null;
      }, outerHeight: function(e2) {
        if (this.length > 0) {
          if (e2) {
            var t2 = this.styles();
            return this[0].offsetHeight + parseFloat(t2.getPropertyValue("margin-top")) + parseFloat(t2.getPropertyValue("margin-bottom"));
          }
          return this[0].offsetHeight;
        }
        return null;
      }, offset: function() {
        if (this.length > 0) {
          var e2 = this[0], t2 = e2.getBoundingClientRect(), s2 = i.body, r2 = e2.clientTop || s2.clientTop || 0, n2 = e2.clientLeft || s2.clientLeft || 0, o2 = e2 === a ? a.scrollY : e2.scrollTop, l2 = e2 === a ? a.scrollX : e2.scrollLeft;
          return { top: t2.top + o2 - r2, left: t2.left + l2 - n2 };
        }
        return null;
      }, css: function(e2, t2) {
        var i2;
        if (1 === arguments.length) {
          if ("string" != typeof e2) {
            for (i2 = 0; i2 < this.length; i2 += 1)
              for (var s2 in e2)
                this[i2].style[s2] = e2[s2];
            return this;
          }
          if (this[0])
            return a.getComputedStyle(this[0], null).getPropertyValue(e2);
        }
        if (2 === arguments.length && "string" == typeof e2) {
          for (i2 = 0; i2 < this.length; i2 += 1)
            this[i2].style[e2] = t2;
          return this;
        }
        return this;
      }, each: function(e2) {
        if (!e2)
          return this;
        for (var t2 = 0; t2 < this.length; t2 += 1)
          if (false === e2.call(this[t2], t2, this[t2]))
            return this;
        return this;
      }, html: function(e2) {
        if (void 0 === e2)
          return this[0] ? this[0].innerHTML : void 0;
        for (var t2 = 0; t2 < this.length; t2 += 1)
          this[t2].innerHTML = e2;
        return this;
      }, text: function(e2) {
        if (void 0 === e2)
          return this[0] ? this[0].textContent.trim() : null;
        for (var t2 = 0; t2 < this.length; t2 += 1)
          this[t2].textContent = e2;
        return this;
      }, is: function(e2) {
        var t2, s2, o2 = this[0];
        if (!o2 || void 0 === e2)
          return false;
        if ("string" == typeof e2) {
          if (o2.matches)
            return o2.matches(e2);
          if (o2.webkitMatchesSelector)
            return o2.webkitMatchesSelector(e2);
          if (o2.msMatchesSelector)
            return o2.msMatchesSelector(e2);
          for (t2 = n(e2), s2 = 0; s2 < t2.length; s2 += 1)
            if (t2[s2] === o2)
              return true;
          return false;
        }
        if (e2 === i)
          return o2 === i;
        if (e2 === a)
          return o2 === a;
        if (e2.nodeType || e2 instanceof r) {
          for (t2 = e2.nodeType ? [e2] : e2, s2 = 0; s2 < t2.length; s2 += 1)
            if (t2[s2] === o2)
              return true;
          return false;
        }
        return false;
      }, index: function() {
        var e2, t2 = this[0];
        if (t2) {
          for (e2 = 0; null !== (t2 = t2.previousSibling); )
            1 === t2.nodeType && (e2 += 1);
          return e2;
        }
      }, eq: function(e2) {
        if (void 0 === e2)
          return this;
        var t2, i2 = this.length;
        return new r(e2 > i2 - 1 ? [] : e2 < 0 ? (t2 = i2 + e2) < 0 ? [] : [this[t2]] : [this[e2]]);
      }, append: function() {
        for (var e2, t2 = [], s2 = arguments.length; s2--; )
          t2[s2] = arguments[s2];
        for (var a2 = 0; a2 < t2.length; a2 += 1) {
          e2 = t2[a2];
          for (var n2 = 0; n2 < this.length; n2 += 1)
            if ("string" == typeof e2) {
              var o2 = i.createElement("div");
              for (o2.innerHTML = e2; o2.firstChild; )
                this[n2].appendChild(o2.firstChild);
            } else if (e2 instanceof r)
              for (var l2 = 0; l2 < e2.length; l2 += 1)
                this[n2].appendChild(e2[l2]);
            else
              this[n2].appendChild(e2);
        }
        return this;
      }, prepend: function(e2) {
        var t2, s2;
        for (t2 = 0; t2 < this.length; t2 += 1)
          if ("string" == typeof e2) {
            var a2 = i.createElement("div");
            for (a2.innerHTML = e2, s2 = a2.childNodes.length - 1; s2 >= 0; s2 -= 1)
              this[t2].insertBefore(a2.childNodes[s2], this[t2].childNodes[0]);
          } else if (e2 instanceof r)
            for (s2 = 0; s2 < e2.length; s2 += 1)
              this[t2].insertBefore(e2[s2], this[t2].childNodes[0]);
          else
            this[t2].insertBefore(e2, this[t2].childNodes[0]);
        return this;
      }, next: function(e2) {
        return this.length > 0 ? e2 ? this[0].nextElementSibling && n(this[0].nextElementSibling).is(e2) ? new r([this[0].nextElementSibling]) : new r([]) : this[0].nextElementSibling ? new r([this[0].nextElementSibling]) : new r([]) : new r([]);
      }, nextAll: function(e2) {
        var t2 = [], i2 = this[0];
        if (!i2)
          return new r([]);
        for (; i2.nextElementSibling; ) {
          var s2 = i2.nextElementSibling;
          e2 ? n(s2).is(e2) && t2.push(s2) : t2.push(s2), i2 = s2;
        }
        return new r(t2);
      }, prev: function(e2) {
        if (this.length > 0) {
          var t2 = this[0];
          return e2 ? t2.previousElementSibling && n(t2.previousElementSibling).is(e2) ? new r([t2.previousElementSibling]) : new r([]) : t2.previousElementSibling ? new r([t2.previousElementSibling]) : new r([]);
        }
        return new r([]);
      }, prevAll: function(e2) {
        var t2 = [], i2 = this[0];
        if (!i2)
          return new r([]);
        for (; i2.previousElementSibling; ) {
          var s2 = i2.previousElementSibling;
          e2 ? n(s2).is(e2) && t2.push(s2) : t2.push(s2), i2 = s2;
        }
        return new r(t2);
      }, parent: function(e2) {
        for (var t2 = [], i2 = 0; i2 < this.length; i2 += 1)
          null !== this[i2].parentNode && (e2 ? n(this[i2].parentNode).is(e2) && t2.push(this[i2].parentNode) : t2.push(this[i2].parentNode));
        return n(o(t2));
      }, parents: function(e2) {
        for (var t2 = [], i2 = 0; i2 < this.length; i2 += 1)
          for (var s2 = this[i2].parentNode; s2; )
            e2 ? n(s2).is(e2) && t2.push(s2) : t2.push(s2), s2 = s2.parentNode;
        return n(o(t2));
      }, closest: function(e2) {
        var t2 = this;
        return void 0 === e2 ? new r([]) : (t2.is(e2) || (t2 = t2.parents(e2).eq(0)), t2);
      }, find: function(e2) {
        for (var t2 = [], i2 = 0; i2 < this.length; i2 += 1)
          for (var s2 = this[i2].querySelectorAll(e2), a2 = 0; a2 < s2.length; a2 += 1)
            t2.push(s2[a2]);
        return new r(t2);
      }, children: function(e2) {
        for (var t2 = [], i2 = 0; i2 < this.length; i2 += 1)
          for (var s2 = this[i2].childNodes, a2 = 0; a2 < s2.length; a2 += 1)
            e2 ? 1 === s2[a2].nodeType && n(s2[a2]).is(e2) && t2.push(s2[a2]) : 1 === s2[a2].nodeType && t2.push(s2[a2]);
        return new r(o(t2));
      }, filter: function(e2) {
        for (var t2 = [], i2 = 0; i2 < this.length; i2 += 1)
          e2.call(this[i2], i2, this[i2]) && t2.push(this[i2]);
        return new r(t2);
      }, remove: function() {
        for (var e2 = 0; e2 < this.length; e2 += 1)
          this[e2].parentNode && this[e2].parentNode.removeChild(this[e2]);
        return this;
      }, add: function() {
        for (var e2 = [], t2 = arguments.length; t2--; )
          e2[t2] = arguments[t2];
        var i2, s2, a2 = this;
        for (i2 = 0; i2 < e2.length; i2 += 1) {
          var r2 = n(e2[i2]);
          for (s2 = 0; s2 < r2.length; s2 += 1)
            a2[a2.length] = r2[s2], a2.length += 1;
        }
        return a2;
      }, styles: function() {
        return this[0] ? a.getComputedStyle(this[0], null) : {};
      } };
      Object.keys(l).forEach(function(e2) {
        n.fn[e2] = n.fn[e2] || l[e2];
      });
      var d = { deleteProps: function(e2) {
        var t2 = e2;
        Object.keys(t2).forEach(function(e3) {
          try {
            t2[e3] = null;
          } catch (e4) {
          }
          try {
            delete t2[e3];
          } catch (e4) {
          }
        });
      }, nextTick: function(e2, t2) {
        return void 0 === t2 && (t2 = 0), setTimeout(e2, t2);
      }, now: function() {
        return Date.now();
      }, getTranslate: function(e2, t2) {
        var i2, s2, r2;
        void 0 === t2 && (t2 = "x");
        var n2 = a.getComputedStyle(e2, null);
        return a.WebKitCSSMatrix ? ((s2 = n2.transform || n2.webkitTransform).split(",").length > 6 && (s2 = s2.split(", ").map(function(e3) {
          return e3.replace(",", ".");
        }).join(", ")), r2 = new a.WebKitCSSMatrix("none" === s2 ? "" : s2)) : i2 = (r2 = n2.MozTransform || n2.OTransform || n2.MsTransform || n2.msTransform || n2.transform || n2.getPropertyValue("transform").replace("translate(", "matrix(1, 0, 0, 1,")).toString().split(","), "x" === t2 && (s2 = a.WebKitCSSMatrix ? r2.m41 : 16 === i2.length ? parseFloat(i2[12]) : parseFloat(i2[4])), "y" === t2 && (s2 = a.WebKitCSSMatrix ? r2.m42 : 16 === i2.length ? parseFloat(i2[13]) : parseFloat(i2[5])), s2 || 0;
      }, parseUrlQuery: function(e2) {
        var t2, i2, s2, r2, n2 = {}, o2 = e2 || a.location.href;
        if ("string" == typeof o2 && o2.length)
          for (r2 = (i2 = (o2 = o2.indexOf("?") > -1 ? o2.replace(/\S*\?/, "") : "").split("&").filter(function(e3) {
            return "" !== e3;
          })).length, t2 = 0; t2 < r2; t2 += 1)
            s2 = i2[t2].replace(/#\S+/g, "").split("="), n2[decodeURIComponent(s2[0])] = void 0 === s2[1] ? void 0 : decodeURIComponent(s2[1]) || "";
        return n2;
      }, isObject: function(e2) {
        return "object" == typeof e2 && null !== e2 && e2.constructor && e2.constructor === Object;
      }, extend: function() {
        for (var e2 = [], t2 = arguments.length; t2--; )
          e2[t2] = arguments[t2];
        for (var i2 = Object(e2[0]), s2 = 1; s2 < e2.length; s2 += 1) {
          var a2 = e2[s2];
          if (null != a2)
            for (var r2 = Object.keys(Object(a2)), n2 = 0, o2 = r2.length; n2 < o2; n2 += 1) {
              var l2 = r2[n2], h2 = Object.getOwnPropertyDescriptor(a2, l2);
              void 0 !== h2 && h2.enumerable && (d.isObject(i2[l2]) && d.isObject(a2[l2]) ? d.extend(i2[l2], a2[l2]) : !d.isObject(i2[l2]) && d.isObject(a2[l2]) ? (i2[l2] = {}, d.extend(i2[l2], a2[l2])) : i2[l2] = a2[l2]);
            }
        }
        return i2;
      } }, h = { touch: !!("ontouchstart" in a || a.DocumentTouch && i instanceof a.DocumentTouch), pointerEvents: !!a.PointerEvent && "maxTouchPoints" in a.navigator && a.navigator.maxTouchPoints >= 0, observer: "MutationObserver" in a || "WebkitMutationObserver" in a, passiveListener: function() {
        var e2 = false;
        try {
          var t2 = Object.defineProperty({}, "passive", { get: function() {
            e2 = true;
          } });
          a.addEventListener("testPassiveListener", null, t2);
        } catch (e3) {
        }
        return e2;
      }(), gestures: "ongesturestart" in a }, p = function(e2) {
        void 0 === e2 && (e2 = {});
        var t2 = this;
        t2.params = e2, t2.eventsListeners = {}, t2.params && t2.params.on && Object.keys(t2.params.on).forEach(function(e3) {
          t2.on(e3, t2.params.on[e3]);
        });
      }, c = { components: { configurable: true } };
      p.prototype.on = function(e2, t2, i2) {
        var s2 = this;
        if ("function" != typeof t2)
          return s2;
        var a2 = i2 ? "unshift" : "push";
        return e2.split(" ").forEach(function(e3) {
          s2.eventsListeners[e3] || (s2.eventsListeners[e3] = []), s2.eventsListeners[e3][a2](t2);
        }), s2;
      }, p.prototype.once = function(e2, t2, i2) {
        var s2 = this;
        if ("function" != typeof t2)
          return s2;
        function a2() {
          for (var i3 = [], r2 = arguments.length; r2--; )
            i3[r2] = arguments[r2];
          s2.off(e2, a2), a2.f7proxy && delete a2.f7proxy, t2.apply(s2, i3);
        }
        return a2.f7proxy = t2, s2.on(e2, a2, i2);
      }, p.prototype.off = function(e2, t2) {
        var i2 = this;
        return i2.eventsListeners ? (e2.split(" ").forEach(function(e3) {
          void 0 === t2 ? i2.eventsListeners[e3] = [] : i2.eventsListeners[e3] && i2.eventsListeners[e3].length && i2.eventsListeners[e3].forEach(function(s2, a2) {
            (s2 === t2 || s2.f7proxy && s2.f7proxy === t2) && i2.eventsListeners[e3].splice(a2, 1);
          });
        }), i2) : i2;
      }, p.prototype.emit = function() {
        for (var e2 = [], t2 = arguments.length; t2--; )
          e2[t2] = arguments[t2];
        var i2, s2, a2, r2 = this;
        if (!r2.eventsListeners)
          return r2;
        "string" == typeof e2[0] || Array.isArray(e2[0]) ? (i2 = e2[0], s2 = e2.slice(1, e2.length), a2 = r2) : (i2 = e2[0].events, s2 = e2[0].data, a2 = e2[0].context || r2);
        var n2 = Array.isArray(i2) ? i2 : i2.split(" ");
        return n2.forEach(function(e3) {
          if (r2.eventsListeners && r2.eventsListeners[e3]) {
            var t3 = [];
            r2.eventsListeners[e3].forEach(function(e4) {
              t3.push(e4);
            }), t3.forEach(function(e4) {
              e4.apply(a2, s2);
            });
          }
        }), r2;
      }, p.prototype.useModulesParams = function(e2) {
        var t2 = this;
        t2.modules && Object.keys(t2.modules).forEach(function(i2) {
          var s2 = t2.modules[i2];
          s2.params && d.extend(e2, s2.params);
        });
      }, p.prototype.useModules = function(e2) {
        void 0 === e2 && (e2 = {});
        var t2 = this;
        t2.modules && Object.keys(t2.modules).forEach(function(i2) {
          var s2 = t2.modules[i2], a2 = e2[i2] || {};
          s2.instance && Object.keys(s2.instance).forEach(function(e3) {
            var i3 = s2.instance[e3];
            t2[e3] = "function" == typeof i3 ? i3.bind(t2) : i3;
          }), s2.on && t2.on && Object.keys(s2.on).forEach(function(e3) {
            t2.on(e3, s2.on[e3]);
          }), s2.create && s2.create.bind(t2)(a2);
        });
      }, c.components.set = function(e2) {
        this.use && this.use(e2);
      }, p.installModule = function(e2) {
        for (var t2 = [], i2 = arguments.length - 1; i2-- > 0; )
          t2[i2] = arguments[i2 + 1];
        var s2 = this;
        s2.prototype.modules || (s2.prototype.modules = {});
        var a2 = e2.name || Object.keys(s2.prototype.modules).length + "_" + d.now();
        return s2.prototype.modules[a2] = e2, e2.proto && Object.keys(e2.proto).forEach(function(t3) {
          s2.prototype[t3] = e2.proto[t3];
        }), e2.static && Object.keys(e2.static).forEach(function(t3) {
          s2[t3] = e2.static[t3];
        }), e2.install && e2.install.apply(s2, t2), s2;
      }, p.use = function(e2) {
        for (var t2 = [], i2 = arguments.length - 1; i2-- > 0; )
          t2[i2] = arguments[i2 + 1];
        var s2 = this;
        return Array.isArray(e2) ? (e2.forEach(function(e3) {
          return s2.installModule(e3);
        }), s2) : s2.installModule.apply(s2, [e2].concat(t2));
      }, Object.defineProperties(p, c);
      var u = { updateSize: function() {
        var e2, t2, i2 = this.$el;
        e2 = void 0 !== this.params.width ? this.params.width : i2[0].clientWidth, t2 = void 0 !== this.params.height ? this.params.height : i2[0].clientHeight, 0 === e2 && this.isHorizontal() || 0 === t2 && this.isVertical() || (e2 = e2 - parseInt(i2.css("padding-left"), 10) - parseInt(i2.css("padding-right"), 10), t2 = t2 - parseInt(i2.css("padding-top"), 10) - parseInt(i2.css("padding-bottom"), 10), d.extend(this, { width: e2, height: t2, size: this.isHorizontal() ? e2 : t2 }));
      }, updateSlides: function() {
        var e2 = this.params, t2 = this.$wrapperEl, i2 = this.size, s2 = this.rtlTranslate, r2 = this.wrongRTL, n2 = this.virtual && e2.virtual.enabled, o2 = n2 ? this.virtual.slides.length : this.slides.length, l2 = t2.children("." + this.params.slideClass), h2 = n2 ? this.virtual.slides.length : l2.length, p2 = [], c2 = [], u2 = [];
        function v2(t3) {
          return !e2.cssMode || t3 !== l2.length - 1;
        }
        var f2 = e2.slidesOffsetBefore;
        "function" == typeof f2 && (f2 = e2.slidesOffsetBefore.call(this));
        var m2 = e2.slidesOffsetAfter;
        "function" == typeof m2 && (m2 = e2.slidesOffsetAfter.call(this));
        var g2 = this.snapGrid.length, b2 = this.snapGrid.length, w2 = e2.spaceBetween, y2 = -f2, x2 = 0, E2 = 0;
        if (void 0 !== i2) {
          var T2, S2;
          "string" == typeof w2 && w2.indexOf("%") >= 0 && (w2 = parseFloat(w2.replace("%", "")) / 100 * i2), this.virtualSize = -w2, s2 ? l2.css({ marginLeft: "", marginTop: "" }) : l2.css({ marginRight: "", marginBottom: "" }), e2.slidesPerColumn > 1 && (T2 = Math.floor(h2 / e2.slidesPerColumn) === h2 / this.params.slidesPerColumn ? h2 : Math.ceil(h2 / e2.slidesPerColumn) * e2.slidesPerColumn, "auto" !== e2.slidesPerView && "row" === e2.slidesPerColumnFill && (T2 = Math.max(T2, e2.slidesPerView * e2.slidesPerColumn)));
          for (var C2, M2 = e2.slidesPerColumn, P2 = T2 / M2, z2 = Math.floor(h2 / e2.slidesPerColumn), k2 = 0; k2 < h2; k2 += 1) {
            S2 = 0;
            var $2 = l2.eq(k2);
            if (e2.slidesPerColumn > 1) {
              var L2 = void 0, I2 = void 0, D2 = void 0;
              if ("row" === e2.slidesPerColumnFill && e2.slidesPerGroup > 1) {
                var O2 = Math.floor(k2 / (e2.slidesPerGroup * e2.slidesPerColumn)), A2 = k2 - e2.slidesPerColumn * e2.slidesPerGroup * O2, G2 = 0 === O2 ? e2.slidesPerGroup : Math.min(Math.ceil((h2 - O2 * M2 * e2.slidesPerGroup) / M2), e2.slidesPerGroup);
                L2 = (I2 = A2 - (D2 = Math.floor(A2 / G2)) * G2 + O2 * e2.slidesPerGroup) + D2 * T2 / M2, $2.css({ "-webkit-box-ordinal-group": L2, "-moz-box-ordinal-group": L2, "-ms-flex-order": L2, "-webkit-order": L2, order: L2 });
              } else
                "column" === e2.slidesPerColumnFill ? (D2 = k2 - (I2 = Math.floor(k2 / M2)) * M2, (I2 > z2 || I2 === z2 && D2 === M2 - 1) && (D2 += 1) >= M2 && (D2 = 0, I2 += 1)) : I2 = k2 - (D2 = Math.floor(k2 / P2)) * P2;
              $2.css("margin-" + (this.isHorizontal() ? "top" : "left"), 0 !== D2 && e2.spaceBetween && e2.spaceBetween + "px");
            }
            if ("none" !== $2.css("display")) {
              if ("auto" === e2.slidesPerView) {
                var H2 = a.getComputedStyle($2[0], null), B2 = $2[0].style.transform, N2 = $2[0].style.webkitTransform;
                if (B2 && ($2[0].style.transform = "none"), N2 && ($2[0].style.webkitTransform = "none"), e2.roundLengths)
                  S2 = this.isHorizontal() ? $2.outerWidth(true) : $2.outerHeight(true);
                else if (this.isHorizontal()) {
                  var X2 = parseFloat(H2.getPropertyValue("width")), V2 = parseFloat(H2.getPropertyValue("padding-left")), Y2 = parseFloat(H2.getPropertyValue("padding-right")), F2 = parseFloat(H2.getPropertyValue("margin-left")), W2 = parseFloat(H2.getPropertyValue("margin-right")), R2 = H2.getPropertyValue("box-sizing");
                  S2 = R2 && "border-box" === R2 ? X2 + F2 + W2 : X2 + V2 + Y2 + F2 + W2;
                } else {
                  var q2 = parseFloat(H2.getPropertyValue("height")), j2 = parseFloat(H2.getPropertyValue("padding-top")), K2 = parseFloat(H2.getPropertyValue("padding-bottom")), U2 = parseFloat(H2.getPropertyValue("margin-top")), _2 = parseFloat(H2.getPropertyValue("margin-bottom")), Z2 = H2.getPropertyValue("box-sizing");
                  S2 = Z2 && "border-box" === Z2 ? q2 + U2 + _2 : q2 + j2 + K2 + U2 + _2;
                }
                B2 && ($2[0].style.transform = B2), N2 && ($2[0].style.webkitTransform = N2), e2.roundLengths && (S2 = Math.floor(S2));
              } else
                S2 = (i2 - (e2.slidesPerView - 1) * w2) / e2.slidesPerView, e2.roundLengths && (S2 = Math.floor(S2)), l2[k2] && (this.isHorizontal() ? l2[k2].style.width = S2 + "px" : l2[k2].style.height = S2 + "px");
              l2[k2] && (l2[k2].swiperSlideSize = S2), u2.push(S2), e2.centeredSlides ? (y2 = y2 + S2 / 2 + x2 / 2 + w2, 0 === x2 && 0 !== k2 && (y2 = y2 - i2 / 2 - w2), 0 === k2 && (y2 = y2 - i2 / 2 - w2), Math.abs(y2) < 1e-3 && (y2 = 0), e2.roundLengths && (y2 = Math.floor(y2)), E2 % e2.slidesPerGroup == 0 && p2.push(y2), c2.push(y2)) : (e2.roundLengths && (y2 = Math.floor(y2)), (E2 - Math.min(this.params.slidesPerGroupSkip, E2)) % this.params.slidesPerGroup == 0 && p2.push(y2), c2.push(y2), y2 = y2 + S2 + w2), this.virtualSize += S2 + w2, x2 = S2, E2 += 1;
            }
          }
          if (this.virtualSize = Math.max(this.virtualSize, i2) + m2, s2 && r2 && ("slide" === e2.effect || "coverflow" === e2.effect) && t2.css({ width: this.virtualSize + e2.spaceBetween + "px" }), e2.setWrapperSize && (this.isHorizontal() ? t2.css({ width: this.virtualSize + e2.spaceBetween + "px" }) : t2.css({ height: this.virtualSize + e2.spaceBetween + "px" })), e2.slidesPerColumn > 1 && (this.virtualSize = (S2 + e2.spaceBetween) * T2, this.virtualSize = Math.ceil(this.virtualSize / e2.slidesPerColumn) - e2.spaceBetween, this.isHorizontal() ? t2.css({ width: this.virtualSize + e2.spaceBetween + "px" }) : t2.css({ height: this.virtualSize + e2.spaceBetween + "px" }), e2.centeredSlides)) {
            C2 = [];
            for (var Q2 = 0; Q2 < p2.length; Q2 += 1) {
              var J2 = p2[Q2];
              e2.roundLengths && (J2 = Math.floor(J2)), p2[Q2] < this.virtualSize + p2[0] && C2.push(J2);
            }
            p2 = C2;
          }
          if (!e2.centeredSlides) {
            C2 = [];
            for (var ee2 = 0; ee2 < p2.length; ee2 += 1) {
              var te2 = p2[ee2];
              e2.roundLengths && (te2 = Math.floor(te2)), p2[ee2] <= this.virtualSize - i2 && C2.push(te2);
            }
            p2 = C2, Math.floor(this.virtualSize - i2) - Math.floor(p2[p2.length - 1]) > 1 && p2.push(this.virtualSize - i2);
          }
          if (0 === p2.length && (p2 = [0]), 0 !== e2.spaceBetween && (this.isHorizontal() ? s2 ? l2.filter(v2).css({ marginLeft: w2 + "px" }) : l2.filter(v2).css({ marginRight: w2 + "px" }) : l2.filter(v2).css({ marginBottom: w2 + "px" })), e2.centeredSlides && e2.centeredSlidesBounds) {
            var ie2 = 0;
            u2.forEach(function(t3) {
              ie2 += t3 + (e2.spaceBetween ? e2.spaceBetween : 0);
            });
            var se2 = (ie2 -= e2.spaceBetween) - i2;
            p2 = p2.map(function(e3) {
              return e3 < 0 ? -f2 : e3 > se2 ? se2 + m2 : e3;
            });
          }
          if (e2.centerInsufficientSlides) {
            var ae2 = 0;
            if (u2.forEach(function(t3) {
              ae2 += t3 + (e2.spaceBetween ? e2.spaceBetween : 0);
            }), (ae2 -= e2.spaceBetween) < i2) {
              var re2 = (i2 - ae2) / 2;
              p2.forEach(function(e3, t3) {
                p2[t3] = e3 - re2;
              }), c2.forEach(function(e3, t3) {
                c2[t3] = e3 + re2;
              });
            }
          }
          d.extend(this, { slides: l2, snapGrid: p2, slidesGrid: c2, slidesSizesGrid: u2 }), h2 !== o2 && this.emit("slidesLengthChange"), p2.length !== g2 && (this.params.watchOverflow && this.checkOverflow(), this.emit("snapGridLengthChange")), c2.length !== b2 && this.emit("slidesGridLengthChange"), (e2.watchSlidesProgress || e2.watchSlidesVisibility) && this.updateSlidesOffset();
        }
      }, updateAutoHeight: function(e2) {
        var t2, i2 = [], s2 = 0;
        if ("number" == typeof e2 ? this.setTransition(e2) : true === e2 && this.setTransition(this.params.speed), "auto" !== this.params.slidesPerView && this.params.slidesPerView > 1)
          if (this.params.centeredSlides)
            this.visibleSlides.each(function(e3, t3) {
              i2.push(t3);
            });
          else
            for (t2 = 0; t2 < Math.ceil(this.params.slidesPerView); t2 += 1) {
              var a2 = this.activeIndex + t2;
              if (a2 > this.slides.length)
                break;
              i2.push(this.slides.eq(a2)[0]);
            }
        else
          i2.push(this.slides.eq(this.activeIndex)[0]);
        for (t2 = 0; t2 < i2.length; t2 += 1)
          if (void 0 !== i2[t2]) {
            var r2 = i2[t2].offsetHeight;
            s2 = r2 > s2 ? r2 : s2;
          }
        s2 && this.$wrapperEl.css("height", s2 + "px");
      }, updateSlidesOffset: function() {
        for (var e2 = this.slides, t2 = 0; t2 < e2.length; t2 += 1)
          e2[t2].swiperSlideOffset = this.isHorizontal() ? e2[t2].offsetLeft : e2[t2].offsetTop;
      }, updateSlidesProgress: function(e2) {
        void 0 === e2 && (e2 = this && this.translate || 0);
        var t2 = this.params, i2 = this.slides, s2 = this.rtlTranslate;
        if (0 !== i2.length) {
          void 0 === i2[0].swiperSlideOffset && this.updateSlidesOffset();
          var a2 = -e2;
          s2 && (a2 = e2), i2.removeClass(t2.slideVisibleClass), this.visibleSlidesIndexes = [], this.visibleSlides = [];
          for (var r2 = 0; r2 < i2.length; r2 += 1) {
            var o2 = i2[r2], l2 = (a2 + (t2.centeredSlides ? this.minTranslate() : 0) - o2.swiperSlideOffset) / (o2.swiperSlideSize + t2.spaceBetween);
            if (t2.watchSlidesVisibility || t2.centeredSlides && t2.autoHeight) {
              var d2 = -(a2 - o2.swiperSlideOffset), h2 = d2 + this.slidesSizesGrid[r2];
              (d2 >= 0 && d2 < this.size - 1 || h2 > 1 && h2 <= this.size || d2 <= 0 && h2 >= this.size) && (this.visibleSlides.push(o2), this.visibleSlidesIndexes.push(r2), i2.eq(r2).addClass(t2.slideVisibleClass));
            }
            o2.progress = s2 ? -l2 : l2;
          }
          this.visibleSlides = n(this.visibleSlides);
        }
      }, updateProgress: function(e2) {
        if (void 0 === e2) {
          var t2 = this.rtlTranslate ? -1 : 1;
          e2 = this && this.translate && this.translate * t2 || 0;
        }
        var i2 = this.params, s2 = this.maxTranslate() - this.minTranslate(), a2 = this.progress, r2 = this.isBeginning, n2 = this.isEnd, o2 = r2, l2 = n2;
        0 === s2 ? (a2 = 0, r2 = true, n2 = true) : (r2 = (a2 = (e2 - this.minTranslate()) / s2) <= 0, n2 = a2 >= 1), d.extend(this, { progress: a2, isBeginning: r2, isEnd: n2 }), (i2.watchSlidesProgress || i2.watchSlidesVisibility || i2.centeredSlides && i2.autoHeight) && this.updateSlidesProgress(e2), r2 && !o2 && this.emit("reachBeginning toEdge"), n2 && !l2 && this.emit("reachEnd toEdge"), (o2 && !r2 || l2 && !n2) && this.emit("fromEdge"), this.emit("progress", a2);
      }, updateSlidesClasses: function() {
        var e2, t2 = this.slides, i2 = this.params, s2 = this.$wrapperEl, a2 = this.activeIndex, r2 = this.realIndex, n2 = this.virtual && i2.virtual.enabled;
        t2.removeClass(i2.slideActiveClass + " " + i2.slideNextClass + " " + i2.slidePrevClass + " " + i2.slideDuplicateActiveClass + " " + i2.slideDuplicateNextClass + " " + i2.slideDuplicatePrevClass), (e2 = n2 ? this.$wrapperEl.find("." + i2.slideClass + '[data-swiper-slide-index="' + a2 + '"]') : t2.eq(a2)).addClass(i2.slideActiveClass), i2.loop && (e2.hasClass(i2.slideDuplicateClass) ? s2.children("." + i2.slideClass + ":not(." + i2.slideDuplicateClass + ')[data-swiper-slide-index="' + r2 + '"]').addClass(i2.slideDuplicateActiveClass) : s2.children("." + i2.slideClass + "." + i2.slideDuplicateClass + '[data-swiper-slide-index="' + r2 + '"]').addClass(i2.slideDuplicateActiveClass));
        var o2 = e2.nextAll("." + i2.slideClass).eq(0).addClass(i2.slideNextClass);
        i2.loop && 0 === o2.length && (o2 = t2.eq(0)).addClass(i2.slideNextClass);
        var l2 = e2.prevAll("." + i2.slideClass).eq(0).addClass(i2.slidePrevClass);
        i2.loop && 0 === l2.length && (l2 = t2.eq(-1)).addClass(i2.slidePrevClass), i2.loop && (o2.hasClass(i2.slideDuplicateClass) ? s2.children("." + i2.slideClass + ":not(." + i2.slideDuplicateClass + ')[data-swiper-slide-index="' + o2.attr("data-swiper-slide-index") + '"]').addClass(i2.slideDuplicateNextClass) : s2.children("." + i2.slideClass + "." + i2.slideDuplicateClass + '[data-swiper-slide-index="' + o2.attr("data-swiper-slide-index") + '"]').addClass(i2.slideDuplicateNextClass), l2.hasClass(i2.slideDuplicateClass) ? s2.children("." + i2.slideClass + ":not(." + i2.slideDuplicateClass + ')[data-swiper-slide-index="' + l2.attr("data-swiper-slide-index") + '"]').addClass(i2.slideDuplicatePrevClass) : s2.children("." + i2.slideClass + "." + i2.slideDuplicateClass + '[data-swiper-slide-index="' + l2.attr("data-swiper-slide-index") + '"]').addClass(i2.slideDuplicatePrevClass));
      }, updateActiveIndex: function(e2) {
        var t2, i2 = this.rtlTranslate ? this.translate : -this.translate, s2 = this.slidesGrid, a2 = this.snapGrid, r2 = this.params, n2 = this.activeIndex, o2 = this.realIndex, l2 = this.snapIndex, h2 = e2;
        if (void 0 === h2) {
          for (var p2 = 0; p2 < s2.length; p2 += 1)
            void 0 !== s2[p2 + 1] ? i2 >= s2[p2] && i2 < s2[p2 + 1] - (s2[p2 + 1] - s2[p2]) / 2 ? h2 = p2 : i2 >= s2[p2] && i2 < s2[p2 + 1] && (h2 = p2 + 1) : i2 >= s2[p2] && (h2 = p2);
          r2.normalizeSlideIndex && (h2 < 0 || void 0 === h2) && (h2 = 0);
        }
        if (a2.indexOf(i2) >= 0)
          t2 = a2.indexOf(i2);
        else {
          var c2 = Math.min(r2.slidesPerGroupSkip, h2);
          t2 = c2 + Math.floor((h2 - c2) / r2.slidesPerGroup);
        }
        if (t2 >= a2.length && (t2 = a2.length - 1), h2 !== n2) {
          var u2 = parseInt(this.slides.eq(h2).attr("data-swiper-slide-index") || h2, 10);
          d.extend(this, { snapIndex: t2, realIndex: u2, previousIndex: n2, activeIndex: h2 }), this.emit("activeIndexChange"), this.emit("snapIndexChange"), o2 !== u2 && this.emit("realIndexChange"), (this.initialized || this.params.runCallbacksOnInit) && this.emit("slideChange");
        } else
          t2 !== l2 && (this.snapIndex = t2, this.emit("snapIndexChange"));
      }, updateClickedSlide: function(e2) {
        var t2 = this.params, i2 = n(e2.target).closest("." + t2.slideClass)[0], s2 = false;
        if (i2)
          for (var a2 = 0; a2 < this.slides.length; a2 += 1)
            this.slides[a2] === i2 && (s2 = true);
        if (!i2 || !s2)
          return this.clickedSlide = void 0, void (this.clickedIndex = void 0);
        this.clickedSlide = i2, this.virtual && this.params.virtual.enabled ? this.clickedIndex = parseInt(n(i2).attr("data-swiper-slide-index"), 10) : this.clickedIndex = n(i2).index(), t2.slideToClickedSlide && void 0 !== this.clickedIndex && this.clickedIndex !== this.activeIndex && this.slideToClickedSlide();
      } };
      var v = { getTranslate: function(e2) {
        void 0 === e2 && (e2 = this.isHorizontal() ? "x" : "y");
        var t2 = this.params, i2 = this.rtlTranslate, s2 = this.translate, a2 = this.$wrapperEl;
        if (t2.virtualTranslate)
          return i2 ? -s2 : s2;
        if (t2.cssMode)
          return s2;
        var r2 = d.getTranslate(a2[0], e2);
        return i2 && (r2 = -r2), r2 || 0;
      }, setTranslate: function(e2, t2) {
        var i2 = this.rtlTranslate, s2 = this.params, a2 = this.$wrapperEl, r2 = this.wrapperEl, n2 = this.progress, o2 = 0, l2 = 0;
        this.isHorizontal() ? o2 = i2 ? -e2 : e2 : l2 = e2, s2.roundLengths && (o2 = Math.floor(o2), l2 = Math.floor(l2)), s2.cssMode ? r2[this.isHorizontal() ? "scrollLeft" : "scrollTop"] = this.isHorizontal() ? -o2 : -l2 : s2.virtualTranslate || a2.transform("translate3d(" + o2 + "px, " + l2 + "px, 0px)"), this.previousTranslate = this.translate, this.translate = this.isHorizontal() ? o2 : l2;
        var d2 = this.maxTranslate() - this.minTranslate();
        (0 === d2 ? 0 : (e2 - this.minTranslate()) / d2) !== n2 && this.updateProgress(e2), this.emit("setTranslate", this.translate, t2);
      }, minTranslate: function() {
        return -this.snapGrid[0];
      }, maxTranslate: function() {
        return -this.snapGrid[this.snapGrid.length - 1];
      }, translateTo: function(e2, t2, i2, s2, a2) {
        var r2;
        void 0 === e2 && (e2 = 0), void 0 === t2 && (t2 = this.params.speed), void 0 === i2 && (i2 = true), void 0 === s2 && (s2 = true);
        var n2 = this, o2 = n2.params, l2 = n2.wrapperEl;
        if (n2.animating && o2.preventInteractionOnTransition)
          return false;
        var d2, h2 = n2.minTranslate(), p2 = n2.maxTranslate();
        if (d2 = s2 && e2 > h2 ? h2 : s2 && e2 < p2 ? p2 : e2, n2.updateProgress(d2), o2.cssMode) {
          var c2 = n2.isHorizontal();
          return 0 === t2 ? l2[c2 ? "scrollLeft" : "scrollTop"] = -d2 : l2.scrollTo ? l2.scrollTo(((r2 = {})[c2 ? "left" : "top"] = -d2, r2.behavior = "smooth", r2)) : l2[c2 ? "scrollLeft" : "scrollTop"] = -d2, true;
        }
        return 0 === t2 ? (n2.setTransition(0), n2.setTranslate(d2), i2 && (n2.emit("beforeTransitionStart", t2, a2), n2.emit("transitionEnd"))) : (n2.setTransition(t2), n2.setTranslate(d2), i2 && (n2.emit("beforeTransitionStart", t2, a2), n2.emit("transitionStart")), n2.animating || (n2.animating = true, n2.onTranslateToWrapperTransitionEnd || (n2.onTranslateToWrapperTransitionEnd = function(e3) {
          n2 && !n2.destroyed && e3.target === this && (n2.$wrapperEl[0].removeEventListener("transitionend", n2.onTranslateToWrapperTransitionEnd), n2.$wrapperEl[0].removeEventListener("webkitTransitionEnd", n2.onTranslateToWrapperTransitionEnd), n2.onTranslateToWrapperTransitionEnd = null, delete n2.onTranslateToWrapperTransitionEnd, i2 && n2.emit("transitionEnd"));
        }), n2.$wrapperEl[0].addEventListener("transitionend", n2.onTranslateToWrapperTransitionEnd), n2.$wrapperEl[0].addEventListener("webkitTransitionEnd", n2.onTranslateToWrapperTransitionEnd))), true;
      } };
      var f = { setTransition: function(e2, t2) {
        this.params.cssMode || this.$wrapperEl.transition(e2), this.emit("setTransition", e2, t2);
      }, transitionStart: function(e2, t2) {
        void 0 === e2 && (e2 = true);
        var i2 = this.activeIndex, s2 = this.params, a2 = this.previousIndex;
        if (!s2.cssMode) {
          s2.autoHeight && this.updateAutoHeight();
          var r2 = t2;
          if (r2 || (r2 = i2 > a2 ? "next" : i2 < a2 ? "prev" : "reset"), this.emit("transitionStart"), e2 && i2 !== a2) {
            if ("reset" === r2)
              return void this.emit("slideResetTransitionStart");
            this.emit("slideChangeTransitionStart"), "next" === r2 ? this.emit("slideNextTransitionStart") : this.emit("slidePrevTransitionStart");
          }
        }
      }, transitionEnd: function(e2, t2) {
        void 0 === e2 && (e2 = true);
        var i2 = this.activeIndex, s2 = this.previousIndex, a2 = this.params;
        if (this.animating = false, !a2.cssMode) {
          this.setTransition(0);
          var r2 = t2;
          if (r2 || (r2 = i2 > s2 ? "next" : i2 < s2 ? "prev" : "reset"), this.emit("transitionEnd"), e2 && i2 !== s2) {
            if ("reset" === r2)
              return void this.emit("slideResetTransitionEnd");
            this.emit("slideChangeTransitionEnd"), "next" === r2 ? this.emit("slideNextTransitionEnd") : this.emit("slidePrevTransitionEnd");
          }
        }
      } };
      var m = { slideTo: function(e2, t2, i2, s2) {
        var a2;
        void 0 === e2 && (e2 = 0), void 0 === t2 && (t2 = this.params.speed), void 0 === i2 && (i2 = true);
        var r2 = this, n2 = e2;
        n2 < 0 && (n2 = 0);
        var o2 = r2.params, l2 = r2.snapGrid, d2 = r2.slidesGrid, h2 = r2.previousIndex, p2 = r2.activeIndex, c2 = r2.rtlTranslate, u2 = r2.wrapperEl;
        if (r2.animating && o2.preventInteractionOnTransition)
          return false;
        var v2 = Math.min(r2.params.slidesPerGroupSkip, n2), f2 = v2 + Math.floor((n2 - v2) / r2.params.slidesPerGroup);
        f2 >= l2.length && (f2 = l2.length - 1), (p2 || o2.initialSlide || 0) === (h2 || 0) && i2 && r2.emit("beforeSlideChangeStart");
        var m2, g2 = -l2[f2];
        if (r2.updateProgress(g2), o2.normalizeSlideIndex)
          for (var b2 = 0; b2 < d2.length; b2 += 1)
            -Math.floor(100 * g2) >= Math.floor(100 * d2[b2]) && (n2 = b2);
        if (r2.initialized && n2 !== p2) {
          if (!r2.allowSlideNext && g2 < r2.translate && g2 < r2.minTranslate())
            return false;
          if (!r2.allowSlidePrev && g2 > r2.translate && g2 > r2.maxTranslate() && (p2 || 0) !== n2)
            return false;
        }
        if (m2 = n2 > p2 ? "next" : n2 < p2 ? "prev" : "reset", c2 && -g2 === r2.translate || !c2 && g2 === r2.translate)
          return r2.updateActiveIndex(n2), o2.autoHeight && r2.updateAutoHeight(), r2.updateSlidesClasses(), "slide" !== o2.effect && r2.setTranslate(g2), "reset" !== m2 && (r2.transitionStart(i2, m2), r2.transitionEnd(i2, m2)), false;
        if (o2.cssMode) {
          var w2 = r2.isHorizontal(), y2 = -g2;
          return c2 && (y2 = u2.scrollWidth - u2.offsetWidth - y2), 0 === t2 ? u2[w2 ? "scrollLeft" : "scrollTop"] = y2 : u2.scrollTo ? u2.scrollTo(((a2 = {})[w2 ? "left" : "top"] = y2, a2.behavior = "smooth", a2)) : u2[w2 ? "scrollLeft" : "scrollTop"] = y2, true;
        }
        return 0 === t2 ? (r2.setTransition(0), r2.setTranslate(g2), r2.updateActiveIndex(n2), r2.updateSlidesClasses(), r2.emit("beforeTransitionStart", t2, s2), r2.transitionStart(i2, m2), r2.transitionEnd(i2, m2)) : (r2.setTransition(t2), r2.setTranslate(g2), r2.updateActiveIndex(n2), r2.updateSlidesClasses(), r2.emit("beforeTransitionStart", t2, s2), r2.transitionStart(i2, m2), r2.animating || (r2.animating = true, r2.onSlideToWrapperTransitionEnd || (r2.onSlideToWrapperTransitionEnd = function(e3) {
          r2 && !r2.destroyed && e3.target === this && (r2.$wrapperEl[0].removeEventListener("transitionend", r2.onSlideToWrapperTransitionEnd), r2.$wrapperEl[0].removeEventListener("webkitTransitionEnd", r2.onSlideToWrapperTransitionEnd), r2.onSlideToWrapperTransitionEnd = null, delete r2.onSlideToWrapperTransitionEnd, r2.transitionEnd(i2, m2));
        }), r2.$wrapperEl[0].addEventListener("transitionend", r2.onSlideToWrapperTransitionEnd), r2.$wrapperEl[0].addEventListener("webkitTransitionEnd", r2.onSlideToWrapperTransitionEnd))), true;
      }, slideToLoop: function(e2, t2, i2, s2) {
        void 0 === e2 && (e2 = 0), void 0 === t2 && (t2 = this.params.speed), void 0 === i2 && (i2 = true);
        var a2 = e2;
        return this.params.loop && (a2 += this.loopedSlides), this.slideTo(a2, t2, i2, s2);
      }, slideNext: function(e2, t2, i2) {
        void 0 === e2 && (e2 = this.params.speed), void 0 === t2 && (t2 = true);
        var s2 = this.params, a2 = this.animating, r2 = this.activeIndex < s2.slidesPerGroupSkip ? 1 : s2.slidesPerGroup;
        if (s2.loop) {
          if (a2)
            return false;
          this.loopFix(), this._clientLeft = this.$wrapperEl[0].clientLeft;
        }
        return this.slideTo(this.activeIndex + r2, e2, t2, i2);
      }, slidePrev: function(e2, t2, i2) {
        void 0 === e2 && (e2 = this.params.speed), void 0 === t2 && (t2 = true);
        var s2 = this.params, a2 = this.animating, r2 = this.snapGrid, n2 = this.slidesGrid, o2 = this.rtlTranslate;
        if (s2.loop) {
          if (a2)
            return false;
          this.loopFix(), this._clientLeft = this.$wrapperEl[0].clientLeft;
        }
        function l2(e3) {
          return e3 < 0 ? -Math.floor(Math.abs(e3)) : Math.floor(e3);
        }
        var d2, h2 = l2(o2 ? this.translate : -this.translate), p2 = r2.map(function(e3) {
          return l2(e3);
        }), c2 = (n2.map(function(e3) {
          return l2(e3);
        }), r2[p2.indexOf(h2)], r2[p2.indexOf(h2) - 1]);
        return void 0 === c2 && s2.cssMode && r2.forEach(function(e3) {
          !c2 && h2 >= e3 && (c2 = e3);
        }), void 0 !== c2 && (d2 = n2.indexOf(c2)) < 0 && (d2 = this.activeIndex - 1), this.slideTo(d2, e2, t2, i2);
      }, slideReset: function(e2, t2, i2) {
        return void 0 === e2 && (e2 = this.params.speed), void 0 === t2 && (t2 = true), this.slideTo(this.activeIndex, e2, t2, i2);
      }, slideToClosest: function(e2, t2, i2, s2) {
        void 0 === e2 && (e2 = this.params.speed), void 0 === t2 && (t2 = true), void 0 === s2 && (s2 = 0.5);
        var a2 = this.activeIndex, r2 = Math.min(this.params.slidesPerGroupSkip, a2), n2 = r2 + Math.floor((a2 - r2) / this.params.slidesPerGroup), o2 = this.rtlTranslate ? this.translate : -this.translate;
        if (o2 >= this.snapGrid[n2]) {
          var l2 = this.snapGrid[n2];
          o2 - l2 > (this.snapGrid[n2 + 1] - l2) * s2 && (a2 += this.params.slidesPerGroup);
        } else {
          var d2 = this.snapGrid[n2 - 1];
          o2 - d2 <= (this.snapGrid[n2] - d2) * s2 && (a2 -= this.params.slidesPerGroup);
        }
        return a2 = Math.max(a2, 0), a2 = Math.min(a2, this.slidesGrid.length - 1), this.slideTo(a2, e2, t2, i2);
      }, slideToClickedSlide: function() {
        var e2, t2 = this, i2 = t2.params, s2 = t2.$wrapperEl, a2 = "auto" === i2.slidesPerView ? t2.slidesPerViewDynamic() : i2.slidesPerView, r2 = t2.clickedIndex;
        if (i2.loop) {
          if (t2.animating)
            return;
          e2 = parseInt(n(t2.clickedSlide).attr("data-swiper-slide-index"), 10), i2.centeredSlides ? r2 < t2.loopedSlides - a2 / 2 || r2 > t2.slides.length - t2.loopedSlides + a2 / 2 ? (t2.loopFix(), r2 = s2.children("." + i2.slideClass + '[data-swiper-slide-index="' + e2 + '"]:not(.' + i2.slideDuplicateClass + ")").eq(0).index(), d.nextTick(function() {
            t2.slideTo(r2);
          })) : t2.slideTo(r2) : r2 > t2.slides.length - a2 ? (t2.loopFix(), r2 = s2.children("." + i2.slideClass + '[data-swiper-slide-index="' + e2 + '"]:not(.' + i2.slideDuplicateClass + ")").eq(0).index(), d.nextTick(function() {
            t2.slideTo(r2);
          })) : t2.slideTo(r2);
        } else
          t2.slideTo(r2);
      } };
      var g = { loopCreate: function() {
        var e2 = this, t2 = e2.params, s2 = e2.$wrapperEl;
        s2.children("." + t2.slideClass + "." + t2.slideDuplicateClass).remove();
        var a2 = s2.children("." + t2.slideClass);
        if (t2.loopFillGroupWithBlank) {
          var r2 = t2.slidesPerGroup - a2.length % t2.slidesPerGroup;
          if (r2 !== t2.slidesPerGroup) {
            for (var o2 = 0; o2 < r2; o2 += 1) {
              var l2 = n(i.createElement("div")).addClass(t2.slideClass + " " + t2.slideBlankClass);
              s2.append(l2);
            }
            a2 = s2.children("." + t2.slideClass);
          }
        }
        "auto" !== t2.slidesPerView || t2.loopedSlides || (t2.loopedSlides = a2.length), e2.loopedSlides = Math.ceil(parseFloat(t2.loopedSlides || t2.slidesPerView, 10)), e2.loopedSlides += t2.loopAdditionalSlides, e2.loopedSlides > a2.length && (e2.loopedSlides = a2.length);
        var d2 = [], h2 = [];
        a2.each(function(t3, i2) {
          var s3 = n(i2);
          t3 < e2.loopedSlides && h2.push(i2), t3 < a2.length && t3 >= a2.length - e2.loopedSlides && d2.push(i2), s3.attr("data-swiper-slide-index", t3);
        });
        for (var p2 = 0; p2 < h2.length; p2 += 1)
          s2.append(n(h2[p2].cloneNode(true)).addClass(t2.slideDuplicateClass));
        for (var c2 = d2.length - 1; c2 >= 0; c2 -= 1)
          s2.prepend(n(d2[c2].cloneNode(true)).addClass(t2.slideDuplicateClass));
      }, loopFix: function() {
        this.emit("beforeLoopFix");
        var e2, t2 = this.activeIndex, i2 = this.slides, s2 = this.loopedSlides, a2 = this.allowSlidePrev, r2 = this.allowSlideNext, n2 = this.snapGrid, o2 = this.rtlTranslate;
        this.allowSlidePrev = true, this.allowSlideNext = true;
        var l2 = -n2[t2] - this.getTranslate();
        if (t2 < s2)
          e2 = i2.length - 3 * s2 + t2, e2 += s2, this.slideTo(e2, 0, false, true) && 0 !== l2 && this.setTranslate((o2 ? -this.translate : this.translate) - l2);
        else if (t2 >= i2.length - s2) {
          e2 = -i2.length + t2 + s2, e2 += s2, this.slideTo(e2, 0, false, true) && 0 !== l2 && this.setTranslate((o2 ? -this.translate : this.translate) - l2);
        }
        this.allowSlidePrev = a2, this.allowSlideNext = r2, this.emit("loopFix");
      }, loopDestroy: function() {
        var e2 = this.$wrapperEl, t2 = this.params, i2 = this.slides;
        e2.children("." + t2.slideClass + "." + t2.slideDuplicateClass + ",." + t2.slideClass + "." + t2.slideBlankClass).remove(), i2.removeAttr("data-swiper-slide-index");
      } };
      var b = { setGrabCursor: function(e2) {
        if (!(h.touch || !this.params.simulateTouch || this.params.watchOverflow && this.isLocked || this.params.cssMode)) {
          var t2 = this.el;
          t2.style.cursor = "move", t2.style.cursor = e2 ? "-webkit-grabbing" : "-webkit-grab", t2.style.cursor = e2 ? "-moz-grabbin" : "-moz-grab", t2.style.cursor = e2 ? "grabbing" : "grab";
        }
      }, unsetGrabCursor: function() {
        h.touch || this.params.watchOverflow && this.isLocked || this.params.cssMode || (this.el.style.cursor = "");
      } };
      var w, y, x, E, T, S, C, M, P, z, k, $, L, I, D, O = { appendSlide: function(e2) {
        var t2 = this.$wrapperEl, i2 = this.params;
        if (i2.loop && this.loopDestroy(), "object" == typeof e2 && "length" in e2)
          for (var s2 = 0; s2 < e2.length; s2 += 1)
            e2[s2] && t2.append(e2[s2]);
        else
          t2.append(e2);
        i2.loop && this.loopCreate(), i2.observer && h.observer || this.update();
      }, prependSlide: function(e2) {
        var t2 = this.params, i2 = this.$wrapperEl, s2 = this.activeIndex;
        t2.loop && this.loopDestroy();
        var a2 = s2 + 1;
        if ("object" == typeof e2 && "length" in e2) {
          for (var r2 = 0; r2 < e2.length; r2 += 1)
            e2[r2] && i2.prepend(e2[r2]);
          a2 = s2 + e2.length;
        } else
          i2.prepend(e2);
        t2.loop && this.loopCreate(), t2.observer && h.observer || this.update(), this.slideTo(a2, 0, false);
      }, addSlide: function(e2, t2) {
        var i2 = this.$wrapperEl, s2 = this.params, a2 = this.activeIndex;
        s2.loop && (a2 -= this.loopedSlides, this.loopDestroy(), this.slides = i2.children("." + s2.slideClass));
        var r2 = this.slides.length;
        if (e2 <= 0)
          this.prependSlide(t2);
        else if (e2 >= r2)
          this.appendSlide(t2);
        else {
          for (var n2 = a2 > e2 ? a2 + 1 : a2, o2 = [], l2 = r2 - 1; l2 >= e2; l2 -= 1) {
            var d2 = this.slides.eq(l2);
            d2.remove(), o2.unshift(d2);
          }
          if ("object" == typeof t2 && "length" in t2) {
            for (var p2 = 0; p2 < t2.length; p2 += 1)
              t2[p2] && i2.append(t2[p2]);
            n2 = a2 > e2 ? a2 + t2.length : a2;
          } else
            i2.append(t2);
          for (var c2 = 0; c2 < o2.length; c2 += 1)
            i2.append(o2[c2]);
          s2.loop && this.loopCreate(), s2.observer && h.observer || this.update(), s2.loop ? this.slideTo(n2 + this.loopedSlides, 0, false) : this.slideTo(n2, 0, false);
        }
      }, removeSlide: function(e2) {
        var t2 = this.params, i2 = this.$wrapperEl, s2 = this.activeIndex;
        t2.loop && (s2 -= this.loopedSlides, this.loopDestroy(), this.slides = i2.children("." + t2.slideClass));
        var a2, r2 = s2;
        if ("object" == typeof e2 && "length" in e2) {
          for (var n2 = 0; n2 < e2.length; n2 += 1)
            a2 = e2[n2], this.slides[a2] && this.slides.eq(a2).remove(), a2 < r2 && (r2 -= 1);
          r2 = Math.max(r2, 0);
        } else
          a2 = e2, this.slides[a2] && this.slides.eq(a2).remove(), a2 < r2 && (r2 -= 1), r2 = Math.max(r2, 0);
        t2.loop && this.loopCreate(), t2.observer && h.observer || this.update(), t2.loop ? this.slideTo(r2 + this.loopedSlides, 0, false) : this.slideTo(r2, 0, false);
      }, removeAllSlides: function() {
        for (var e2 = [], t2 = 0; t2 < this.slides.length; t2 += 1)
          e2.push(t2);
        this.removeSlide(e2);
      } }, A = (w = a.navigator.platform, y = a.navigator.userAgent, x = { ios: false, android: false, androidChrome: false, desktop: false, iphone: false, ipod: false, ipad: false, edge: false, ie: false, firefox: false, macos: false, windows: false, cordova: !(!a.cordova && !a.phonegap), phonegap: !(!a.cordova && !a.phonegap), electron: false }, E = a.screen.width, T = a.screen.height, S = y.match(/(Android);?[\s\/]+([\d.]+)?/), C = y.match(/(iPad).*OS\s([\d_]+)/), M = y.match(/(iPod)(.*OS\s([\d_]+))?/), P = !C && y.match(/(iPhone\sOS|iOS)\s([\d_]+)/), z = y.indexOf("MSIE ") >= 0 || y.indexOf("Trident/") >= 0, k = y.indexOf("Edge/") >= 0, $ = y.indexOf("Gecko/") >= 0 && y.indexOf("Firefox/") >= 0, L = "Win32" === w, I = y.toLowerCase().indexOf("electron") >= 0, D = "MacIntel" === w, !C && D && h.touch && (1024 === E && 1366 === T || 834 === E && 1194 === T || 834 === E && 1112 === T || 768 === E && 1024 === T) && (C = y.match(/(Version)\/([\d.]+)/), D = false), x.ie = z, x.edge = k, x.firefox = $, S && !L && (x.os = "android", x.osVersion = S[2], x.android = true, x.androidChrome = y.toLowerCase().indexOf("chrome") >= 0), (C || P || M) && (x.os = "ios", x.ios = true), P && !M && (x.osVersion = P[2].replace(/_/g, "."), x.iphone = true), C && (x.osVersion = C[2].replace(/_/g, "."), x.ipad = true), M && (x.osVersion = M[3] ? M[3].replace(/_/g, ".") : null, x.ipod = true), x.ios && x.osVersion && y.indexOf("Version/") >= 0 && "10" === x.osVersion.split(".")[0] && (x.osVersion = y.toLowerCase().split("version/")[1].split(" ")[0]), x.webView = !(!(P || C || M) || !y.match(/.*AppleWebKit(?!.*Safari)/i) && !a.navigator.standalone) || a.matchMedia && a.matchMedia("(display-mode: standalone)").matches, x.webview = x.webView, x.standalone = x.webView, x.desktop = !(x.ios || x.android) || I, x.desktop && (x.electron = I, x.macos = D, x.windows = L, x.macos && (x.os = "macos"), x.windows && (x.os = "windows")), x.pixelRatio = a.devicePixelRatio || 1, x);
      function G(e2) {
        var t2 = this.touchEventsData, s2 = this.params, r2 = this.touches;
        if (!this.animating || !s2.preventInteractionOnTransition) {
          var o2 = e2;
          o2.originalEvent && (o2 = o2.originalEvent);
          var l2 = n(o2.target);
          if (("wrapper" !== s2.touchEventsTarget || l2.closest(this.wrapperEl).length) && (t2.isTouchEvent = "touchstart" === o2.type, (t2.isTouchEvent || !("which" in o2) || 3 !== o2.which) && !(!t2.isTouchEvent && "button" in o2 && o2.button > 0 || t2.isTouched && t2.isMoved))) {
            if (s2.noSwiping && l2.closest(s2.noSwipingSelector ? s2.noSwipingSelector : "." + s2.noSwipingClass)[0])
              this.allowClick = true;
            else if (!s2.swipeHandler || l2.closest(s2.swipeHandler)[0]) {
              r2.currentX = "touchstart" === o2.type ? o2.targetTouches[0].pageX : o2.pageX, r2.currentY = "touchstart" === o2.type ? o2.targetTouches[0].pageY : o2.pageY;
              var h2 = r2.currentX, p2 = r2.currentY, c2 = s2.edgeSwipeDetection || s2.iOSEdgeSwipeDetection, u2 = s2.edgeSwipeThreshold || s2.iOSEdgeSwipeThreshold;
              if (!c2 || !(h2 <= u2 || h2 >= a.screen.width - u2)) {
                if (d.extend(t2, { isTouched: true, isMoved: false, allowTouchCallbacks: true, isScrolling: void 0, startMoving: void 0 }), r2.startX = h2, r2.startY = p2, t2.touchStartTime = d.now(), this.allowClick = true, this.updateSize(), this.swipeDirection = void 0, s2.threshold > 0 && (t2.allowThresholdMove = false), "touchstart" !== o2.type) {
                  var v2 = true;
                  l2.is(t2.formElements) && (v2 = false), i.activeElement && n(i.activeElement).is(t2.formElements) && i.activeElement !== l2[0] && i.activeElement.blur();
                  var f2 = v2 && this.allowTouchMove && s2.touchStartPreventDefault;
                  (s2.touchStartForcePreventDefault || f2) && o2.preventDefault();
                }
                this.emit("touchStart", o2);
              }
            }
          }
        }
      }
      function H(e2) {
        var t2 = this.touchEventsData, s2 = this.params, a2 = this.touches, r2 = this.rtlTranslate, o2 = e2;
        if (o2.originalEvent && (o2 = o2.originalEvent), t2.isTouched) {
          if (!t2.isTouchEvent || "touchmove" === o2.type) {
            var l2 = "touchmove" === o2.type && o2.targetTouches && (o2.targetTouches[0] || o2.changedTouches[0]), h2 = "touchmove" === o2.type ? l2.pageX : o2.pageX, p2 = "touchmove" === o2.type ? l2.pageY : o2.pageY;
            if (o2.preventedByNestedSwiper)
              return a2.startX = h2, void (a2.startY = p2);
            if (!this.allowTouchMove)
              return this.allowClick = false, void (t2.isTouched && (d.extend(a2, { startX: h2, startY: p2, currentX: h2, currentY: p2 }), t2.touchStartTime = d.now()));
            if (t2.isTouchEvent && s2.touchReleaseOnEdges && !s2.loop) {
              if (this.isVertical()) {
                if (p2 < a2.startY && this.translate <= this.maxTranslate() || p2 > a2.startY && this.translate >= this.minTranslate())
                  return t2.isTouched = false, void (t2.isMoved = false);
              } else if (h2 < a2.startX && this.translate <= this.maxTranslate() || h2 > a2.startX && this.translate >= this.minTranslate())
                return;
            }
            if (t2.isTouchEvent && i.activeElement && o2.target === i.activeElement && n(o2.target).is(t2.formElements))
              return t2.isMoved = true, void (this.allowClick = false);
            if (t2.allowTouchCallbacks && this.emit("touchMove", o2), !(o2.targetTouches && o2.targetTouches.length > 1)) {
              a2.currentX = h2, a2.currentY = p2;
              var c2 = a2.currentX - a2.startX, u2 = a2.currentY - a2.startY;
              if (!(this.params.threshold && Math.sqrt(Math.pow(c2, 2) + Math.pow(u2, 2)) < this.params.threshold)) {
                var v2;
                if (void 0 === t2.isScrolling)
                  this.isHorizontal() && a2.currentY === a2.startY || this.isVertical() && a2.currentX === a2.startX ? t2.isScrolling = false : c2 * c2 + u2 * u2 >= 25 && (v2 = 180 * Math.atan2(Math.abs(u2), Math.abs(c2)) / Math.PI, t2.isScrolling = this.isHorizontal() ? v2 > s2.touchAngle : 90 - v2 > s2.touchAngle);
                if (t2.isScrolling && this.emit("touchMoveOpposite", o2), void 0 === t2.startMoving && (a2.currentX === a2.startX && a2.currentY === a2.startY || (t2.startMoving = true)), t2.isScrolling)
                  t2.isTouched = false;
                else if (t2.startMoving) {
                  this.allowClick = false, !s2.cssMode && o2.cancelable && o2.preventDefault(), s2.touchMoveStopPropagation && !s2.nested && o2.stopPropagation(), t2.isMoved || (s2.loop && this.loopFix(), t2.startTranslate = this.getTranslate(), this.setTransition(0), this.animating && this.$wrapperEl.trigger("webkitTransitionEnd transitionend"), t2.allowMomentumBounce = false, !s2.grabCursor || true !== this.allowSlideNext && true !== this.allowSlidePrev || this.setGrabCursor(true), this.emit("sliderFirstMove", o2)), this.emit("sliderMove", o2), t2.isMoved = true;
                  var f2 = this.isHorizontal() ? c2 : u2;
                  a2.diff = f2, f2 *= s2.touchRatio, r2 && (f2 = -f2), this.swipeDirection = f2 > 0 ? "prev" : "next", t2.currentTranslate = f2 + t2.startTranslate;
                  var m2 = true, g2 = s2.resistanceRatio;
                  if (s2.touchReleaseOnEdges && (g2 = 0), f2 > 0 && t2.currentTranslate > this.minTranslate() ? (m2 = false, s2.resistance && (t2.currentTranslate = this.minTranslate() - 1 + Math.pow(-this.minTranslate() + t2.startTranslate + f2, g2))) : f2 < 0 && t2.currentTranslate < this.maxTranslate() && (m2 = false, s2.resistance && (t2.currentTranslate = this.maxTranslate() + 1 - Math.pow(this.maxTranslate() - t2.startTranslate - f2, g2))), m2 && (o2.preventedByNestedSwiper = true), !this.allowSlideNext && "next" === this.swipeDirection && t2.currentTranslate < t2.startTranslate && (t2.currentTranslate = t2.startTranslate), !this.allowSlidePrev && "prev" === this.swipeDirection && t2.currentTranslate > t2.startTranslate && (t2.currentTranslate = t2.startTranslate), s2.threshold > 0) {
                    if (!(Math.abs(f2) > s2.threshold || t2.allowThresholdMove))
                      return void (t2.currentTranslate = t2.startTranslate);
                    if (!t2.allowThresholdMove)
                      return t2.allowThresholdMove = true, a2.startX = a2.currentX, a2.startY = a2.currentY, t2.currentTranslate = t2.startTranslate, void (a2.diff = this.isHorizontal() ? a2.currentX - a2.startX : a2.currentY - a2.startY);
                  }
                  s2.followFinger && !s2.cssMode && ((s2.freeMode || s2.watchSlidesProgress || s2.watchSlidesVisibility) && (this.updateActiveIndex(), this.updateSlidesClasses()), s2.freeMode && (0 === t2.velocities.length && t2.velocities.push({ position: a2[this.isHorizontal() ? "startX" : "startY"], time: t2.touchStartTime }), t2.velocities.push({ position: a2[this.isHorizontal() ? "currentX" : "currentY"], time: d.now() })), this.updateProgress(t2.currentTranslate), this.setTranslate(t2.currentTranslate));
                }
              }
            }
          }
        } else
          t2.startMoving && t2.isScrolling && this.emit("touchMoveOpposite", o2);
      }
      function B(e2) {
        var t2 = this, i2 = t2.touchEventsData, s2 = t2.params, a2 = t2.touches, r2 = t2.rtlTranslate, n2 = t2.$wrapperEl, o2 = t2.slidesGrid, l2 = t2.snapGrid, h2 = e2;
        if (h2.originalEvent && (h2 = h2.originalEvent), i2.allowTouchCallbacks && t2.emit("touchEnd", h2), i2.allowTouchCallbacks = false, !i2.isTouched)
          return i2.isMoved && s2.grabCursor && t2.setGrabCursor(false), i2.isMoved = false, void (i2.startMoving = false);
        s2.grabCursor && i2.isMoved && i2.isTouched && (true === t2.allowSlideNext || true === t2.allowSlidePrev) && t2.setGrabCursor(false);
        var p2, c2 = d.now(), u2 = c2 - i2.touchStartTime;
        if (t2.allowClick && (t2.updateClickedSlide(h2), t2.emit("tap click", h2), u2 < 300 && c2 - i2.lastClickTime < 300 && t2.emit("doubleTap doubleClick", h2)), i2.lastClickTime = d.now(), d.nextTick(function() {
          t2.destroyed || (t2.allowClick = true);
        }), !i2.isTouched || !i2.isMoved || !t2.swipeDirection || 0 === a2.diff || i2.currentTranslate === i2.startTranslate)
          return i2.isTouched = false, i2.isMoved = false, void (i2.startMoving = false);
        if (i2.isTouched = false, i2.isMoved = false, i2.startMoving = false, p2 = s2.followFinger ? r2 ? t2.translate : -t2.translate : -i2.currentTranslate, !s2.cssMode)
          if (s2.freeMode) {
            if (p2 < -t2.minTranslate())
              return void t2.slideTo(t2.activeIndex);
            if (p2 > -t2.maxTranslate())
              return void (t2.slides.length < l2.length ? t2.slideTo(l2.length - 1) : t2.slideTo(t2.slides.length - 1));
            if (s2.freeModeMomentum) {
              if (i2.velocities.length > 1) {
                var v2 = i2.velocities.pop(), f2 = i2.velocities.pop(), m2 = v2.position - f2.position, g2 = v2.time - f2.time;
                t2.velocity = m2 / g2, t2.velocity /= 2, Math.abs(t2.velocity) < s2.freeModeMinimumVelocity && (t2.velocity = 0), (g2 > 150 || d.now() - v2.time > 300) && (t2.velocity = 0);
              } else
                t2.velocity = 0;
              t2.velocity *= s2.freeModeMomentumVelocityRatio, i2.velocities.length = 0;
              var b2 = 1e3 * s2.freeModeMomentumRatio, w2 = t2.velocity * b2, y2 = t2.translate + w2;
              r2 && (y2 = -y2);
              var x2, E2, T2 = false, S2 = 20 * Math.abs(t2.velocity) * s2.freeModeMomentumBounceRatio;
              if (y2 < t2.maxTranslate())
                s2.freeModeMomentumBounce ? (y2 + t2.maxTranslate() < -S2 && (y2 = t2.maxTranslate() - S2), x2 = t2.maxTranslate(), T2 = true, i2.allowMomentumBounce = true) : y2 = t2.maxTranslate(), s2.loop && s2.centeredSlides && (E2 = true);
              else if (y2 > t2.minTranslate())
                s2.freeModeMomentumBounce ? (y2 - t2.minTranslate() > S2 && (y2 = t2.minTranslate() + S2), x2 = t2.minTranslate(), T2 = true, i2.allowMomentumBounce = true) : y2 = t2.minTranslate(), s2.loop && s2.centeredSlides && (E2 = true);
              else if (s2.freeModeSticky) {
                for (var C2, M2 = 0; M2 < l2.length; M2 += 1)
                  if (l2[M2] > -y2) {
                    C2 = M2;
                    break;
                  }
                y2 = -(y2 = Math.abs(l2[C2] - y2) < Math.abs(l2[C2 - 1] - y2) || "next" === t2.swipeDirection ? l2[C2] : l2[C2 - 1]);
              }
              if (E2 && t2.once("transitionEnd", function() {
                t2.loopFix();
              }), 0 !== t2.velocity) {
                if (b2 = r2 ? Math.abs((-y2 - t2.translate) / t2.velocity) : Math.abs((y2 - t2.translate) / t2.velocity), s2.freeModeSticky) {
                  var P2 = Math.abs((r2 ? -y2 : y2) - t2.translate), z2 = t2.slidesSizesGrid[t2.activeIndex];
                  b2 = P2 < z2 ? s2.speed : P2 < 2 * z2 ? 1.5 * s2.speed : 2.5 * s2.speed;
                }
              } else if (s2.freeModeSticky)
                return void t2.slideToClosest();
              s2.freeModeMomentumBounce && T2 ? (t2.updateProgress(x2), t2.setTransition(b2), t2.setTranslate(y2), t2.transitionStart(true, t2.swipeDirection), t2.animating = true, n2.transitionEnd(function() {
                t2 && !t2.destroyed && i2.allowMomentumBounce && (t2.emit("momentumBounce"), t2.setTransition(s2.speed), setTimeout(function() {
                  t2.setTranslate(x2), n2.transitionEnd(function() {
                    t2 && !t2.destroyed && t2.transitionEnd();
                  });
                }, 0));
              })) : t2.velocity ? (t2.updateProgress(y2), t2.setTransition(b2), t2.setTranslate(y2), t2.transitionStart(true, t2.swipeDirection), t2.animating || (t2.animating = true, n2.transitionEnd(function() {
                t2 && !t2.destroyed && t2.transitionEnd();
              }))) : t2.updateProgress(y2), t2.updateActiveIndex(), t2.updateSlidesClasses();
            } else if (s2.freeModeSticky)
              return void t2.slideToClosest();
            (!s2.freeModeMomentum || u2 >= s2.longSwipesMs) && (t2.updateProgress(), t2.updateActiveIndex(), t2.updateSlidesClasses());
          } else {
            for (var k2 = 0, $2 = t2.slidesSizesGrid[0], L2 = 0; L2 < o2.length; L2 += L2 < s2.slidesPerGroupSkip ? 1 : s2.slidesPerGroup) {
              var I2 = L2 < s2.slidesPerGroupSkip - 1 ? 1 : s2.slidesPerGroup;
              void 0 !== o2[L2 + I2] ? p2 >= o2[L2] && p2 < o2[L2 + I2] && (k2 = L2, $2 = o2[L2 + I2] - o2[L2]) : p2 >= o2[L2] && (k2 = L2, $2 = o2[o2.length - 1] - o2[o2.length - 2]);
            }
            var D2 = (p2 - o2[k2]) / $2, O2 = k2 < s2.slidesPerGroupSkip - 1 ? 1 : s2.slidesPerGroup;
            if (u2 > s2.longSwipesMs) {
              if (!s2.longSwipes)
                return void t2.slideTo(t2.activeIndex);
              "next" === t2.swipeDirection && (D2 >= s2.longSwipesRatio ? t2.slideTo(k2 + O2) : t2.slideTo(k2)), "prev" === t2.swipeDirection && (D2 > 1 - s2.longSwipesRatio ? t2.slideTo(k2 + O2) : t2.slideTo(k2));
            } else {
              if (!s2.shortSwipes)
                return void t2.slideTo(t2.activeIndex);
              t2.navigation && (h2.target === t2.navigation.nextEl || h2.target === t2.navigation.prevEl) ? h2.target === t2.navigation.nextEl ? t2.slideTo(k2 + O2) : t2.slideTo(k2) : ("next" === t2.swipeDirection && t2.slideTo(k2 + O2), "prev" === t2.swipeDirection && t2.slideTo(k2));
            }
          }
      }
      function N() {
        var e2 = this.params, t2 = this.el;
        if (!t2 || 0 !== t2.offsetWidth) {
          e2.breakpoints && this.setBreakpoint();
          var i2 = this.allowSlideNext, s2 = this.allowSlidePrev, a2 = this.snapGrid;
          this.allowSlideNext = true, this.allowSlidePrev = true, this.updateSize(), this.updateSlides(), this.updateSlidesClasses(), ("auto" === e2.slidesPerView || e2.slidesPerView > 1) && this.isEnd && !this.isBeginning && !this.params.centeredSlides ? this.slideTo(this.slides.length - 1, 0, false, true) : this.slideTo(this.activeIndex, 0, false, true), this.autoplay && this.autoplay.running && this.autoplay.paused && this.autoplay.run(), this.allowSlidePrev = s2, this.allowSlideNext = i2, this.params.watchOverflow && a2 !== this.snapGrid && this.checkOverflow();
        }
      }
      function X(e2) {
        this.allowClick || (this.params.preventClicks && e2.preventDefault(), this.params.preventClicksPropagation && this.animating && (e2.stopPropagation(), e2.stopImmediatePropagation()));
      }
      function V() {
        var e2 = this.wrapperEl, t2 = this.rtlTranslate;
        this.previousTranslate = this.translate, this.isHorizontal() ? this.translate = t2 ? e2.scrollWidth - e2.offsetWidth - e2.scrollLeft : -e2.scrollLeft : this.translate = -e2.scrollTop, -0 === this.translate && (this.translate = 0), this.updateActiveIndex(), this.updateSlidesClasses();
        var i2 = this.maxTranslate() - this.minTranslate();
        (0 === i2 ? 0 : (this.translate - this.minTranslate()) / i2) !== this.progress && this.updateProgress(t2 ? -this.translate : this.translate), this.emit("setTranslate", this.translate, false);
      }
      var Y = false;
      function F() {
      }
      var W = { init: true, direction: "horizontal", touchEventsTarget: "container", initialSlide: 0, speed: 300, cssMode: false, updateOnWindowResize: true, preventInteractionOnTransition: false, edgeSwipeDetection: false, edgeSwipeThreshold: 20, freeMode: false, freeModeMomentum: true, freeModeMomentumRatio: 1, freeModeMomentumBounce: true, freeModeMomentumBounceRatio: 1, freeModeMomentumVelocityRatio: 1, freeModeSticky: false, freeModeMinimumVelocity: 0.02, autoHeight: false, setWrapperSize: false, virtualTranslate: false, effect: "slide", breakpoints: void 0, spaceBetween: 0, slidesPerView: 1, slidesPerColumn: 1, slidesPerColumnFill: "column", slidesPerGroup: 1, slidesPerGroupSkip: 0, centeredSlides: false, centeredSlidesBounds: false, slidesOffsetBefore: 0, slidesOffsetAfter: 0, normalizeSlideIndex: true, centerInsufficientSlides: false, watchOverflow: false, roundLengths: false, touchRatio: 1, touchAngle: 45, simulateTouch: true, shortSwipes: true, longSwipes: true, longSwipesRatio: 0.5, longSwipesMs: 300, followFinger: true, allowTouchMove: true, threshold: 0, touchMoveStopPropagation: false, touchStartPreventDefault: true, touchStartForcePreventDefault: false, touchReleaseOnEdges: false, uniqueNavElements: true, resistance: true, resistanceRatio: 0.85, watchSlidesProgress: false, watchSlidesVisibility: false, grabCursor: false, preventClicks: true, preventClicksPropagation: true, slideToClickedSlide: false, preloadImages: true, updateOnImagesReady: true, loop: false, loopAdditionalSlides: 0, loopedSlides: null, loopFillGroupWithBlank: false, allowSlidePrev: true, allowSlideNext: true, swipeHandler: null, noSwiping: true, noSwipingClass: "swiper-no-swiping", noSwipingSelector: null, passiveListeners: true, containerModifierClass: "swiper-container-", slideClass: "swiper-slide", slideBlankClass: "swiper-slide-invisible-blank", slideActiveClass: "swiper-slide-active", slideDuplicateActiveClass: "swiper-slide-duplicate-active", slideVisibleClass: "swiper-slide-visible", slideDuplicateClass: "swiper-slide-duplicate", slideNextClass: "swiper-slide-next", slideDuplicateNextClass: "swiper-slide-duplicate-next", slidePrevClass: "swiper-slide-prev", slideDuplicatePrevClass: "swiper-slide-duplicate-prev", wrapperClass: "swiper-wrapper", runCallbacksOnInit: true }, R = { update: u, translate: v, transition: f, slide: m, loop: g, grabCursor: b, manipulation: O, events: { attachEvents: function() {
        var e2 = this.params, t2 = this.touchEvents, s2 = this.el, a2 = this.wrapperEl;
        this.onTouchStart = G.bind(this), this.onTouchMove = H.bind(this), this.onTouchEnd = B.bind(this), e2.cssMode && (this.onScroll = V.bind(this)), this.onClick = X.bind(this);
        var r2 = !!e2.nested;
        if (!h.touch && h.pointerEvents)
          s2.addEventListener(t2.start, this.onTouchStart, false), i.addEventListener(t2.move, this.onTouchMove, r2), i.addEventListener(t2.end, this.onTouchEnd, false);
        else {
          if (h.touch) {
            var n2 = !("touchstart" !== t2.start || !h.passiveListener || !e2.passiveListeners) && { passive: true, capture: false };
            s2.addEventListener(t2.start, this.onTouchStart, n2), s2.addEventListener(t2.move, this.onTouchMove, h.passiveListener ? { passive: false, capture: r2 } : r2), s2.addEventListener(t2.end, this.onTouchEnd, n2), t2.cancel && s2.addEventListener(t2.cancel, this.onTouchEnd, n2), Y || (i.addEventListener("touchstart", F), Y = true);
          }
          (e2.simulateTouch && !A.ios && !A.android || e2.simulateTouch && !h.touch && A.ios) && (s2.addEventListener("mousedown", this.onTouchStart, false), i.addEventListener("mousemove", this.onTouchMove, r2), i.addEventListener("mouseup", this.onTouchEnd, false));
        }
        (e2.preventClicks || e2.preventClicksPropagation) && s2.addEventListener("click", this.onClick, true), e2.cssMode && a2.addEventListener("scroll", this.onScroll), e2.updateOnWindowResize ? this.on(A.ios || A.android ? "resize orientationchange observerUpdate" : "resize observerUpdate", N, true) : this.on("observerUpdate", N, true);
      }, detachEvents: function() {
        var e2 = this.params, t2 = this.touchEvents, s2 = this.el, a2 = this.wrapperEl, r2 = !!e2.nested;
        if (!h.touch && h.pointerEvents)
          s2.removeEventListener(t2.start, this.onTouchStart, false), i.removeEventListener(t2.move, this.onTouchMove, r2), i.removeEventListener(t2.end, this.onTouchEnd, false);
        else {
          if (h.touch) {
            var n2 = !("onTouchStart" !== t2.start || !h.passiveListener || !e2.passiveListeners) && { passive: true, capture: false };
            s2.removeEventListener(t2.start, this.onTouchStart, n2), s2.removeEventListener(t2.move, this.onTouchMove, r2), s2.removeEventListener(t2.end, this.onTouchEnd, n2), t2.cancel && s2.removeEventListener(t2.cancel, this.onTouchEnd, n2);
          }
          (e2.simulateTouch && !A.ios && !A.android || e2.simulateTouch && !h.touch && A.ios) && (s2.removeEventListener("mousedown", this.onTouchStart, false), i.removeEventListener("mousemove", this.onTouchMove, r2), i.removeEventListener("mouseup", this.onTouchEnd, false));
        }
        (e2.preventClicks || e2.preventClicksPropagation) && s2.removeEventListener("click", this.onClick, true), e2.cssMode && a2.removeEventListener("scroll", this.onScroll), this.off(A.ios || A.android ? "resize orientationchange observerUpdate" : "resize observerUpdate", N);
      } }, breakpoints: { setBreakpoint: function() {
        var e2 = this.activeIndex, t2 = this.initialized, i2 = this.loopedSlides;
        void 0 === i2 && (i2 = 0);
        var s2 = this.params, a2 = this.$el, r2 = s2.breakpoints;
        if (r2 && (!r2 || 0 !== Object.keys(r2).length)) {
          var n2 = this.getBreakpoint(r2);
          if (n2 && this.currentBreakpoint !== n2) {
            var o2 = n2 in r2 ? r2[n2] : void 0;
            o2 && ["slidesPerView", "spaceBetween", "slidesPerGroup", "slidesPerGroupSkip", "slidesPerColumn"].forEach(function(e3) {
              var t3 = o2[e3];
              void 0 !== t3 && (o2[e3] = "slidesPerView" !== e3 || "AUTO" !== t3 && "auto" !== t3 ? "slidesPerView" === e3 ? parseFloat(t3) : parseInt(t3, 10) : "auto");
            });
            var l2 = o2 || this.originalParams, h2 = s2.slidesPerColumn > 1, p2 = l2.slidesPerColumn > 1;
            h2 && !p2 ? a2.removeClass(s2.containerModifierClass + "multirow " + s2.containerModifierClass + "multirow-column") : !h2 && p2 && (a2.addClass(s2.containerModifierClass + "multirow"), "column" === l2.slidesPerColumnFill && a2.addClass(s2.containerModifierClass + "multirow-column"));
            var c2 = l2.direction && l2.direction !== s2.direction, u2 = s2.loop && (l2.slidesPerView !== s2.slidesPerView || c2);
            c2 && t2 && this.changeDirection(), d.extend(this.params, l2), d.extend(this, { allowTouchMove: this.params.allowTouchMove, allowSlideNext: this.params.allowSlideNext, allowSlidePrev: this.params.allowSlidePrev }), this.currentBreakpoint = n2, u2 && t2 && (this.loopDestroy(), this.loopCreate(), this.updateSlides(), this.slideTo(e2 - i2 + this.loopedSlides, 0, false)), this.emit("breakpoint", l2);
          }
        }
      }, getBreakpoint: function(e2) {
        if (e2) {
          var t2 = false, i2 = Object.keys(e2).map(function(e3) {
            if ("string" == typeof e3 && 0 === e3.indexOf("@")) {
              var t3 = parseFloat(e3.substr(1));
              return { value: a.innerHeight * t3, point: e3 };
            }
            return { value: e3, point: e3 };
          });
          i2.sort(function(e3, t3) {
            return parseInt(e3.value, 10) - parseInt(t3.value, 10);
          });
          for (var s2 = 0; s2 < i2.length; s2 += 1) {
            var r2 = i2[s2], n2 = r2.point;
            r2.value <= a.innerWidth && (t2 = n2);
          }
          return t2 || "max";
        }
      } }, checkOverflow: { checkOverflow: function() {
        var e2 = this.params, t2 = this.isLocked, i2 = this.slides.length > 0 && e2.slidesOffsetBefore + e2.spaceBetween * (this.slides.length - 1) + this.slides[0].offsetWidth * this.slides.length;
        e2.slidesOffsetBefore && e2.slidesOffsetAfter && i2 ? this.isLocked = i2 <= this.size : this.isLocked = 1 === this.snapGrid.length, this.allowSlideNext = !this.isLocked, this.allowSlidePrev = !this.isLocked, t2 !== this.isLocked && this.emit(this.isLocked ? "lock" : "unlock"), t2 && t2 !== this.isLocked && (this.isEnd = false, this.navigation && this.navigation.update());
      } }, classes: { addClasses: function() {
        var e2 = this.classNames, t2 = this.params, i2 = this.rtl, s2 = this.$el, a2 = [];
        a2.push("initialized"), a2.push(t2.direction), t2.freeMode && a2.push("free-mode"), t2.autoHeight && a2.push("autoheight"), i2 && a2.push("rtl"), t2.slidesPerColumn > 1 && (a2.push("multirow"), "column" === t2.slidesPerColumnFill && a2.push("multirow-column")), A.android && a2.push("android"), A.ios && a2.push("ios"), t2.cssMode && a2.push("css-mode"), a2.forEach(function(i3) {
          e2.push(t2.containerModifierClass + i3);
        }), s2.addClass(e2.join(" "));
      }, removeClasses: function() {
        var e2 = this.$el, t2 = this.classNames;
        e2.removeClass(t2.join(" "));
      } }, images: { loadImage: function(e2, t2, i2, s2, r2, o2) {
        var l2;
        function d2() {
          o2 && o2();
        }
        n(e2).parent("picture")[0] || e2.complete && r2 ? d2() : t2 ? ((l2 = new a.Image()).onload = d2, l2.onerror = d2, s2 && (l2.sizes = s2), i2 && (l2.srcset = i2), t2 && (l2.src = t2)) : d2();
      }, preloadImages: function() {
        var e2 = this;
        function t2() {
          null != e2 && e2 && !e2.destroyed && (void 0 !== e2.imagesLoaded && (e2.imagesLoaded += 1), e2.imagesLoaded === e2.imagesToLoad.length && (e2.params.updateOnImagesReady && e2.update(), e2.emit("imagesReady")));
        }
        e2.imagesToLoad = e2.$el.find("img");
        for (var i2 = 0; i2 < e2.imagesToLoad.length; i2 += 1) {
          var s2 = e2.imagesToLoad[i2];
          e2.loadImage(s2, s2.currentSrc || s2.getAttribute("src"), s2.srcset || s2.getAttribute("srcset"), s2.sizes || s2.getAttribute("sizes"), true, t2);
        }
      } } }, q = {}, j = function(e2) {
        function t2() {
          for (var i3, s2, a2, r2 = [], o2 = arguments.length; o2--; )
            r2[o2] = arguments[o2];
          1 === r2.length && r2[0].constructor && r2[0].constructor === Object ? a2 = r2[0] : (s2 = (i3 = r2)[0], a2 = i3[1]), a2 || (a2 = {}), a2 = d.extend({}, a2), s2 && !a2.el && (a2.el = s2), e2.call(this, a2), Object.keys(R).forEach(function(e3) {
            Object.keys(R[e3]).forEach(function(i4) {
              t2.prototype[i4] || (t2.prototype[i4] = R[e3][i4]);
            });
          });
          var l2 = this;
          void 0 === l2.modules && (l2.modules = {}), Object.keys(l2.modules).forEach(function(e3) {
            var t3 = l2.modules[e3];
            if (t3.params) {
              var i4 = Object.keys(t3.params)[0], s3 = t3.params[i4];
              if ("object" != typeof s3 || null === s3)
                return;
              if (!(i4 in a2) || !("enabled" in s3))
                return;
              true === a2[i4] && (a2[i4] = { enabled: true }), "object" != typeof a2[i4] || "enabled" in a2[i4] || (a2[i4].enabled = true), a2[i4] || (a2[i4] = { enabled: false });
            }
          });
          var p2 = d.extend({}, W);
          l2.useModulesParams(p2), l2.params = d.extend({}, p2, q, a2), l2.originalParams = d.extend({}, l2.params), l2.passedParams = d.extend({}, a2), l2.$ = n;
          var c2 = n(l2.params.el);
          if (s2 = c2[0]) {
            if (c2.length > 1) {
              var u2 = [];
              return c2.each(function(e3, i4) {
                var s3 = d.extend({}, a2, { el: i4 });
                u2.push(new t2(s3));
              }), u2;
            }
            var v2, f2, m2;
            return s2.swiper = l2, c2.data("swiper", l2), s2 && s2.shadowRoot && s2.shadowRoot.querySelector ? (v2 = n(s2.shadowRoot.querySelector("." + l2.params.wrapperClass))).children = function(e3) {
              return c2.children(e3);
            } : v2 = c2.children("." + l2.params.wrapperClass), d.extend(l2, { $el: c2, el: s2, $wrapperEl: v2, wrapperEl: v2[0], classNames: [], slides: n(), slidesGrid: [], snapGrid: [], slidesSizesGrid: [], isHorizontal: function() {
              return "horizontal" === l2.params.direction;
            }, isVertical: function() {
              return "vertical" === l2.params.direction;
            }, rtl: "rtl" === s2.dir.toLowerCase() || "rtl" === c2.css("direction"), rtlTranslate: "horizontal" === l2.params.direction && ("rtl" === s2.dir.toLowerCase() || "rtl" === c2.css("direction")), wrongRTL: "-webkit-box" === v2.css("display"), activeIndex: 0, realIndex: 0, isBeginning: true, isEnd: false, translate: 0, previousTranslate: 0, progress: 0, velocity: 0, animating: false, allowSlideNext: l2.params.allowSlideNext, allowSlidePrev: l2.params.allowSlidePrev, touchEvents: (f2 = ["touchstart", "touchmove", "touchend", "touchcancel"], m2 = ["mousedown", "mousemove", "mouseup"], h.pointerEvents && (m2 = ["pointerdown", "pointermove", "pointerup"]), l2.touchEventsTouch = { start: f2[0], move: f2[1], end: f2[2], cancel: f2[3] }, l2.touchEventsDesktop = { start: m2[0], move: m2[1], end: m2[2] }, h.touch || !l2.params.simulateTouch ? l2.touchEventsTouch : l2.touchEventsDesktop), touchEventsData: { isTouched: void 0, isMoved: void 0, allowTouchCallbacks: void 0, touchStartTime: void 0, isScrolling: void 0, currentTranslate: void 0, startTranslate: void 0, allowThresholdMove: void 0, formElements: "input, select, option, textarea, button, video, label", lastClickTime: d.now(), clickTimeout: void 0, velocities: [], allowMomentumBounce: void 0, isTouchEvent: void 0, startMoving: void 0 }, allowClick: true, allowTouchMove: l2.params.allowTouchMove, touches: { startX: 0, startY: 0, currentX: 0, currentY: 0, diff: 0 }, imagesToLoad: [], imagesLoaded: 0 }), l2.useModules(), l2.params.init && l2.init(), l2;
          }
        }
        e2 && (t2.__proto__ = e2), t2.prototype = Object.create(e2 && e2.prototype), t2.prototype.constructor = t2;
        var i2 = { extendedDefaults: { configurable: true }, defaults: { configurable: true }, Class: { configurable: true }, $: { configurable: true } };
        return t2.prototype.slidesPerViewDynamic = function() {
          var e3 = this.params, t3 = this.slides, i3 = this.slidesGrid, s2 = this.size, a2 = this.activeIndex, r2 = 1;
          if (e3.centeredSlides) {
            for (var n2, o2 = t3[a2].swiperSlideSize, l2 = a2 + 1; l2 < t3.length; l2 += 1)
              t3[l2] && !n2 && (r2 += 1, (o2 += t3[l2].swiperSlideSize) > s2 && (n2 = true));
            for (var d2 = a2 - 1; d2 >= 0; d2 -= 1)
              t3[d2] && !n2 && (r2 += 1, (o2 += t3[d2].swiperSlideSize) > s2 && (n2 = true));
          } else
            for (var h2 = a2 + 1; h2 < t3.length; h2 += 1)
              i3[h2] - i3[a2] < s2 && (r2 += 1);
          return r2;
        }, t2.prototype.update = function() {
          var e3 = this;
          if (e3 && !e3.destroyed) {
            var t3 = e3.snapGrid, i3 = e3.params;
            i3.breakpoints && e3.setBreakpoint(), e3.updateSize(), e3.updateSlides(), e3.updateProgress(), e3.updateSlidesClasses(), e3.params.freeMode ? (s2(), e3.params.autoHeight && e3.updateAutoHeight()) : (("auto" === e3.params.slidesPerView || e3.params.slidesPerView > 1) && e3.isEnd && !e3.params.centeredSlides ? e3.slideTo(e3.slides.length - 1, 0, false, true) : e3.slideTo(e3.activeIndex, 0, false, true)) || s2(), i3.watchOverflow && t3 !== e3.snapGrid && e3.checkOverflow(), e3.emit("update");
          }
          function s2() {
            var t4 = e3.rtlTranslate ? -1 * e3.translate : e3.translate, i4 = Math.min(Math.max(t4, e3.maxTranslate()), e3.minTranslate());
            e3.setTranslate(i4), e3.updateActiveIndex(), e3.updateSlidesClasses();
          }
        }, t2.prototype.changeDirection = function(e3, t3) {
          void 0 === t3 && (t3 = true);
          var i3 = this.params.direction;
          return e3 || (e3 = "horizontal" === i3 ? "vertical" : "horizontal"), e3 === i3 || "horizontal" !== e3 && "vertical" !== e3 || (this.$el.removeClass("" + this.params.containerModifierClass + i3).addClass("" + this.params.containerModifierClass + e3), this.params.direction = e3, this.slides.each(function(t4, i4) {
            "vertical" === e3 ? i4.style.width = "" : i4.style.height = "";
          }), this.emit("changeDirection"), t3 && this.update()), this;
        }, t2.prototype.init = function() {
          this.initialized || (this.emit("beforeInit"), this.params.breakpoints && this.setBreakpoint(), this.addClasses(), this.params.loop && this.loopCreate(), this.updateSize(), this.updateSlides(), this.params.watchOverflow && this.checkOverflow(), this.params.grabCursor && this.setGrabCursor(), this.params.preloadImages && this.preloadImages(), this.params.loop ? this.slideTo(this.params.initialSlide + this.loopedSlides, 0, this.params.runCallbacksOnInit) : this.slideTo(this.params.initialSlide, 0, this.params.runCallbacksOnInit), this.attachEvents(), this.initialized = true, this.emit("init"));
        }, t2.prototype.destroy = function(e3, t3) {
          void 0 === e3 && (e3 = true), void 0 === t3 && (t3 = true);
          var i3 = this, s2 = i3.params, a2 = i3.$el, r2 = i3.$wrapperEl, n2 = i3.slides;
          return void 0 === i3.params || i3.destroyed || (i3.emit("beforeDestroy"), i3.initialized = false, i3.detachEvents(), s2.loop && i3.loopDestroy(), t3 && (i3.removeClasses(), a2.removeAttr("style"), r2.removeAttr("style"), n2 && n2.length && n2.removeClass([s2.slideVisibleClass, s2.slideActiveClass, s2.slideNextClass, s2.slidePrevClass].join(" ")).removeAttr("style").removeAttr("data-swiper-slide-index")), i3.emit("destroy"), Object.keys(i3.eventsListeners).forEach(function(e4) {
            i3.off(e4);
          }), false !== e3 && (i3.$el[0].swiper = null, i3.$el.data("swiper", null), d.deleteProps(i3)), i3.destroyed = true), null;
        }, t2.extendDefaults = function(e3) {
          d.extend(q, e3);
        }, i2.extendedDefaults.get = function() {
          return q;
        }, i2.defaults.get = function() {
          return W;
        }, i2.Class.get = function() {
          return e2;
        }, i2.$.get = function() {
          return n;
        }, Object.defineProperties(t2, i2), t2;
      }(p), K = { name: "device", proto: { device: A }, static: { device: A } }, U = { name: "support", proto: { support: h }, static: { support: h } }, _ = { isEdge: !!a.navigator.userAgent.match(/Edge/g), isSafari: function() {
        var e2 = a.navigator.userAgent.toLowerCase();
        return e2.indexOf("safari") >= 0 && e2.indexOf("chrome") < 0 && e2.indexOf("android") < 0;
      }(), isWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(a.navigator.userAgent) }, Z = { name: "browser", proto: { browser: _ }, static: { browser: _ } }, Q = { name: "resize", create: function() {
        var e2 = this;
        d.extend(e2, { resize: { resizeHandler: function() {
          e2 && !e2.destroyed && e2.initialized && (e2.emit("beforeResize"), e2.emit("resize"));
        }, orientationChangeHandler: function() {
          e2 && !e2.destroyed && e2.initialized && e2.emit("orientationchange");
        } } });
      }, on: { init: function() {
        a.addEventListener("resize", this.resize.resizeHandler), a.addEventListener("orientationchange", this.resize.orientationChangeHandler);
      }, destroy: function() {
        a.removeEventListener("resize", this.resize.resizeHandler), a.removeEventListener("orientationchange", this.resize.orientationChangeHandler);
      } } }, J = { func: a.MutationObserver || a.WebkitMutationObserver, attach: function(e2, t2) {
        void 0 === t2 && (t2 = {});
        var i2 = this, s2 = new (0, J.func)(function(e3) {
          if (1 !== e3.length) {
            var t3 = function() {
              i2.emit("observerUpdate", e3[0]);
            };
            a.requestAnimationFrame ? a.requestAnimationFrame(t3) : a.setTimeout(t3, 0);
          } else
            i2.emit("observerUpdate", e3[0]);
        });
        s2.observe(e2, { attributes: void 0 === t2.attributes || t2.attributes, childList: void 0 === t2.childList || t2.childList, characterData: void 0 === t2.characterData || t2.characterData }), i2.observer.observers.push(s2);
      }, init: function() {
        if (h.observer && this.params.observer) {
          if (this.params.observeParents)
            for (var e2 = this.$el.parents(), t2 = 0; t2 < e2.length; t2 += 1)
              this.observer.attach(e2[t2]);
          this.observer.attach(this.$el[0], { childList: this.params.observeSlideChildren }), this.observer.attach(this.$wrapperEl[0], { attributes: false });
        }
      }, destroy: function() {
        this.observer.observers.forEach(function(e2) {
          e2.disconnect();
        }), this.observer.observers = [];
      } }, ee = { name: "observer", params: { observer: false, observeParents: false, observeSlideChildren: false }, create: function() {
        d.extend(this, { observer: { init: J.init.bind(this), attach: J.attach.bind(this), destroy: J.destroy.bind(this), observers: [] } });
      }, on: { init: function() {
        this.observer.init();
      }, destroy: function() {
        this.observer.destroy();
      } } }, te = { update: function(e2) {
        var t2 = this, i2 = t2.params, s2 = i2.slidesPerView, a2 = i2.slidesPerGroup, r2 = i2.centeredSlides, n2 = t2.params.virtual, o2 = n2.addSlidesBefore, l2 = n2.addSlidesAfter, h2 = t2.virtual, p2 = h2.from, c2 = h2.to, u2 = h2.slides, v2 = h2.slidesGrid, f2 = h2.renderSlide, m2 = h2.offset;
        t2.updateActiveIndex();
        var g2, b2, w2, y2 = t2.activeIndex || 0;
        g2 = t2.rtlTranslate ? "right" : t2.isHorizontal() ? "left" : "top", r2 ? (b2 = Math.floor(s2 / 2) + a2 + o2, w2 = Math.floor(s2 / 2) + a2 + l2) : (b2 = s2 + (a2 - 1) + o2, w2 = a2 + l2);
        var x2 = Math.max((y2 || 0) - w2, 0), E2 = Math.min((y2 || 0) + b2, u2.length - 1), T2 = (t2.slidesGrid[x2] || 0) - (t2.slidesGrid[0] || 0);
        function S2() {
          t2.updateSlides(), t2.updateProgress(), t2.updateSlidesClasses(), t2.lazy && t2.params.lazy.enabled && t2.lazy.load();
        }
        if (d.extend(t2.virtual, { from: x2, to: E2, offset: T2, slidesGrid: t2.slidesGrid }), p2 === x2 && c2 === E2 && !e2)
          return t2.slidesGrid !== v2 && T2 !== m2 && t2.slides.css(g2, T2 + "px"), void t2.updateProgress();
        if (t2.params.virtual.renderExternal)
          return t2.params.virtual.renderExternal.call(t2, { offset: T2, from: x2, to: E2, slides: function() {
            for (var e3 = [], t3 = x2; t3 <= E2; t3 += 1)
              e3.push(u2[t3]);
            return e3;
          }() }), void S2();
        var C2 = [], M2 = [];
        if (e2)
          t2.$wrapperEl.find("." + t2.params.slideClass).remove();
        else
          for (var P2 = p2; P2 <= c2; P2 += 1)
            (P2 < x2 || P2 > E2) && t2.$wrapperEl.find("." + t2.params.slideClass + '[data-swiper-slide-index="' + P2 + '"]').remove();
        for (var z2 = 0; z2 < u2.length; z2 += 1)
          z2 >= x2 && z2 <= E2 && (void 0 === c2 || e2 ? M2.push(z2) : (z2 > c2 && M2.push(z2), z2 < p2 && C2.push(z2)));
        M2.forEach(function(e3) {
          t2.$wrapperEl.append(f2(u2[e3], e3));
        }), C2.sort(function(e3, t3) {
          return t3 - e3;
        }).forEach(function(e3) {
          t2.$wrapperEl.prepend(f2(u2[e3], e3));
        }), t2.$wrapperEl.children(".swiper-slide").css(g2, T2 + "px"), S2();
      }, renderSlide: function(e2, t2) {
        var i2 = this.params.virtual;
        if (i2.cache && this.virtual.cache[t2])
          return this.virtual.cache[t2];
        var s2 = i2.renderSlide ? n(i2.renderSlide.call(this, e2, t2)) : n('<div class="' + this.params.slideClass + '" data-swiper-slide-index="' + t2 + '">' + e2 + "</div>");
        return s2.attr("data-swiper-slide-index") || s2.attr("data-swiper-slide-index", t2), i2.cache && (this.virtual.cache[t2] = s2), s2;
      }, appendSlide: function(e2) {
        if ("object" == typeof e2 && "length" in e2)
          for (var t2 = 0; t2 < e2.length; t2 += 1)
            e2[t2] && this.virtual.slides.push(e2[t2]);
        else
          this.virtual.slides.push(e2);
        this.virtual.update(true);
      }, prependSlide: function(e2) {
        var t2 = this.activeIndex, i2 = t2 + 1, s2 = 1;
        if (Array.isArray(e2)) {
          for (var a2 = 0; a2 < e2.length; a2 += 1)
            e2[a2] && this.virtual.slides.unshift(e2[a2]);
          i2 = t2 + e2.length, s2 = e2.length;
        } else
          this.virtual.slides.unshift(e2);
        if (this.params.virtual.cache) {
          var r2 = this.virtual.cache, n2 = {};
          Object.keys(r2).forEach(function(e3) {
            var t3 = r2[e3], i3 = t3.attr("data-swiper-slide-index");
            i3 && t3.attr("data-swiper-slide-index", parseInt(i3, 10) + 1), n2[parseInt(e3, 10) + s2] = t3;
          }), this.virtual.cache = n2;
        }
        this.virtual.update(true), this.slideTo(i2, 0);
      }, removeSlide: function(e2) {
        if (null != e2) {
          var t2 = this.activeIndex;
          if (Array.isArray(e2))
            for (var i2 = e2.length - 1; i2 >= 0; i2 -= 1)
              this.virtual.slides.splice(e2[i2], 1), this.params.virtual.cache && delete this.virtual.cache[e2[i2]], e2[i2] < t2 && (t2 -= 1), t2 = Math.max(t2, 0);
          else
            this.virtual.slides.splice(e2, 1), this.params.virtual.cache && delete this.virtual.cache[e2], e2 < t2 && (t2 -= 1), t2 = Math.max(t2, 0);
          this.virtual.update(true), this.slideTo(t2, 0);
        }
      }, removeAllSlides: function() {
        this.virtual.slides = [], this.params.virtual.cache && (this.virtual.cache = {}), this.virtual.update(true), this.slideTo(0, 0);
      } }, ie = { name: "virtual", params: { virtual: { enabled: false, slides: [], cache: true, renderSlide: null, renderExternal: null, addSlidesBefore: 0, addSlidesAfter: 0 } }, create: function() {
        d.extend(this, { virtual: { update: te.update.bind(this), appendSlide: te.appendSlide.bind(this), prependSlide: te.prependSlide.bind(this), removeSlide: te.removeSlide.bind(this), removeAllSlides: te.removeAllSlides.bind(this), renderSlide: te.renderSlide.bind(this), slides: this.params.virtual.slides, cache: {} } });
      }, on: { beforeInit: function() {
        if (this.params.virtual.enabled) {
          this.classNames.push(this.params.containerModifierClass + "virtual");
          var e2 = { watchSlidesProgress: true };
          d.extend(this.params, e2), d.extend(this.originalParams, e2), this.params.initialSlide || this.virtual.update();
        }
      }, setTranslate: function() {
        this.params.virtual.enabled && this.virtual.update();
      } } }, se = { handle: function(e2) {
        var t2 = this.rtlTranslate, s2 = e2;
        s2.originalEvent && (s2 = s2.originalEvent);
        var r2 = s2.keyCode || s2.charCode, n2 = this.params.keyboard.pageUpDown, o2 = n2 && 33 === r2, l2 = n2 && 34 === r2, d2 = 37 === r2, h2 = 39 === r2, p2 = 38 === r2, c2 = 40 === r2;
        if (!this.allowSlideNext && (this.isHorizontal() && h2 || this.isVertical() && c2 || l2))
          return false;
        if (!this.allowSlidePrev && (this.isHorizontal() && d2 || this.isVertical() && p2 || o2))
          return false;
        if (!(s2.shiftKey || s2.altKey || s2.ctrlKey || s2.metaKey || i.activeElement && i.activeElement.nodeName && ("input" === i.activeElement.nodeName.toLowerCase() || "textarea" === i.activeElement.nodeName.toLowerCase()))) {
          if (this.params.keyboard.onlyInViewport && (o2 || l2 || d2 || h2 || p2 || c2)) {
            var u2 = false;
            if (this.$el.parents("." + this.params.slideClass).length > 0 && 0 === this.$el.parents("." + this.params.slideActiveClass).length)
              return;
            var v2 = a.innerWidth, f2 = a.innerHeight, m2 = this.$el.offset();
            t2 && (m2.left -= this.$el[0].scrollLeft);
            for (var g2 = [[m2.left, m2.top], [m2.left + this.width, m2.top], [m2.left, m2.top + this.height], [m2.left + this.width, m2.top + this.height]], b2 = 0; b2 < g2.length; b2 += 1) {
              var w2 = g2[b2];
              w2[0] >= 0 && w2[0] <= v2 && w2[1] >= 0 && w2[1] <= f2 && (u2 = true);
            }
            if (!u2)
              return;
          }
          this.isHorizontal() ? ((o2 || l2 || d2 || h2) && (s2.preventDefault ? s2.preventDefault() : s2.returnValue = false), ((l2 || h2) && !t2 || (o2 || d2) && t2) && this.slideNext(), ((o2 || d2) && !t2 || (l2 || h2) && t2) && this.slidePrev()) : ((o2 || l2 || p2 || c2) && (s2.preventDefault ? s2.preventDefault() : s2.returnValue = false), (l2 || c2) && this.slideNext(), (o2 || p2) && this.slidePrev()), this.emit("keyPress", r2);
        }
      }, enable: function() {
        this.keyboard.enabled || (n(i).on("keydown", this.keyboard.handle), this.keyboard.enabled = true);
      }, disable: function() {
        this.keyboard.enabled && (n(i).off("keydown", this.keyboard.handle), this.keyboard.enabled = false);
      } }, ae = { name: "keyboard", params: { keyboard: { enabled: false, onlyInViewport: true, pageUpDown: true } }, create: function() {
        d.extend(this, { keyboard: { enabled: false, enable: se.enable.bind(this), disable: se.disable.bind(this), handle: se.handle.bind(this) } });
      }, on: { init: function() {
        this.params.keyboard.enabled && this.keyboard.enable();
      }, destroy: function() {
        this.keyboard.enabled && this.keyboard.disable();
      } } };
      var re = { lastScrollTime: d.now(), lastEventBeforeSnap: void 0, recentWheelEvents: [], event: function() {
        return a.navigator.userAgent.indexOf("firefox") > -1 ? "DOMMouseScroll" : function() {
          var e2 = "onwheel" in i;
          if (!e2) {
            var t2 = i.createElement("div");
            t2.setAttribute("onwheel", "return;"), e2 = "function" == typeof t2.onwheel;
          }
          return !e2 && i.implementation && i.implementation.hasFeature && true !== i.implementation.hasFeature("", "") && (e2 = i.implementation.hasFeature("Events.wheel", "3.0")), e2;
        }() ? "wheel" : "mousewheel";
      }, normalize: function(e2) {
        var t2 = 0, i2 = 0, s2 = 0, a2 = 0;
        return "detail" in e2 && (i2 = e2.detail), "wheelDelta" in e2 && (i2 = -e2.wheelDelta / 120), "wheelDeltaY" in e2 && (i2 = -e2.wheelDeltaY / 120), "wheelDeltaX" in e2 && (t2 = -e2.wheelDeltaX / 120), "axis" in e2 && e2.axis === e2.HORIZONTAL_AXIS && (t2 = i2, i2 = 0), s2 = 10 * t2, a2 = 10 * i2, "deltaY" in e2 && (a2 = e2.deltaY), "deltaX" in e2 && (s2 = e2.deltaX), e2.shiftKey && !s2 && (s2 = a2, a2 = 0), (s2 || a2) && e2.deltaMode && (1 === e2.deltaMode ? (s2 *= 40, a2 *= 40) : (s2 *= 800, a2 *= 800)), s2 && !t2 && (t2 = s2 < 1 ? -1 : 1), a2 && !i2 && (i2 = a2 < 1 ? -1 : 1), { spinX: t2, spinY: i2, pixelX: s2, pixelY: a2 };
      }, handleMouseEnter: function() {
        this.mouseEntered = true;
      }, handleMouseLeave: function() {
        this.mouseEntered = false;
      }, handle: function(e2) {
        var t2 = e2, i2 = this, s2 = i2.params.mousewheel;
        i2.params.cssMode && t2.preventDefault();
        var a2 = i2.$el;
        if ("container" !== i2.params.mousewheel.eventsTarged && (a2 = n(i2.params.mousewheel.eventsTarged)), !i2.mouseEntered && !a2[0].contains(t2.target) && !s2.releaseOnEdges)
          return true;
        t2.originalEvent && (t2 = t2.originalEvent);
        var r2 = 0, o2 = i2.rtlTranslate ? -1 : 1, l2 = re.normalize(t2);
        if (s2.forceToAxis)
          if (i2.isHorizontal()) {
            if (!(Math.abs(l2.pixelX) > Math.abs(l2.pixelY)))
              return true;
            r2 = -l2.pixelX * o2;
          } else {
            if (!(Math.abs(l2.pixelY) > Math.abs(l2.pixelX)))
              return true;
            r2 = -l2.pixelY;
          }
        else
          r2 = Math.abs(l2.pixelX) > Math.abs(l2.pixelY) ? -l2.pixelX * o2 : -l2.pixelY;
        if (0 === r2)
          return true;
        if (s2.invert && (r2 = -r2), i2.params.freeMode) {
          var h2 = { time: d.now(), delta: Math.abs(r2), direction: Math.sign(r2) }, p2 = i2.mousewheel.lastEventBeforeSnap, c2 = p2 && h2.time < p2.time + 500 && h2.delta <= p2.delta && h2.direction === p2.direction;
          if (!c2) {
            i2.mousewheel.lastEventBeforeSnap = void 0, i2.params.loop && i2.loopFix();
            var u2 = i2.getTranslate() + r2 * s2.sensitivity, v2 = i2.isBeginning, f2 = i2.isEnd;
            if (u2 >= i2.minTranslate() && (u2 = i2.minTranslate()), u2 <= i2.maxTranslate() && (u2 = i2.maxTranslate()), i2.setTransition(0), i2.setTranslate(u2), i2.updateProgress(), i2.updateActiveIndex(), i2.updateSlidesClasses(), (!v2 && i2.isBeginning || !f2 && i2.isEnd) && i2.updateSlidesClasses(), i2.params.freeModeSticky) {
              clearTimeout(i2.mousewheel.timeout), i2.mousewheel.timeout = void 0;
              var m2 = i2.mousewheel.recentWheelEvents;
              m2.length >= 15 && m2.shift();
              var g2 = m2.length ? m2[m2.length - 1] : void 0, b2 = m2[0];
              if (m2.push(h2), g2 && (h2.delta > g2.delta || h2.direction !== g2.direction))
                m2.splice(0);
              else if (m2.length >= 15 && h2.time - b2.time < 500 && b2.delta - h2.delta >= 1 && h2.delta <= 6) {
                var w2 = r2 > 0 ? 0.8 : 0.2;
                i2.mousewheel.lastEventBeforeSnap = h2, m2.splice(0), i2.mousewheel.timeout = d.nextTick(function() {
                  i2.slideToClosest(i2.params.speed, true, void 0, w2);
                }, 0);
              }
              i2.mousewheel.timeout || (i2.mousewheel.timeout = d.nextTick(function() {
                i2.mousewheel.lastEventBeforeSnap = h2, m2.splice(0), i2.slideToClosest(i2.params.speed, true, void 0, 0.5);
              }, 500));
            }
            if (c2 || i2.emit("scroll", t2), i2.params.autoplay && i2.params.autoplayDisableOnInteraction && i2.autoplay.stop(), u2 === i2.minTranslate() || u2 === i2.maxTranslate())
              return true;
          }
        } else {
          var y2 = { time: d.now(), delta: Math.abs(r2), direction: Math.sign(r2), raw: e2 }, x2 = i2.mousewheel.recentWheelEvents;
          x2.length >= 2 && x2.shift();
          var E2 = x2.length ? x2[x2.length - 1] : void 0;
          if (x2.push(y2), E2 ? (y2.direction !== E2.direction || y2.delta > E2.delta || y2.time > E2.time + 150) && i2.mousewheel.animateSlider(y2) : i2.mousewheel.animateSlider(y2), i2.mousewheel.releaseScroll(y2))
            return true;
        }
        return t2.preventDefault ? t2.preventDefault() : t2.returnValue = false, false;
      }, animateSlider: function(e2) {
        return e2.delta >= 6 && d.now() - this.mousewheel.lastScrollTime < 60 || (e2.direction < 0 ? this.isEnd && !this.params.loop || this.animating || (this.slideNext(), this.emit("scroll", e2.raw)) : this.isBeginning && !this.params.loop || this.animating || (this.slidePrev(), this.emit("scroll", e2.raw)), this.mousewheel.lastScrollTime = new a.Date().getTime(), false);
      }, releaseScroll: function(e2) {
        var t2 = this.params.mousewheel;
        if (e2.direction < 0) {
          if (this.isEnd && !this.params.loop && t2.releaseOnEdges)
            return true;
        } else if (this.isBeginning && !this.params.loop && t2.releaseOnEdges)
          return true;
        return false;
      }, enable: function() {
        var e2 = re.event();
        if (this.params.cssMode)
          return this.wrapperEl.removeEventListener(e2, this.mousewheel.handle), true;
        if (!e2)
          return false;
        if (this.mousewheel.enabled)
          return false;
        var t2 = this.$el;
        return "container" !== this.params.mousewheel.eventsTarged && (t2 = n(this.params.mousewheel.eventsTarged)), t2.on("mouseenter", this.mousewheel.handleMouseEnter), t2.on("mouseleave", this.mousewheel.handleMouseLeave), t2.on(e2, this.mousewheel.handle), this.mousewheel.enabled = true, true;
      }, disable: function() {
        var e2 = re.event();
        if (this.params.cssMode)
          return this.wrapperEl.addEventListener(e2, this.mousewheel.handle), true;
        if (!e2)
          return false;
        if (!this.mousewheel.enabled)
          return false;
        var t2 = this.$el;
        return "container" !== this.params.mousewheel.eventsTarged && (t2 = n(this.params.mousewheel.eventsTarged)), t2.off(e2, this.mousewheel.handle), this.mousewheel.enabled = false, true;
      } }, ne = { update: function() {
        var e2 = this.params.navigation;
        if (!this.params.loop) {
          var t2 = this.navigation, i2 = t2.$nextEl, s2 = t2.$prevEl;
          s2 && s2.length > 0 && (this.isBeginning ? s2.addClass(e2.disabledClass) : s2.removeClass(e2.disabledClass), s2[this.params.watchOverflow && this.isLocked ? "addClass" : "removeClass"](e2.lockClass)), i2 && i2.length > 0 && (this.isEnd ? i2.addClass(e2.disabledClass) : i2.removeClass(e2.disabledClass), i2[this.params.watchOverflow && this.isLocked ? "addClass" : "removeClass"](e2.lockClass));
        }
      }, onPrevClick: function(e2) {
        e2.preventDefault(), this.isBeginning && !this.params.loop || this.slidePrev();
      }, onNextClick: function(e2) {
        e2.preventDefault(), this.isEnd && !this.params.loop || this.slideNext();
      }, init: function() {
        var e2, t2, i2 = this.params.navigation;
        (i2.nextEl || i2.prevEl) && (i2.nextEl && (e2 = n(i2.nextEl), this.params.uniqueNavElements && "string" == typeof i2.nextEl && e2.length > 1 && 1 === this.$el.find(i2.nextEl).length && (e2 = this.$el.find(i2.nextEl))), i2.prevEl && (t2 = n(i2.prevEl), this.params.uniqueNavElements && "string" == typeof i2.prevEl && t2.length > 1 && 1 === this.$el.find(i2.prevEl).length && (t2 = this.$el.find(i2.prevEl))), e2 && e2.length > 0 && e2.on("click", this.navigation.onNextClick), t2 && t2.length > 0 && t2.on("click", this.navigation.onPrevClick), d.extend(this.navigation, { $nextEl: e2, nextEl: e2 && e2[0], $prevEl: t2, prevEl: t2 && t2[0] }));
      }, destroy: function() {
        var e2 = this.navigation, t2 = e2.$nextEl, i2 = e2.$prevEl;
        t2 && t2.length && (t2.off("click", this.navigation.onNextClick), t2.removeClass(this.params.navigation.disabledClass)), i2 && i2.length && (i2.off("click", this.navigation.onPrevClick), i2.removeClass(this.params.navigation.disabledClass));
      } }, oe = { update: function() {
        var e2 = this.rtl, t2 = this.params.pagination;
        if (t2.el && this.pagination.el && this.pagination.$el && 0 !== this.pagination.$el.length) {
          var i2, s2 = this.virtual && this.params.virtual.enabled ? this.virtual.slides.length : this.slides.length, a2 = this.pagination.$el, r2 = this.params.loop ? Math.ceil((s2 - 2 * this.loopedSlides) / this.params.slidesPerGroup) : this.snapGrid.length;
          if (this.params.loop ? ((i2 = Math.ceil((this.activeIndex - this.loopedSlides) / this.params.slidesPerGroup)) > s2 - 1 - 2 * this.loopedSlides && (i2 -= s2 - 2 * this.loopedSlides), i2 > r2 - 1 && (i2 -= r2), i2 < 0 && "bullets" !== this.params.paginationType && (i2 = r2 + i2)) : i2 = void 0 !== this.snapIndex ? this.snapIndex : this.activeIndex || 0, "bullets" === t2.type && this.pagination.bullets && this.pagination.bullets.length > 0) {
            var o2, l2, d2, h2 = this.pagination.bullets;
            if (t2.dynamicBullets && (this.pagination.bulletSize = h2.eq(0)[this.isHorizontal() ? "outerWidth" : "outerHeight"](true), a2.css(this.isHorizontal() ? "width" : "height", this.pagination.bulletSize * (t2.dynamicMainBullets + 4) + "px"), t2.dynamicMainBullets > 1 && void 0 !== this.previousIndex && (this.pagination.dynamicBulletIndex += i2 - this.previousIndex, this.pagination.dynamicBulletIndex > t2.dynamicMainBullets - 1 ? this.pagination.dynamicBulletIndex = t2.dynamicMainBullets - 1 : this.pagination.dynamicBulletIndex < 0 && (this.pagination.dynamicBulletIndex = 0)), o2 = i2 - this.pagination.dynamicBulletIndex, d2 = ((l2 = o2 + (Math.min(h2.length, t2.dynamicMainBullets) - 1)) + o2) / 2), h2.removeClass(t2.bulletActiveClass + " " + t2.bulletActiveClass + "-next " + t2.bulletActiveClass + "-next-next " + t2.bulletActiveClass + "-prev " + t2.bulletActiveClass + "-prev-prev " + t2.bulletActiveClass + "-main"), a2.length > 1)
              h2.each(function(e3, s3) {
                var a3 = n(s3), r3 = a3.index();
                r3 === i2 && a3.addClass(t2.bulletActiveClass), t2.dynamicBullets && (r3 >= o2 && r3 <= l2 && a3.addClass(t2.bulletActiveClass + "-main"), r3 === o2 && a3.prev().addClass(t2.bulletActiveClass + "-prev").prev().addClass(t2.bulletActiveClass + "-prev-prev"), r3 === l2 && a3.next().addClass(t2.bulletActiveClass + "-next").next().addClass(t2.bulletActiveClass + "-next-next"));
              });
            else {
              var p2 = h2.eq(i2), c2 = p2.index();
              if (p2.addClass(t2.bulletActiveClass), t2.dynamicBullets) {
                for (var u2 = h2.eq(o2), v2 = h2.eq(l2), f2 = o2; f2 <= l2; f2 += 1)
                  h2.eq(f2).addClass(t2.bulletActiveClass + "-main");
                if (this.params.loop)
                  if (c2 >= h2.length - t2.dynamicMainBullets) {
                    for (var m2 = t2.dynamicMainBullets; m2 >= 0; m2 -= 1)
                      h2.eq(h2.length - m2).addClass(t2.bulletActiveClass + "-main");
                    h2.eq(h2.length - t2.dynamicMainBullets - 1).addClass(t2.bulletActiveClass + "-prev");
                  } else
                    u2.prev().addClass(t2.bulletActiveClass + "-prev").prev().addClass(t2.bulletActiveClass + "-prev-prev"), v2.next().addClass(t2.bulletActiveClass + "-next").next().addClass(t2.bulletActiveClass + "-next-next");
                else
                  u2.prev().addClass(t2.bulletActiveClass + "-prev").prev().addClass(t2.bulletActiveClass + "-prev-prev"), v2.next().addClass(t2.bulletActiveClass + "-next").next().addClass(t2.bulletActiveClass + "-next-next");
              }
            }
            if (t2.dynamicBullets) {
              var g2 = Math.min(h2.length, t2.dynamicMainBullets + 4), b2 = (this.pagination.bulletSize * g2 - this.pagination.bulletSize) / 2 - d2 * this.pagination.bulletSize, w2 = e2 ? "right" : "left";
              h2.css(this.isHorizontal() ? w2 : "top", b2 + "px");
            }
          }
          if ("fraction" === t2.type && (a2.find("." + t2.currentClass).text(t2.formatFractionCurrent(i2 + 1)), a2.find("." + t2.totalClass).text(t2.formatFractionTotal(r2))), "progressbar" === t2.type) {
            var y2;
            y2 = t2.progressbarOpposite ? this.isHorizontal() ? "vertical" : "horizontal" : this.isHorizontal() ? "horizontal" : "vertical";
            var x2 = (i2 + 1) / r2, E2 = 1, T2 = 1;
            "horizontal" === y2 ? E2 = x2 : T2 = x2, a2.find("." + t2.progressbarFillClass).transform("translate3d(0,0,0) scaleX(" + E2 + ") scaleY(" + T2 + ")").transition(this.params.speed);
          }
          "custom" === t2.type && t2.renderCustom ? (a2.html(t2.renderCustom(this, i2 + 1, r2)), this.emit("paginationRender", this, a2[0])) : this.emit("paginationUpdate", this, a2[0]), a2[this.params.watchOverflow && this.isLocked ? "addClass" : "removeClass"](t2.lockClass);
        }
      }, render: function() {
        var e2 = this.params.pagination;
        if (e2.el && this.pagination.el && this.pagination.$el && 0 !== this.pagination.$el.length) {
          var t2 = this.virtual && this.params.virtual.enabled ? this.virtual.slides.length : this.slides.length, i2 = this.pagination.$el, s2 = "";
          if ("bullets" === e2.type) {
            for (var a2 = this.params.loop ? Math.ceil((t2 - 2 * this.loopedSlides) / this.params.slidesPerGroup) : this.snapGrid.length, r2 = 0; r2 < a2; r2 += 1)
              e2.renderBullet ? s2 += e2.renderBullet.call(this, r2, e2.bulletClass) : s2 += "<" + e2.bulletElement + ' class="' + e2.bulletClass + '"></' + e2.bulletElement + ">";
            i2.html(s2), this.pagination.bullets = i2.find("." + e2.bulletClass);
          }
          "fraction" === e2.type && (s2 = e2.renderFraction ? e2.renderFraction.call(this, e2.currentClass, e2.totalClass) : '<span class="' + e2.currentClass + '"></span> / <span class="' + e2.totalClass + '"></span>', i2.html(s2)), "progressbar" === e2.type && (s2 = e2.renderProgressbar ? e2.renderProgressbar.call(this, e2.progressbarFillClass) : '<span class="' + e2.progressbarFillClass + '"></span>', i2.html(s2)), "custom" !== e2.type && this.emit("paginationRender", this.pagination.$el[0]);
        }
      }, init: function() {
        var e2 = this, t2 = e2.params.pagination;
        if (t2.el) {
          var i2 = n(t2.el);
          0 !== i2.length && (e2.params.uniqueNavElements && "string" == typeof t2.el && i2.length > 1 && (i2 = e2.$el.find(t2.el)), "bullets" === t2.type && t2.clickable && i2.addClass(t2.clickableClass), i2.addClass(t2.modifierClass + t2.type), "bullets" === t2.type && t2.dynamicBullets && (i2.addClass("" + t2.modifierClass + t2.type + "-dynamic"), e2.pagination.dynamicBulletIndex = 0, t2.dynamicMainBullets < 1 && (t2.dynamicMainBullets = 1)), "progressbar" === t2.type && t2.progressbarOpposite && i2.addClass(t2.progressbarOppositeClass), t2.clickable && i2.on("click", "." + t2.bulletClass, function(t3) {
            t3.preventDefault();
            var i3 = n(this).index() * e2.params.slidesPerGroup;
            e2.params.loop && (i3 += e2.loopedSlides), e2.slideTo(i3);
          }), d.extend(e2.pagination, { $el: i2, el: i2[0] }));
        }
      }, destroy: function() {
        var e2 = this.params.pagination;
        if (e2.el && this.pagination.el && this.pagination.$el && 0 !== this.pagination.$el.length) {
          var t2 = this.pagination.$el;
          t2.removeClass(e2.hiddenClass), t2.removeClass(e2.modifierClass + e2.type), this.pagination.bullets && this.pagination.bullets.removeClass(e2.bulletActiveClass), e2.clickable && t2.off("click", "." + e2.bulletClass);
        }
      } }, le = { setTranslate: function() {
        if (this.params.scrollbar.el && this.scrollbar.el) {
          var e2 = this.scrollbar, t2 = this.rtlTranslate, i2 = this.progress, s2 = e2.dragSize, a2 = e2.trackSize, r2 = e2.$dragEl, n2 = e2.$el, o2 = this.params.scrollbar, l2 = s2, d2 = (a2 - s2) * i2;
          t2 ? (d2 = -d2) > 0 ? (l2 = s2 - d2, d2 = 0) : -d2 + s2 > a2 && (l2 = a2 + d2) : d2 < 0 ? (l2 = s2 + d2, d2 = 0) : d2 + s2 > a2 && (l2 = a2 - d2), this.isHorizontal() ? (r2.transform("translate3d(" + d2 + "px, 0, 0)"), r2[0].style.width = l2 + "px") : (r2.transform("translate3d(0px, " + d2 + "px, 0)"), r2[0].style.height = l2 + "px"), o2.hide && (clearTimeout(this.scrollbar.timeout), n2[0].style.opacity = 1, this.scrollbar.timeout = setTimeout(function() {
            n2[0].style.opacity = 0, n2.transition(400);
          }, 1e3));
        }
      }, setTransition: function(e2) {
        this.params.scrollbar.el && this.scrollbar.el && this.scrollbar.$dragEl.transition(e2);
      }, updateSize: function() {
        if (this.params.scrollbar.el && this.scrollbar.el) {
          var e2 = this.scrollbar, t2 = e2.$dragEl, i2 = e2.$el;
          t2[0].style.width = "", t2[0].style.height = "";
          var s2, a2 = this.isHorizontal() ? i2[0].offsetWidth : i2[0].offsetHeight, r2 = this.size / this.virtualSize, n2 = r2 * (a2 / this.size);
          s2 = "auto" === this.params.scrollbar.dragSize ? a2 * r2 : parseInt(this.params.scrollbar.dragSize, 10), this.isHorizontal() ? t2[0].style.width = s2 + "px" : t2[0].style.height = s2 + "px", i2[0].style.display = r2 >= 1 ? "none" : "", this.params.scrollbar.hide && (i2[0].style.opacity = 0), d.extend(e2, { trackSize: a2, divider: r2, moveDivider: n2, dragSize: s2 }), e2.$el[this.params.watchOverflow && this.isLocked ? "addClass" : "removeClass"](this.params.scrollbar.lockClass);
        }
      }, getPointerPosition: function(e2) {
        return this.isHorizontal() ? "touchstart" === e2.type || "touchmove" === e2.type ? e2.targetTouches[0].clientX : e2.clientX : "touchstart" === e2.type || "touchmove" === e2.type ? e2.targetTouches[0].clientY : e2.clientY;
      }, setDragPosition: function(e2) {
        var t2, i2 = this.scrollbar, s2 = this.rtlTranslate, a2 = i2.$el, r2 = i2.dragSize, n2 = i2.trackSize, o2 = i2.dragStartPos;
        t2 = (i2.getPointerPosition(e2) - a2.offset()[this.isHorizontal() ? "left" : "top"] - (null !== o2 ? o2 : r2 / 2)) / (n2 - r2), t2 = Math.max(Math.min(t2, 1), 0), s2 && (t2 = 1 - t2);
        var l2 = this.minTranslate() + (this.maxTranslate() - this.minTranslate()) * t2;
        this.updateProgress(l2), this.setTranslate(l2), this.updateActiveIndex(), this.updateSlidesClasses();
      }, onDragStart: function(e2) {
        var t2 = this.params.scrollbar, i2 = this.scrollbar, s2 = this.$wrapperEl, a2 = i2.$el, r2 = i2.$dragEl;
        this.scrollbar.isTouched = true, this.scrollbar.dragStartPos = e2.target === r2[0] || e2.target === r2 ? i2.getPointerPosition(e2) - e2.target.getBoundingClientRect()[this.isHorizontal() ? "left" : "top"] : null, e2.preventDefault(), e2.stopPropagation(), s2.transition(100), r2.transition(100), i2.setDragPosition(e2), clearTimeout(this.scrollbar.dragTimeout), a2.transition(0), t2.hide && a2.css("opacity", 1), this.params.cssMode && this.$wrapperEl.css("scroll-snap-type", "none"), this.emit("scrollbarDragStart", e2);
      }, onDragMove: function(e2) {
        var t2 = this.scrollbar, i2 = this.$wrapperEl, s2 = t2.$el, a2 = t2.$dragEl;
        this.scrollbar.isTouched && (e2.preventDefault ? e2.preventDefault() : e2.returnValue = false, t2.setDragPosition(e2), i2.transition(0), s2.transition(0), a2.transition(0), this.emit("scrollbarDragMove", e2));
      }, onDragEnd: function(e2) {
        var t2 = this.params.scrollbar, i2 = this.scrollbar, s2 = this.$wrapperEl, a2 = i2.$el;
        this.scrollbar.isTouched && (this.scrollbar.isTouched = false, this.params.cssMode && (this.$wrapperEl.css("scroll-snap-type", ""), s2.transition("")), t2.hide && (clearTimeout(this.scrollbar.dragTimeout), this.scrollbar.dragTimeout = d.nextTick(function() {
          a2.css("opacity", 0), a2.transition(400);
        }, 1e3)), this.emit("scrollbarDragEnd", e2), t2.snapOnRelease && this.slideToClosest());
      }, enableDraggable: function() {
        if (this.params.scrollbar.el) {
          var e2 = this.scrollbar, t2 = this.touchEventsTouch, s2 = this.touchEventsDesktop, a2 = this.params, r2 = e2.$el[0], n2 = !(!h.passiveListener || !a2.passiveListeners) && { passive: false, capture: false }, o2 = !(!h.passiveListener || !a2.passiveListeners) && { passive: true, capture: false };
          h.touch ? (r2.addEventListener(t2.start, this.scrollbar.onDragStart, n2), r2.addEventListener(t2.move, this.scrollbar.onDragMove, n2), r2.addEventListener(t2.end, this.scrollbar.onDragEnd, o2)) : (r2.addEventListener(s2.start, this.scrollbar.onDragStart, n2), i.addEventListener(s2.move, this.scrollbar.onDragMove, n2), i.addEventListener(s2.end, this.scrollbar.onDragEnd, o2));
        }
      }, disableDraggable: function() {
        if (this.params.scrollbar.el) {
          var e2 = this.scrollbar, t2 = this.touchEventsTouch, s2 = this.touchEventsDesktop, a2 = this.params, r2 = e2.$el[0], n2 = !(!h.passiveListener || !a2.passiveListeners) && { passive: false, capture: false }, o2 = !(!h.passiveListener || !a2.passiveListeners) && { passive: true, capture: false };
          h.touch ? (r2.removeEventListener(t2.start, this.scrollbar.onDragStart, n2), r2.removeEventListener(t2.move, this.scrollbar.onDragMove, n2), r2.removeEventListener(t2.end, this.scrollbar.onDragEnd, o2)) : (r2.removeEventListener(s2.start, this.scrollbar.onDragStart, n2), i.removeEventListener(s2.move, this.scrollbar.onDragMove, n2), i.removeEventListener(s2.end, this.scrollbar.onDragEnd, o2));
        }
      }, init: function() {
        if (this.params.scrollbar.el) {
          var e2 = this.scrollbar, t2 = this.$el, i2 = this.params.scrollbar, s2 = n(i2.el);
          this.params.uniqueNavElements && "string" == typeof i2.el && s2.length > 1 && 1 === t2.find(i2.el).length && (s2 = t2.find(i2.el));
          var a2 = s2.find("." + this.params.scrollbar.dragClass);
          0 === a2.length && (a2 = n('<div class="' + this.params.scrollbar.dragClass + '"></div>'), s2.append(a2)), d.extend(e2, { $el: s2, el: s2[0], $dragEl: a2, dragEl: a2[0] }), i2.draggable && e2.enableDraggable();
        }
      }, destroy: function() {
        this.scrollbar.disableDraggable();
      } }, de = { setTransform: function(e2, t2) {
        var i2 = this.rtl, s2 = n(e2), a2 = i2 ? -1 : 1, r2 = s2.attr("data-swiper-parallax") || "0", o2 = s2.attr("data-swiper-parallax-x"), l2 = s2.attr("data-swiper-parallax-y"), d2 = s2.attr("data-swiper-parallax-scale"), h2 = s2.attr("data-swiper-parallax-opacity");
        if (o2 || l2 ? (o2 = o2 || "0", l2 = l2 || "0") : this.isHorizontal() ? (o2 = r2, l2 = "0") : (l2 = r2, o2 = "0"), o2 = o2.indexOf("%") >= 0 ? parseInt(o2, 10) * t2 * a2 + "%" : o2 * t2 * a2 + "px", l2 = l2.indexOf("%") >= 0 ? parseInt(l2, 10) * t2 + "%" : l2 * t2 + "px", null != h2) {
          var p2 = h2 - (h2 - 1) * (1 - Math.abs(t2));
          s2[0].style.opacity = p2;
        }
        if (null == d2)
          s2.transform("translate3d(" + o2 + ", " + l2 + ", 0px)");
        else {
          var c2 = d2 - (d2 - 1) * (1 - Math.abs(t2));
          s2.transform("translate3d(" + o2 + ", " + l2 + ", 0px) scale(" + c2 + ")");
        }
      }, setTranslate: function() {
        var e2 = this, t2 = e2.$el, i2 = e2.slides, s2 = e2.progress, a2 = e2.snapGrid;
        t2.children("[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]").each(function(t3, i3) {
          e2.parallax.setTransform(i3, s2);
        }), i2.each(function(t3, i3) {
          var r2 = i3.progress;
          e2.params.slidesPerGroup > 1 && "auto" !== e2.params.slidesPerView && (r2 += Math.ceil(t3 / 2) - s2 * (a2.length - 1)), r2 = Math.min(Math.max(r2, -1), 1), n(i3).find("[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]").each(function(t4, i4) {
            e2.parallax.setTransform(i4, r2);
          });
        });
      }, setTransition: function(e2) {
        void 0 === e2 && (e2 = this.params.speed);
        this.$el.find("[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]").each(function(t2, i2) {
          var s2 = n(i2), a2 = parseInt(s2.attr("data-swiper-parallax-duration"), 10) || e2;
          0 === e2 && (a2 = 0), s2.transition(a2);
        });
      } }, he = { getDistanceBetweenTouches: function(e2) {
        if (e2.targetTouches.length < 2)
          return 1;
        var t2 = e2.targetTouches[0].pageX, i2 = e2.targetTouches[0].pageY, s2 = e2.targetTouches[1].pageX, a2 = e2.targetTouches[1].pageY;
        return Math.sqrt(Math.pow(s2 - t2, 2) + Math.pow(a2 - i2, 2));
      }, onGestureStart: function(e2) {
        var t2 = this.params.zoom, i2 = this.zoom, s2 = i2.gesture;
        if (i2.fakeGestureTouched = false, i2.fakeGestureMoved = false, !h.gestures) {
          if ("touchstart" !== e2.type || "touchstart" === e2.type && e2.targetTouches.length < 2)
            return;
          i2.fakeGestureTouched = true, s2.scaleStart = he.getDistanceBetweenTouches(e2);
        }
        s2.$slideEl && s2.$slideEl.length || (s2.$slideEl = n(e2.target).closest("." + this.params.slideClass), 0 === s2.$slideEl.length && (s2.$slideEl = this.slides.eq(this.activeIndex)), s2.$imageEl = s2.$slideEl.find("img, svg, canvas, picture, .swiper-zoom-target"), s2.$imageWrapEl = s2.$imageEl.parent("." + t2.containerClass), s2.maxRatio = s2.$imageWrapEl.attr("data-swiper-zoom") || t2.maxRatio, 0 !== s2.$imageWrapEl.length) ? (s2.$imageEl && s2.$imageEl.transition(0), this.zoom.isScaling = true) : s2.$imageEl = void 0;
      }, onGestureChange: function(e2) {
        var t2 = this.params.zoom, i2 = this.zoom, s2 = i2.gesture;
        if (!h.gestures) {
          if ("touchmove" !== e2.type || "touchmove" === e2.type && e2.targetTouches.length < 2)
            return;
          i2.fakeGestureMoved = true, s2.scaleMove = he.getDistanceBetweenTouches(e2);
        }
        s2.$imageEl && 0 !== s2.$imageEl.length && (i2.scale = h.gestures ? e2.scale * i2.currentScale : s2.scaleMove / s2.scaleStart * i2.currentScale, i2.scale > s2.maxRatio && (i2.scale = s2.maxRatio - 1 + Math.pow(i2.scale - s2.maxRatio + 1, 0.5)), i2.scale < t2.minRatio && (i2.scale = t2.minRatio + 1 - Math.pow(t2.minRatio - i2.scale + 1, 0.5)), s2.$imageEl.transform("translate3d(0,0,0) scale(" + i2.scale + ")"));
      }, onGestureEnd: function(e2) {
        var t2 = this.params.zoom, i2 = this.zoom, s2 = i2.gesture;
        if (!h.gestures) {
          if (!i2.fakeGestureTouched || !i2.fakeGestureMoved)
            return;
          if ("touchend" !== e2.type || "touchend" === e2.type && e2.changedTouches.length < 2 && !A.android)
            return;
          i2.fakeGestureTouched = false, i2.fakeGestureMoved = false;
        }
        s2.$imageEl && 0 !== s2.$imageEl.length && (i2.scale = Math.max(Math.min(i2.scale, s2.maxRatio), t2.minRatio), s2.$imageEl.transition(this.params.speed).transform("translate3d(0,0,0) scale(" + i2.scale + ")"), i2.currentScale = i2.scale, i2.isScaling = false, 1 === i2.scale && (s2.$slideEl = void 0));
      }, onTouchStart: function(e2) {
        var t2 = this.zoom, i2 = t2.gesture, s2 = t2.image;
        i2.$imageEl && 0 !== i2.$imageEl.length && (s2.isTouched || (A.android && e2.cancelable && e2.preventDefault(), s2.isTouched = true, s2.touchesStart.x = "touchstart" === e2.type ? e2.targetTouches[0].pageX : e2.pageX, s2.touchesStart.y = "touchstart" === e2.type ? e2.targetTouches[0].pageY : e2.pageY));
      }, onTouchMove: function(e2) {
        var t2 = this.zoom, i2 = t2.gesture, s2 = t2.image, a2 = t2.velocity;
        if (i2.$imageEl && 0 !== i2.$imageEl.length && (this.allowClick = false, s2.isTouched && i2.$slideEl)) {
          s2.isMoved || (s2.width = i2.$imageEl[0].offsetWidth, s2.height = i2.$imageEl[0].offsetHeight, s2.startX = d.getTranslate(i2.$imageWrapEl[0], "x") || 0, s2.startY = d.getTranslate(i2.$imageWrapEl[0], "y") || 0, i2.slideWidth = i2.$slideEl[0].offsetWidth, i2.slideHeight = i2.$slideEl[0].offsetHeight, i2.$imageWrapEl.transition(0), this.rtl && (s2.startX = -s2.startX, s2.startY = -s2.startY));
          var r2 = s2.width * t2.scale, n2 = s2.height * t2.scale;
          if (!(r2 < i2.slideWidth && n2 < i2.slideHeight)) {
            if (s2.minX = Math.min(i2.slideWidth / 2 - r2 / 2, 0), s2.maxX = -s2.minX, s2.minY = Math.min(i2.slideHeight / 2 - n2 / 2, 0), s2.maxY = -s2.minY, s2.touchesCurrent.x = "touchmove" === e2.type ? e2.targetTouches[0].pageX : e2.pageX, s2.touchesCurrent.y = "touchmove" === e2.type ? e2.targetTouches[0].pageY : e2.pageY, !s2.isMoved && !t2.isScaling) {
              if (this.isHorizontal() && (Math.floor(s2.minX) === Math.floor(s2.startX) && s2.touchesCurrent.x < s2.touchesStart.x || Math.floor(s2.maxX) === Math.floor(s2.startX) && s2.touchesCurrent.x > s2.touchesStart.x))
                return void (s2.isTouched = false);
              if (!this.isHorizontal() && (Math.floor(s2.minY) === Math.floor(s2.startY) && s2.touchesCurrent.y < s2.touchesStart.y || Math.floor(s2.maxY) === Math.floor(s2.startY) && s2.touchesCurrent.y > s2.touchesStart.y))
                return void (s2.isTouched = false);
            }
            e2.cancelable && e2.preventDefault(), e2.stopPropagation(), s2.isMoved = true, s2.currentX = s2.touchesCurrent.x - s2.touchesStart.x + s2.startX, s2.currentY = s2.touchesCurrent.y - s2.touchesStart.y + s2.startY, s2.currentX < s2.minX && (s2.currentX = s2.minX + 1 - Math.pow(s2.minX - s2.currentX + 1, 0.8)), s2.currentX > s2.maxX && (s2.currentX = s2.maxX - 1 + Math.pow(s2.currentX - s2.maxX + 1, 0.8)), s2.currentY < s2.minY && (s2.currentY = s2.minY + 1 - Math.pow(s2.minY - s2.currentY + 1, 0.8)), s2.currentY > s2.maxY && (s2.currentY = s2.maxY - 1 + Math.pow(s2.currentY - s2.maxY + 1, 0.8)), a2.prevPositionX || (a2.prevPositionX = s2.touchesCurrent.x), a2.prevPositionY || (a2.prevPositionY = s2.touchesCurrent.y), a2.prevTime || (a2.prevTime = Date.now()), a2.x = (s2.touchesCurrent.x - a2.prevPositionX) / (Date.now() - a2.prevTime) / 2, a2.y = (s2.touchesCurrent.y - a2.prevPositionY) / (Date.now() - a2.prevTime) / 2, Math.abs(s2.touchesCurrent.x - a2.prevPositionX) < 2 && (a2.x = 0), Math.abs(s2.touchesCurrent.y - a2.prevPositionY) < 2 && (a2.y = 0), a2.prevPositionX = s2.touchesCurrent.x, a2.prevPositionY = s2.touchesCurrent.y, a2.prevTime = Date.now(), i2.$imageWrapEl.transform("translate3d(" + s2.currentX + "px, " + s2.currentY + "px,0)");
          }
        }
      }, onTouchEnd: function() {
        var e2 = this.zoom, t2 = e2.gesture, i2 = e2.image, s2 = e2.velocity;
        if (t2.$imageEl && 0 !== t2.$imageEl.length) {
          if (!i2.isTouched || !i2.isMoved)
            return i2.isTouched = false, void (i2.isMoved = false);
          i2.isTouched = false, i2.isMoved = false;
          var a2 = 300, r2 = 300, n2 = s2.x * a2, o2 = i2.currentX + n2, l2 = s2.y * r2, d2 = i2.currentY + l2;
          0 !== s2.x && (a2 = Math.abs((o2 - i2.currentX) / s2.x)), 0 !== s2.y && (r2 = Math.abs((d2 - i2.currentY) / s2.y));
          var h2 = Math.max(a2, r2);
          i2.currentX = o2, i2.currentY = d2;
          var p2 = i2.width * e2.scale, c2 = i2.height * e2.scale;
          i2.minX = Math.min(t2.slideWidth / 2 - p2 / 2, 0), i2.maxX = -i2.minX, i2.minY = Math.min(t2.slideHeight / 2 - c2 / 2, 0), i2.maxY = -i2.minY, i2.currentX = Math.max(Math.min(i2.currentX, i2.maxX), i2.minX), i2.currentY = Math.max(Math.min(i2.currentY, i2.maxY), i2.minY), t2.$imageWrapEl.transition(h2).transform("translate3d(" + i2.currentX + "px, " + i2.currentY + "px,0)");
        }
      }, onTransitionEnd: function() {
        var e2 = this.zoom, t2 = e2.gesture;
        t2.$slideEl && this.previousIndex !== this.activeIndex && (t2.$imageEl && t2.$imageEl.transform("translate3d(0,0,0) scale(1)"), t2.$imageWrapEl && t2.$imageWrapEl.transform("translate3d(0,0,0)"), e2.scale = 1, e2.currentScale = 1, t2.$slideEl = void 0, t2.$imageEl = void 0, t2.$imageWrapEl = void 0);
      }, toggle: function(e2) {
        var t2 = this.zoom;
        t2.scale && 1 !== t2.scale ? t2.out() : t2.in(e2);
      }, in: function(e2) {
        var t2, i2, s2, a2, r2, n2, o2, l2, d2, h2, p2, c2, u2, v2, f2, m2, g2 = this.zoom, b2 = this.params.zoom, w2 = g2.gesture, y2 = g2.image;
        (w2.$slideEl || (this.params.virtual && this.params.virtual.enabled && this.virtual ? w2.$slideEl = this.$wrapperEl.children("." + this.params.slideActiveClass) : w2.$slideEl = this.slides.eq(this.activeIndex), w2.$imageEl = w2.$slideEl.find("img, svg, canvas, picture, .swiper-zoom-target"), w2.$imageWrapEl = w2.$imageEl.parent("." + b2.containerClass)), w2.$imageEl && 0 !== w2.$imageEl.length) && (w2.$slideEl.addClass("" + b2.zoomedSlideClass), void 0 === y2.touchesStart.x && e2 ? (t2 = "touchend" === e2.type ? e2.changedTouches[0].pageX : e2.pageX, i2 = "touchend" === e2.type ? e2.changedTouches[0].pageY : e2.pageY) : (t2 = y2.touchesStart.x, i2 = y2.touchesStart.y), g2.scale = w2.$imageWrapEl.attr("data-swiper-zoom") || b2.maxRatio, g2.currentScale = w2.$imageWrapEl.attr("data-swiper-zoom") || b2.maxRatio, e2 ? (f2 = w2.$slideEl[0].offsetWidth, m2 = w2.$slideEl[0].offsetHeight, s2 = w2.$slideEl.offset().left + f2 / 2 - t2, a2 = w2.$slideEl.offset().top + m2 / 2 - i2, o2 = w2.$imageEl[0].offsetWidth, l2 = w2.$imageEl[0].offsetHeight, d2 = o2 * g2.scale, h2 = l2 * g2.scale, u2 = -(p2 = Math.min(f2 / 2 - d2 / 2, 0)), v2 = -(c2 = Math.min(m2 / 2 - h2 / 2, 0)), (r2 = s2 * g2.scale) < p2 && (r2 = p2), r2 > u2 && (r2 = u2), (n2 = a2 * g2.scale) < c2 && (n2 = c2), n2 > v2 && (n2 = v2)) : (r2 = 0, n2 = 0), w2.$imageWrapEl.transition(300).transform("translate3d(" + r2 + "px, " + n2 + "px,0)"), w2.$imageEl.transition(300).transform("translate3d(0,0,0) scale(" + g2.scale + ")"));
      }, out: function() {
        var e2 = this.zoom, t2 = this.params.zoom, i2 = e2.gesture;
        i2.$slideEl || (this.params.virtual && this.params.virtual.enabled && this.virtual ? i2.$slideEl = this.$wrapperEl.children("." + this.params.slideActiveClass) : i2.$slideEl = this.slides.eq(this.activeIndex), i2.$imageEl = i2.$slideEl.find("img, svg, canvas, picture, .swiper-zoom-target"), i2.$imageWrapEl = i2.$imageEl.parent("." + t2.containerClass)), i2.$imageEl && 0 !== i2.$imageEl.length && (e2.scale = 1, e2.currentScale = 1, i2.$imageWrapEl.transition(300).transform("translate3d(0,0,0)"), i2.$imageEl.transition(300).transform("translate3d(0,0,0) scale(1)"), i2.$slideEl.removeClass("" + t2.zoomedSlideClass), i2.$slideEl = void 0);
      }, enable: function() {
        var e2 = this.zoom;
        if (!e2.enabled) {
          e2.enabled = true;
          var t2 = !("touchstart" !== this.touchEvents.start || !h.passiveListener || !this.params.passiveListeners) && { passive: true, capture: false }, i2 = !h.passiveListener || { passive: false, capture: true }, s2 = "." + this.params.slideClass;
          h.gestures ? (this.$wrapperEl.on("gesturestart", s2, e2.onGestureStart, t2), this.$wrapperEl.on("gesturechange", s2, e2.onGestureChange, t2), this.$wrapperEl.on("gestureend", s2, e2.onGestureEnd, t2)) : "touchstart" === this.touchEvents.start && (this.$wrapperEl.on(this.touchEvents.start, s2, e2.onGestureStart, t2), this.$wrapperEl.on(this.touchEvents.move, s2, e2.onGestureChange, i2), this.$wrapperEl.on(this.touchEvents.end, s2, e2.onGestureEnd, t2), this.touchEvents.cancel && this.$wrapperEl.on(this.touchEvents.cancel, s2, e2.onGestureEnd, t2)), this.$wrapperEl.on(this.touchEvents.move, "." + this.params.zoom.containerClass, e2.onTouchMove, i2);
        }
      }, disable: function() {
        var e2 = this.zoom;
        if (e2.enabled) {
          this.zoom.enabled = false;
          var t2 = !("touchstart" !== this.touchEvents.start || !h.passiveListener || !this.params.passiveListeners) && { passive: true, capture: false }, i2 = !h.passiveListener || { passive: false, capture: true }, s2 = "." + this.params.slideClass;
          h.gestures ? (this.$wrapperEl.off("gesturestart", s2, e2.onGestureStart, t2), this.$wrapperEl.off("gesturechange", s2, e2.onGestureChange, t2), this.$wrapperEl.off("gestureend", s2, e2.onGestureEnd, t2)) : "touchstart" === this.touchEvents.start && (this.$wrapperEl.off(this.touchEvents.start, s2, e2.onGestureStart, t2), this.$wrapperEl.off(this.touchEvents.move, s2, e2.onGestureChange, i2), this.$wrapperEl.off(this.touchEvents.end, s2, e2.onGestureEnd, t2), this.touchEvents.cancel && this.$wrapperEl.off(this.touchEvents.cancel, s2, e2.onGestureEnd, t2)), this.$wrapperEl.off(this.touchEvents.move, "." + this.params.zoom.containerClass, e2.onTouchMove, i2);
        }
      } }, pe = { loadInSlide: function(e2, t2) {
        void 0 === t2 && (t2 = true);
        var i2 = this, s2 = i2.params.lazy;
        if (void 0 !== e2 && 0 !== i2.slides.length) {
          var a2 = i2.virtual && i2.params.virtual.enabled ? i2.$wrapperEl.children("." + i2.params.slideClass + '[data-swiper-slide-index="' + e2 + '"]') : i2.slides.eq(e2), r2 = a2.find("." + s2.elementClass + ":not(." + s2.loadedClass + "):not(." + s2.loadingClass + ")");
          !a2.hasClass(s2.elementClass) || a2.hasClass(s2.loadedClass) || a2.hasClass(s2.loadingClass) || (r2 = r2.add(a2[0])), 0 !== r2.length && r2.each(function(e3, r3) {
            var o2 = n(r3);
            o2.addClass(s2.loadingClass);
            var l2 = o2.attr("data-background"), d2 = o2.attr("data-src"), h2 = o2.attr("data-srcset"), p2 = o2.attr("data-sizes"), c2 = o2.parent("picture");
            i2.loadImage(o2[0], d2 || l2, h2, p2, false, function() {
              if (null != i2 && i2 && (!i2 || i2.params) && !i2.destroyed) {
                if (l2 ? (o2.css("background-image", 'url("' + l2 + '")'), o2.removeAttr("data-background")) : (h2 && (o2.attr("srcset", h2), o2.removeAttr("data-srcset")), p2 && (o2.attr("sizes", p2), o2.removeAttr("data-sizes")), c2.length && c2.children("source").each(function(e5, t3) {
                  var i3 = n(t3);
                  i3.attr("data-srcset") && (i3.attr("srcset", i3.attr("data-srcset")), i3.removeAttr("data-srcset"));
                }), d2 && (o2.attr("src", d2), o2.removeAttr("data-src"))), o2.addClass(s2.loadedClass).removeClass(s2.loadingClass), a2.find("." + s2.preloaderClass).remove(), i2.params.loop && t2) {
                  var e4 = a2.attr("data-swiper-slide-index");
                  if (a2.hasClass(i2.params.slideDuplicateClass)) {
                    var r4 = i2.$wrapperEl.children('[data-swiper-slide-index="' + e4 + '"]:not(.' + i2.params.slideDuplicateClass + ")");
                    i2.lazy.loadInSlide(r4.index(), false);
                  } else {
                    var u2 = i2.$wrapperEl.children("." + i2.params.slideDuplicateClass + '[data-swiper-slide-index="' + e4 + '"]');
                    i2.lazy.loadInSlide(u2.index(), false);
                  }
                }
                i2.emit("lazyImageReady", a2[0], o2[0]), i2.params.autoHeight && i2.updateAutoHeight();
              }
            }), i2.emit("lazyImageLoad", a2[0], o2[0]);
          });
        }
      }, load: function() {
        var e2 = this, t2 = e2.$wrapperEl, i2 = e2.params, s2 = e2.slides, a2 = e2.activeIndex, r2 = e2.virtual && i2.virtual.enabled, o2 = i2.lazy, l2 = i2.slidesPerView;
        function d2(e3) {
          if (r2) {
            if (t2.children("." + i2.slideClass + '[data-swiper-slide-index="' + e3 + '"]').length)
              return true;
          } else if (s2[e3])
            return true;
          return false;
        }
        function h2(e3) {
          return r2 ? n(e3).attr("data-swiper-slide-index") : n(e3).index();
        }
        if ("auto" === l2 && (l2 = 0), e2.lazy.initialImageLoaded || (e2.lazy.initialImageLoaded = true), e2.params.watchSlidesVisibility)
          t2.children("." + i2.slideVisibleClass).each(function(t3, i3) {
            var s3 = r2 ? n(i3).attr("data-swiper-slide-index") : n(i3).index();
            e2.lazy.loadInSlide(s3);
          });
        else if (l2 > 1)
          for (var p2 = a2; p2 < a2 + l2; p2 += 1)
            d2(p2) && e2.lazy.loadInSlide(p2);
        else
          e2.lazy.loadInSlide(a2);
        if (o2.loadPrevNext)
          if (l2 > 1 || o2.loadPrevNextAmount && o2.loadPrevNextAmount > 1) {
            for (var c2 = o2.loadPrevNextAmount, u2 = l2, v2 = Math.min(a2 + u2 + Math.max(c2, u2), s2.length), f2 = Math.max(a2 - Math.max(u2, c2), 0), m2 = a2 + l2; m2 < v2; m2 += 1)
              d2(m2) && e2.lazy.loadInSlide(m2);
            for (var g2 = f2; g2 < a2; g2 += 1)
              d2(g2) && e2.lazy.loadInSlide(g2);
          } else {
            var b2 = t2.children("." + i2.slideNextClass);
            b2.length > 0 && e2.lazy.loadInSlide(h2(b2));
            var w2 = t2.children("." + i2.slidePrevClass);
            w2.length > 0 && e2.lazy.loadInSlide(h2(w2));
          }
      } }, ce = { LinearSpline: function(e2, t2) {
        var i2, s2, a2, r2, n2, o2 = function(e3, t3) {
          for (s2 = -1, i2 = e3.length; i2 - s2 > 1; )
            e3[a2 = i2 + s2 >> 1] <= t3 ? s2 = a2 : i2 = a2;
          return i2;
        };
        return this.x = e2, this.y = t2, this.lastIndex = e2.length - 1, this.interpolate = function(e3) {
          return e3 ? (n2 = o2(this.x, e3), r2 = n2 - 1, (e3 - this.x[r2]) * (this.y[n2] - this.y[r2]) / (this.x[n2] - this.x[r2]) + this.y[r2]) : 0;
        }, this;
      }, getInterpolateFunction: function(e2) {
        this.controller.spline || (this.controller.spline = this.params.loop ? new ce.LinearSpline(this.slidesGrid, e2.slidesGrid) : new ce.LinearSpline(this.snapGrid, e2.snapGrid));
      }, setTranslate: function(e2, t2) {
        var i2, s2, a2 = this, r2 = a2.controller.control;
        function n2(e3) {
          var t3 = a2.rtlTranslate ? -a2.translate : a2.translate;
          "slide" === a2.params.controller.by && (a2.controller.getInterpolateFunction(e3), s2 = -a2.controller.spline.interpolate(-t3)), s2 && "container" !== a2.params.controller.by || (i2 = (e3.maxTranslate() - e3.minTranslate()) / (a2.maxTranslate() - a2.minTranslate()), s2 = (t3 - a2.minTranslate()) * i2 + e3.minTranslate()), a2.params.controller.inverse && (s2 = e3.maxTranslate() - s2), e3.updateProgress(s2), e3.setTranslate(s2, a2), e3.updateActiveIndex(), e3.updateSlidesClasses();
        }
        if (Array.isArray(r2))
          for (var o2 = 0; o2 < r2.length; o2 += 1)
            r2[o2] !== t2 && r2[o2] instanceof j && n2(r2[o2]);
        else
          r2 instanceof j && t2 !== r2 && n2(r2);
      }, setTransition: function(e2, t2) {
        var i2, s2 = this, a2 = s2.controller.control;
        function r2(t3) {
          t3.setTransition(e2, s2), 0 !== e2 && (t3.transitionStart(), t3.params.autoHeight && d.nextTick(function() {
            t3.updateAutoHeight();
          }), t3.$wrapperEl.transitionEnd(function() {
            a2 && (t3.params.loop && "slide" === s2.params.controller.by && t3.loopFix(), t3.transitionEnd());
          }));
        }
        if (Array.isArray(a2))
          for (i2 = 0; i2 < a2.length; i2 += 1)
            a2[i2] !== t2 && a2[i2] instanceof j && r2(a2[i2]);
        else
          a2 instanceof j && t2 !== a2 && r2(a2);
      } }, ue = { makeElFocusable: function(e2) {
        return e2.attr("tabIndex", "0"), e2;
      }, makeElNotFocusable: function(e2) {
        return e2.attr("tabIndex", "-1"), e2;
      }, addElRole: function(e2, t2) {
        return e2.attr("role", t2), e2;
      }, addElLabel: function(e2, t2) {
        return e2.attr("aria-label", t2), e2;
      }, disableEl: function(e2) {
        return e2.attr("aria-disabled", true), e2;
      }, enableEl: function(e2) {
        return e2.attr("aria-disabled", false), e2;
      }, onEnterKey: function(e2) {
        var t2 = this.params.a11y;
        if (13 === e2.keyCode) {
          var i2 = n(e2.target);
          this.navigation && this.navigation.$nextEl && i2.is(this.navigation.$nextEl) && (this.isEnd && !this.params.loop || this.slideNext(), this.isEnd ? this.a11y.notify(t2.lastSlideMessage) : this.a11y.notify(t2.nextSlideMessage)), this.navigation && this.navigation.$prevEl && i2.is(this.navigation.$prevEl) && (this.isBeginning && !this.params.loop || this.slidePrev(), this.isBeginning ? this.a11y.notify(t2.firstSlideMessage) : this.a11y.notify(t2.prevSlideMessage)), this.pagination && i2.is("." + this.params.pagination.bulletClass) && i2[0].click();
        }
      }, notify: function(e2) {
        var t2 = this.a11y.liveRegion;
        0 !== t2.length && (t2.html(""), t2.html(e2));
      }, updateNavigation: function() {
        if (!this.params.loop && this.navigation) {
          var e2 = this.navigation, t2 = e2.$nextEl, i2 = e2.$prevEl;
          i2 && i2.length > 0 && (this.isBeginning ? (this.a11y.disableEl(i2), this.a11y.makeElNotFocusable(i2)) : (this.a11y.enableEl(i2), this.a11y.makeElFocusable(i2))), t2 && t2.length > 0 && (this.isEnd ? (this.a11y.disableEl(t2), this.a11y.makeElNotFocusable(t2)) : (this.a11y.enableEl(t2), this.a11y.makeElFocusable(t2)));
        }
      }, updatePagination: function() {
        var e2 = this, t2 = e2.params.a11y;
        e2.pagination && e2.params.pagination.clickable && e2.pagination.bullets && e2.pagination.bullets.length && e2.pagination.bullets.each(function(i2, s2) {
          var a2 = n(s2);
          e2.a11y.makeElFocusable(a2), e2.a11y.addElRole(a2, "button"), e2.a11y.addElLabel(a2, t2.paginationBulletMessage.replace(/\{\{index\}\}/, a2.index() + 1));
        });
      }, init: function() {
        this.$el.append(this.a11y.liveRegion);
        var e2, t2, i2 = this.params.a11y;
        this.navigation && this.navigation.$nextEl && (e2 = this.navigation.$nextEl), this.navigation && this.navigation.$prevEl && (t2 = this.navigation.$prevEl), e2 && (this.a11y.makeElFocusable(e2), this.a11y.addElRole(e2, "button"), this.a11y.addElLabel(e2, i2.nextSlideMessage), e2.on("keydown", this.a11y.onEnterKey)), t2 && (this.a11y.makeElFocusable(t2), this.a11y.addElRole(t2, "button"), this.a11y.addElLabel(t2, i2.prevSlideMessage), t2.on("keydown", this.a11y.onEnterKey)), this.pagination && this.params.pagination.clickable && this.pagination.bullets && this.pagination.bullets.length && this.pagination.$el.on("keydown", "." + this.params.pagination.bulletClass, this.a11y.onEnterKey);
      }, destroy: function() {
        var e2, t2;
        this.a11y.liveRegion && this.a11y.liveRegion.length > 0 && this.a11y.liveRegion.remove(), this.navigation && this.navigation.$nextEl && (e2 = this.navigation.$nextEl), this.navigation && this.navigation.$prevEl && (t2 = this.navigation.$prevEl), e2 && e2.off("keydown", this.a11y.onEnterKey), t2 && t2.off("keydown", this.a11y.onEnterKey), this.pagination && this.params.pagination.clickable && this.pagination.bullets && this.pagination.bullets.length && this.pagination.$el.off("keydown", "." + this.params.pagination.bulletClass, this.a11y.onEnterKey);
      } }, ve = { init: function() {
        if (this.params.history) {
          if (!a.history || !a.history.pushState)
            return this.params.history.enabled = false, void (this.params.hashNavigation.enabled = true);
          var e2 = this.history;
          e2.initialized = true, e2.paths = ve.getPathValues(), (e2.paths.key || e2.paths.value) && (e2.scrollToSlide(0, e2.paths.value, this.params.runCallbacksOnInit), this.params.history.replaceState || a.addEventListener("popstate", this.history.setHistoryPopState));
        }
      }, destroy: function() {
        this.params.history.replaceState || a.removeEventListener("popstate", this.history.setHistoryPopState);
      }, setHistoryPopState: function() {
        this.history.paths = ve.getPathValues(), this.history.scrollToSlide(this.params.speed, this.history.paths.value, false);
      }, getPathValues: function() {
        var e2 = a.location.pathname.slice(1).split("/").filter(function(e3) {
          return "" !== e3;
        }), t2 = e2.length;
        return { key: e2[t2 - 2], value: e2[t2 - 1] };
      }, setHistory: function(e2, t2) {
        if (this.history.initialized && this.params.history.enabled) {
          var i2 = this.slides.eq(t2), s2 = ve.slugify(i2.attr("data-history"));
          a.location.pathname.includes(e2) || (s2 = e2 + "/" + s2);
          var r2 = a.history.state;
          r2 && r2.value === s2 || (this.params.history.replaceState ? a.history.replaceState({ value: s2 }, null, s2) : a.history.pushState({ value: s2 }, null, s2));
        }
      }, slugify: function(e2) {
        return e2.toString().replace(/\s+/g, "-").replace(/[^\w-]+/g, "").replace(/--+/g, "-").replace(/^-+/, "").replace(/-+$/, "");
      }, scrollToSlide: function(e2, t2, i2) {
        if (t2)
          for (var s2 = 0, a2 = this.slides.length; s2 < a2; s2 += 1) {
            var r2 = this.slides.eq(s2);
            if (ve.slugify(r2.attr("data-history")) === t2 && !r2.hasClass(this.params.slideDuplicateClass)) {
              var n2 = r2.index();
              this.slideTo(n2, e2, i2);
            }
          }
        else
          this.slideTo(0, e2, i2);
      } }, fe = { onHashCange: function() {
        this.emit("hashChange");
        var e2 = i.location.hash.replace("#", "");
        if (e2 !== this.slides.eq(this.activeIndex).attr("data-hash")) {
          var t2 = this.$wrapperEl.children("." + this.params.slideClass + '[data-hash="' + e2 + '"]').index();
          if (void 0 === t2)
            return;
          this.slideTo(t2);
        }
      }, setHash: function() {
        if (this.hashNavigation.initialized && this.params.hashNavigation.enabled)
          if (this.params.hashNavigation.replaceState && a.history && a.history.replaceState)
            a.history.replaceState(null, null, "#" + this.slides.eq(this.activeIndex).attr("data-hash") || ""), this.emit("hashSet");
          else {
            var e2 = this.slides.eq(this.activeIndex), t2 = e2.attr("data-hash") || e2.attr("data-history");
            i.location.hash = t2 || "", this.emit("hashSet");
          }
      }, init: function() {
        if (!(!this.params.hashNavigation.enabled || this.params.history && this.params.history.enabled)) {
          this.hashNavigation.initialized = true;
          var e2 = i.location.hash.replace("#", "");
          if (e2)
            for (var t2 = 0, s2 = this.slides.length; t2 < s2; t2 += 1) {
              var r2 = this.slides.eq(t2);
              if ((r2.attr("data-hash") || r2.attr("data-history")) === e2 && !r2.hasClass(this.params.slideDuplicateClass)) {
                var o2 = r2.index();
                this.slideTo(o2, 0, this.params.runCallbacksOnInit, true);
              }
            }
          this.params.hashNavigation.watchState && n(a).on("hashchange", this.hashNavigation.onHashCange);
        }
      }, destroy: function() {
        this.params.hashNavigation.watchState && n(a).off("hashchange", this.hashNavigation.onHashCange);
      } }, me = { run: function() {
        var e2 = this, t2 = e2.slides.eq(e2.activeIndex), i2 = e2.params.autoplay.delay;
        t2.attr("data-swiper-autoplay") && (i2 = t2.attr("data-swiper-autoplay") || e2.params.autoplay.delay), clearTimeout(e2.autoplay.timeout), e2.autoplay.timeout = d.nextTick(function() {
          e2.params.autoplay.reverseDirection ? e2.params.loop ? (e2.loopFix(), e2.slidePrev(e2.params.speed, true, true), e2.emit("autoplay")) : e2.isBeginning ? e2.params.autoplay.stopOnLastSlide ? e2.autoplay.stop() : (e2.slideTo(e2.slides.length - 1, e2.params.speed, true, true), e2.emit("autoplay")) : (e2.slidePrev(e2.params.speed, true, true), e2.emit("autoplay")) : e2.params.loop ? (e2.loopFix(), e2.slideNext(e2.params.speed, true, true), e2.emit("autoplay")) : e2.isEnd ? e2.params.autoplay.stopOnLastSlide ? e2.autoplay.stop() : (e2.slideTo(0, e2.params.speed, true, true), e2.emit("autoplay")) : (e2.slideNext(e2.params.speed, true, true), e2.emit("autoplay")), e2.params.cssMode && e2.autoplay.running && e2.autoplay.run();
        }, i2);
      }, start: function() {
        return void 0 === this.autoplay.timeout && (!this.autoplay.running && (this.autoplay.running = true, this.emit("autoplayStart"), this.autoplay.run(), true));
      }, stop: function() {
        return !!this.autoplay.running && (void 0 !== this.autoplay.timeout && (this.autoplay.timeout && (clearTimeout(this.autoplay.timeout), this.autoplay.timeout = void 0), this.autoplay.running = false, this.emit("autoplayStop"), true));
      }, pause: function(e2) {
        this.autoplay.running && (this.autoplay.paused || (this.autoplay.timeout && clearTimeout(this.autoplay.timeout), this.autoplay.paused = true, 0 !== e2 && this.params.autoplay.waitForTransition ? (this.$wrapperEl[0].addEventListener("transitionend", this.autoplay.onTransitionEnd), this.$wrapperEl[0].addEventListener("webkitTransitionEnd", this.autoplay.onTransitionEnd)) : (this.autoplay.paused = false, this.autoplay.run())));
      } }, ge = { setTranslate: function() {
        for (var e2 = this.slides, t2 = 0; t2 < e2.length; t2 += 1) {
          var i2 = this.slides.eq(t2), s2 = -i2[0].swiperSlideOffset;
          this.params.virtualTranslate || (s2 -= this.translate);
          var a2 = 0;
          this.isHorizontal() || (a2 = s2, s2 = 0);
          var r2 = this.params.fadeEffect.crossFade ? Math.max(1 - Math.abs(i2[0].progress), 0) : 1 + Math.min(Math.max(i2[0].progress, -1), 0);
          i2.css({ opacity: r2 }).transform("translate3d(" + s2 + "px, " + a2 + "px, 0px)");
        }
      }, setTransition: function(e2) {
        var t2 = this, i2 = t2.slides, s2 = t2.$wrapperEl;
        if (i2.transition(e2), t2.params.virtualTranslate && 0 !== e2) {
          var a2 = false;
          i2.transitionEnd(function() {
            if (!a2 && t2 && !t2.destroyed) {
              a2 = true, t2.animating = false;
              for (var e3 = ["webkitTransitionEnd", "transitionend"], i3 = 0; i3 < e3.length; i3 += 1)
                s2.trigger(e3[i3]);
            }
          });
        }
      } }, be = { setTranslate: function() {
        var e2, t2 = this.$el, i2 = this.$wrapperEl, s2 = this.slides, a2 = this.width, r2 = this.height, o2 = this.rtlTranslate, l2 = this.size, d2 = this.params.cubeEffect, h2 = this.isHorizontal(), p2 = this.virtual && this.params.virtual.enabled, c2 = 0;
        d2.shadow && (h2 ? (0 === (e2 = i2.find(".swiper-cube-shadow")).length && (e2 = n('<div class="swiper-cube-shadow"></div>'), i2.append(e2)), e2.css({ height: a2 + "px" })) : 0 === (e2 = t2.find(".swiper-cube-shadow")).length && (e2 = n('<div class="swiper-cube-shadow"></div>'), t2.append(e2)));
        for (var u2 = 0; u2 < s2.length; u2 += 1) {
          var v2 = s2.eq(u2), f2 = u2;
          p2 && (f2 = parseInt(v2.attr("data-swiper-slide-index"), 10));
          var m2 = 90 * f2, g2 = Math.floor(m2 / 360);
          o2 && (m2 = -m2, g2 = Math.floor(-m2 / 360));
          var b2 = Math.max(Math.min(v2[0].progress, 1), -1), w2 = 0, y2 = 0, x2 = 0;
          f2 % 4 == 0 ? (w2 = 4 * -g2 * l2, x2 = 0) : (f2 - 1) % 4 == 0 ? (w2 = 0, x2 = 4 * -g2 * l2) : (f2 - 2) % 4 == 0 ? (w2 = l2 + 4 * g2 * l2, x2 = l2) : (f2 - 3) % 4 == 0 && (w2 = -l2, x2 = 3 * l2 + 4 * l2 * g2), o2 && (w2 = -w2), h2 || (y2 = w2, w2 = 0);
          var E2 = "rotateX(" + (h2 ? 0 : -m2) + "deg) rotateY(" + (h2 ? m2 : 0) + "deg) translate3d(" + w2 + "px, " + y2 + "px, " + x2 + "px)";
          if (b2 <= 1 && b2 > -1 && (c2 = 90 * f2 + 90 * b2, o2 && (c2 = 90 * -f2 - 90 * b2)), v2.transform(E2), d2.slideShadows) {
            var T2 = h2 ? v2.find(".swiper-slide-shadow-left") : v2.find(".swiper-slide-shadow-top"), S2 = h2 ? v2.find(".swiper-slide-shadow-right") : v2.find(".swiper-slide-shadow-bottom");
            0 === T2.length && (T2 = n('<div class="swiper-slide-shadow-' + (h2 ? "left" : "top") + '"></div>'), v2.append(T2)), 0 === S2.length && (S2 = n('<div class="swiper-slide-shadow-' + (h2 ? "right" : "bottom") + '"></div>'), v2.append(S2)), T2.length && (T2[0].style.opacity = Math.max(-b2, 0)), S2.length && (S2[0].style.opacity = Math.max(b2, 0));
          }
        }
        if (i2.css({ "-webkit-transform-origin": "50% 50% -" + l2 / 2 + "px", "-moz-transform-origin": "50% 50% -" + l2 / 2 + "px", "-ms-transform-origin": "50% 50% -" + l2 / 2 + "px", "transform-origin": "50% 50% -" + l2 / 2 + "px" }), d2.shadow)
          if (h2)
            e2.transform("translate3d(0px, " + (a2 / 2 + d2.shadowOffset) + "px, " + -a2 / 2 + "px) rotateX(90deg) rotateZ(0deg) scale(" + d2.shadowScale + ")");
          else {
            var C2 = Math.abs(c2) - 90 * Math.floor(Math.abs(c2) / 90), M2 = 1.5 - (Math.sin(2 * C2 * Math.PI / 360) / 2 + Math.cos(2 * C2 * Math.PI / 360) / 2), P2 = d2.shadowScale, z2 = d2.shadowScale / M2, k2 = d2.shadowOffset;
            e2.transform("scale3d(" + P2 + ", 1, " + z2 + ") translate3d(0px, " + (r2 / 2 + k2) + "px, " + -r2 / 2 / z2 + "px) rotateX(-90deg)");
          }
        var $2 = _.isSafari || _.isWebView ? -l2 / 2 : 0;
        i2.transform("translate3d(0px,0," + $2 + "px) rotateX(" + (this.isHorizontal() ? 0 : c2) + "deg) rotateY(" + (this.isHorizontal() ? -c2 : 0) + "deg)");
      }, setTransition: function(e2) {
        var t2 = this.$el;
        this.slides.transition(e2).find(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").transition(e2), this.params.cubeEffect.shadow && !this.isHorizontal() && t2.find(".swiper-cube-shadow").transition(e2);
      } }, we = { setTranslate: function() {
        for (var e2 = this.slides, t2 = this.rtlTranslate, i2 = 0; i2 < e2.length; i2 += 1) {
          var s2 = e2.eq(i2), a2 = s2[0].progress;
          this.params.flipEffect.limitRotation && (a2 = Math.max(Math.min(s2[0].progress, 1), -1));
          var r2 = -180 * a2, o2 = 0, l2 = -s2[0].swiperSlideOffset, d2 = 0;
          if (this.isHorizontal() ? t2 && (r2 = -r2) : (d2 = l2, l2 = 0, o2 = -r2, r2 = 0), s2[0].style.zIndex = -Math.abs(Math.round(a2)) + e2.length, this.params.flipEffect.slideShadows) {
            var h2 = this.isHorizontal() ? s2.find(".swiper-slide-shadow-left") : s2.find(".swiper-slide-shadow-top"), p2 = this.isHorizontal() ? s2.find(".swiper-slide-shadow-right") : s2.find(".swiper-slide-shadow-bottom");
            0 === h2.length && (h2 = n('<div class="swiper-slide-shadow-' + (this.isHorizontal() ? "left" : "top") + '"></div>'), s2.append(h2)), 0 === p2.length && (p2 = n('<div class="swiper-slide-shadow-' + (this.isHorizontal() ? "right" : "bottom") + '"></div>'), s2.append(p2)), h2.length && (h2[0].style.opacity = Math.max(-a2, 0)), p2.length && (p2[0].style.opacity = Math.max(a2, 0));
          }
          s2.transform("translate3d(" + l2 + "px, " + d2 + "px, 0px) rotateX(" + o2 + "deg) rotateY(" + r2 + "deg)");
        }
      }, setTransition: function(e2) {
        var t2 = this, i2 = t2.slides, s2 = t2.activeIndex, a2 = t2.$wrapperEl;
        if (i2.transition(e2).find(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").transition(e2), t2.params.virtualTranslate && 0 !== e2) {
          var r2 = false;
          i2.eq(s2).transitionEnd(function() {
            if (!r2 && t2 && !t2.destroyed) {
              r2 = true, t2.animating = false;
              for (var e3 = ["webkitTransitionEnd", "transitionend"], i3 = 0; i3 < e3.length; i3 += 1)
                a2.trigger(e3[i3]);
            }
          });
        }
      } }, ye = { setTranslate: function() {
        for (var e2 = this.width, t2 = this.height, i2 = this.slides, s2 = this.$wrapperEl, a2 = this.slidesSizesGrid, r2 = this.params.coverflowEffect, o2 = this.isHorizontal(), l2 = this.translate, d2 = o2 ? e2 / 2 - l2 : t2 / 2 - l2, p2 = o2 ? r2.rotate : -r2.rotate, c2 = r2.depth, u2 = 0, v2 = i2.length; u2 < v2; u2 += 1) {
          var f2 = i2.eq(u2), m2 = a2[u2], g2 = (d2 - f2[0].swiperSlideOffset - m2 / 2) / m2 * r2.modifier, b2 = o2 ? p2 * g2 : 0, w2 = o2 ? 0 : p2 * g2, y2 = -c2 * Math.abs(g2), x2 = r2.stretch;
          "string" == typeof x2 && -1 !== x2.indexOf("%") && (x2 = parseFloat(r2.stretch) / 100 * m2);
          var E2 = o2 ? 0 : x2 * g2, T2 = o2 ? x2 * g2 : 0, S2 = 1 - (1 - r2.scale) * Math.abs(g2);
          Math.abs(T2) < 1e-3 && (T2 = 0), Math.abs(E2) < 1e-3 && (E2 = 0), Math.abs(y2) < 1e-3 && (y2 = 0), Math.abs(b2) < 1e-3 && (b2 = 0), Math.abs(w2) < 1e-3 && (w2 = 0), Math.abs(S2) < 1e-3 && (S2 = 0);
          var C2 = "translate3d(" + T2 + "px," + E2 + "px," + y2 + "px)  rotateX(" + w2 + "deg) rotateY(" + b2 + "deg) scale(" + S2 + ")";
          if (f2.transform(C2), f2[0].style.zIndex = 1 - Math.abs(Math.round(g2)), r2.slideShadows) {
            var M2 = o2 ? f2.find(".swiper-slide-shadow-left") : f2.find(".swiper-slide-shadow-top"), P2 = o2 ? f2.find(".swiper-slide-shadow-right") : f2.find(".swiper-slide-shadow-bottom");
            0 === M2.length && (M2 = n('<div class="swiper-slide-shadow-' + (o2 ? "left" : "top") + '"></div>'), f2.append(M2)), 0 === P2.length && (P2 = n('<div class="swiper-slide-shadow-' + (o2 ? "right" : "bottom") + '"></div>'), f2.append(P2)), M2.length && (M2[0].style.opacity = g2 > 0 ? g2 : 0), P2.length && (P2[0].style.opacity = -g2 > 0 ? -g2 : 0);
          }
        }
        (h.pointerEvents || h.prefixedPointerEvents) && (s2[0].style.perspectiveOrigin = d2 + "px 50%");
      }, setTransition: function(e2) {
        this.slides.transition(e2).find(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").transition(e2);
      } }, xe = { init: function() {
        var e2 = this.params.thumbs, t2 = this.constructor;
        e2.swiper instanceof t2 ? (this.thumbs.swiper = e2.swiper, d.extend(this.thumbs.swiper.originalParams, { watchSlidesProgress: true, slideToClickedSlide: false }), d.extend(this.thumbs.swiper.params, { watchSlidesProgress: true, slideToClickedSlide: false })) : d.isObject(e2.swiper) && (this.thumbs.swiper = new t2(d.extend({}, e2.swiper, { watchSlidesVisibility: true, watchSlidesProgress: true, slideToClickedSlide: false })), this.thumbs.swiperCreated = true), this.thumbs.swiper.$el.addClass(this.params.thumbs.thumbsContainerClass), this.thumbs.swiper.on("tap", this.thumbs.onThumbClick);
      }, onThumbClick: function() {
        var e2 = this.thumbs.swiper;
        if (e2) {
          var t2 = e2.clickedIndex, i2 = e2.clickedSlide;
          if (!(i2 && n(i2).hasClass(this.params.thumbs.slideThumbActiveClass) || null == t2)) {
            var s2;
            if (s2 = e2.params.loop ? parseInt(n(e2.clickedSlide).attr("data-swiper-slide-index"), 10) : t2, this.params.loop) {
              var a2 = this.activeIndex;
              this.slides.eq(a2).hasClass(this.params.slideDuplicateClass) && (this.loopFix(), this._clientLeft = this.$wrapperEl[0].clientLeft, a2 = this.activeIndex);
              var r2 = this.slides.eq(a2).prevAll('[data-swiper-slide-index="' + s2 + '"]').eq(0).index(), o2 = this.slides.eq(a2).nextAll('[data-swiper-slide-index="' + s2 + '"]').eq(0).index();
              s2 = void 0 === r2 ? o2 : void 0 === o2 ? r2 : o2 - a2 < a2 - r2 ? o2 : r2;
            }
            this.slideTo(s2);
          }
        }
      }, update: function(e2) {
        var t2 = this.thumbs.swiper;
        if (t2) {
          var i2 = "auto" === t2.params.slidesPerView ? t2.slidesPerViewDynamic() : t2.params.slidesPerView, s2 = this.params.thumbs.autoScrollOffset, a2 = s2 && !t2.params.loop;
          if (this.realIndex !== t2.realIndex || a2) {
            var r2, n2, o2 = t2.activeIndex;
            if (t2.params.loop) {
              t2.slides.eq(o2).hasClass(t2.params.slideDuplicateClass) && (t2.loopFix(), t2._clientLeft = t2.$wrapperEl[0].clientLeft, o2 = t2.activeIndex);
              var l2 = t2.slides.eq(o2).prevAll('[data-swiper-slide-index="' + this.realIndex + '"]').eq(0).index(), d2 = t2.slides.eq(o2).nextAll('[data-swiper-slide-index="' + this.realIndex + '"]').eq(0).index();
              r2 = void 0 === l2 ? d2 : void 0 === d2 ? l2 : d2 - o2 == o2 - l2 ? o2 : d2 - o2 < o2 - l2 ? d2 : l2, n2 = this.activeIndex > this.previousIndex ? "next" : "prev";
            } else
              n2 = (r2 = this.realIndex) > this.previousIndex ? "next" : "prev";
            a2 && (r2 += "next" === n2 ? s2 : -1 * s2), t2.visibleSlidesIndexes && t2.visibleSlidesIndexes.indexOf(r2) < 0 && (t2.params.centeredSlides ? r2 = r2 > o2 ? r2 - Math.floor(i2 / 2) + 1 : r2 + Math.floor(i2 / 2) - 1 : r2 > o2 && (r2 = r2 - i2 + 1), t2.slideTo(r2, e2 ? 0 : void 0));
          }
          var h2 = 1, p2 = this.params.thumbs.slideThumbActiveClass;
          if (this.params.slidesPerView > 1 && !this.params.centeredSlides && (h2 = this.params.slidesPerView), this.params.thumbs.multipleActiveThumbs || (h2 = 1), h2 = Math.floor(h2), t2.slides.removeClass(p2), t2.params.loop || t2.params.virtual && t2.params.virtual.enabled)
            for (var c2 = 0; c2 < h2; c2 += 1)
              t2.$wrapperEl.children('[data-swiper-slide-index="' + (this.realIndex + c2) + '"]').addClass(p2);
          else
            for (var u2 = 0; u2 < h2; u2 += 1)
              t2.slides.eq(this.realIndex + u2).addClass(p2);
        }
      } }, Ee = [K, U, Z, Q, ee, ie, ae, { name: "mousewheel", params: { mousewheel: { enabled: false, releaseOnEdges: false, invert: false, forceToAxis: false, sensitivity: 1, eventsTarged: "container" } }, create: function() {
        d.extend(this, { mousewheel: { enabled: false, enable: re.enable.bind(this), disable: re.disable.bind(this), handle: re.handle.bind(this), handleMouseEnter: re.handleMouseEnter.bind(this), handleMouseLeave: re.handleMouseLeave.bind(this), animateSlider: re.animateSlider.bind(this), releaseScroll: re.releaseScroll.bind(this), lastScrollTime: d.now(), lastEventBeforeSnap: void 0, recentWheelEvents: [] } });
      }, on: { init: function() {
        !this.params.mousewheel.enabled && this.params.cssMode && this.mousewheel.disable(), this.params.mousewheel.enabled && this.mousewheel.enable();
      }, destroy: function() {
        this.params.cssMode && this.mousewheel.enable(), this.mousewheel.enabled && this.mousewheel.disable();
      } } }, { name: "navigation", params: { navigation: { nextEl: null, prevEl: null, hideOnClick: false, disabledClass: "swiper-button-disabled", hiddenClass: "swiper-button-hidden", lockClass: "swiper-button-lock" } }, create: function() {
        d.extend(this, { navigation: { init: ne.init.bind(this), update: ne.update.bind(this), destroy: ne.destroy.bind(this), onNextClick: ne.onNextClick.bind(this), onPrevClick: ne.onPrevClick.bind(this) } });
      }, on: { init: function() {
        this.navigation.init(), this.navigation.update();
      }, toEdge: function() {
        this.navigation.update();
      }, fromEdge: function() {
        this.navigation.update();
      }, destroy: function() {
        this.navigation.destroy();
      }, click: function(e2) {
        var t2, i2 = this.navigation, s2 = i2.$nextEl, a2 = i2.$prevEl;
        !this.params.navigation.hideOnClick || n(e2.target).is(a2) || n(e2.target).is(s2) || (s2 ? t2 = s2.hasClass(this.params.navigation.hiddenClass) : a2 && (t2 = a2.hasClass(this.params.navigation.hiddenClass)), true === t2 ? this.emit("navigationShow", this) : this.emit("navigationHide", this), s2 && s2.toggleClass(this.params.navigation.hiddenClass), a2 && a2.toggleClass(this.params.navigation.hiddenClass));
      } } }, { name: "pagination", params: { pagination: { el: null, bulletElement: "span", clickable: false, hideOnClick: false, renderBullet: null, renderProgressbar: null, renderFraction: null, renderCustom: null, progressbarOpposite: false, type: "bullets", dynamicBullets: false, dynamicMainBullets: 1, formatFractionCurrent: function(e2) {
        return e2;
      }, formatFractionTotal: function(e2) {
        return e2;
      }, bulletClass: "swiper-pagination-bullet", bulletActiveClass: "swiper-pagination-bullet-active", modifierClass: "swiper-pagination-", currentClass: "swiper-pagination-current", totalClass: "swiper-pagination-total", hiddenClass: "swiper-pagination-hidden", progressbarFillClass: "swiper-pagination-progressbar-fill", progressbarOppositeClass: "swiper-pagination-progressbar-opposite", clickableClass: "swiper-pagination-clickable", lockClass: "swiper-pagination-lock" } }, create: function() {
        d.extend(this, { pagination: { init: oe.init.bind(this), render: oe.render.bind(this), update: oe.update.bind(this), destroy: oe.destroy.bind(this), dynamicBulletIndex: 0 } });
      }, on: { init: function() {
        this.pagination.init(), this.pagination.render(), this.pagination.update();
      }, activeIndexChange: function() {
        (this.params.loop || void 0 === this.snapIndex) && this.pagination.update();
      }, snapIndexChange: function() {
        this.params.loop || this.pagination.update();
      }, slidesLengthChange: function() {
        this.params.loop && (this.pagination.render(), this.pagination.update());
      }, snapGridLengthChange: function() {
        this.params.loop || (this.pagination.render(), this.pagination.update());
      }, destroy: function() {
        this.pagination.destroy();
      }, click: function(e2) {
        this.params.pagination.el && this.params.pagination.hideOnClick && this.pagination.$el.length > 0 && !n(e2.target).hasClass(this.params.pagination.bulletClass) && (true === this.pagination.$el.hasClass(this.params.pagination.hiddenClass) ? this.emit("paginationShow", this) : this.emit("paginationHide", this), this.pagination.$el.toggleClass(this.params.pagination.hiddenClass));
      } } }, { name: "scrollbar", params: { scrollbar: { el: null, dragSize: "auto", hide: false, draggable: false, snapOnRelease: true, lockClass: "swiper-scrollbar-lock", dragClass: "swiper-scrollbar-drag" } }, create: function() {
        d.extend(this, { scrollbar: { init: le.init.bind(this), destroy: le.destroy.bind(this), updateSize: le.updateSize.bind(this), setTranslate: le.setTranslate.bind(this), setTransition: le.setTransition.bind(this), enableDraggable: le.enableDraggable.bind(this), disableDraggable: le.disableDraggable.bind(this), setDragPosition: le.setDragPosition.bind(this), getPointerPosition: le.getPointerPosition.bind(this), onDragStart: le.onDragStart.bind(this), onDragMove: le.onDragMove.bind(this), onDragEnd: le.onDragEnd.bind(this), isTouched: false, timeout: null, dragTimeout: null } });
      }, on: { init: function() {
        this.scrollbar.init(), this.scrollbar.updateSize(), this.scrollbar.setTranslate();
      }, update: function() {
        this.scrollbar.updateSize();
      }, resize: function() {
        this.scrollbar.updateSize();
      }, observerUpdate: function() {
        this.scrollbar.updateSize();
      }, setTranslate: function() {
        this.scrollbar.setTranslate();
      }, setTransition: function(e2) {
        this.scrollbar.setTransition(e2);
      }, destroy: function() {
        this.scrollbar.destroy();
      } } }, { name: "parallax", params: { parallax: { enabled: false } }, create: function() {
        d.extend(this, { parallax: { setTransform: de.setTransform.bind(this), setTranslate: de.setTranslate.bind(this), setTransition: de.setTransition.bind(this) } });
      }, on: { beforeInit: function() {
        this.params.parallax.enabled && (this.params.watchSlidesProgress = true, this.originalParams.watchSlidesProgress = true);
      }, init: function() {
        this.params.parallax.enabled && this.parallax.setTranslate();
      }, setTranslate: function() {
        this.params.parallax.enabled && this.parallax.setTranslate();
      }, setTransition: function(e2) {
        this.params.parallax.enabled && this.parallax.setTransition(e2);
      } } }, { name: "zoom", params: { zoom: { enabled: false, maxRatio: 3, minRatio: 1, toggle: true, containerClass: "swiper-zoom-container", zoomedSlideClass: "swiper-slide-zoomed" } }, create: function() {
        var e2 = this, t2 = { enabled: false, scale: 1, currentScale: 1, isScaling: false, gesture: { $slideEl: void 0, slideWidth: void 0, slideHeight: void 0, $imageEl: void 0, $imageWrapEl: void 0, maxRatio: 3 }, image: { isTouched: void 0, isMoved: void 0, currentX: void 0, currentY: void 0, minX: void 0, minY: void 0, maxX: void 0, maxY: void 0, width: void 0, height: void 0, startX: void 0, startY: void 0, touchesStart: {}, touchesCurrent: {} }, velocity: { x: void 0, y: void 0, prevPositionX: void 0, prevPositionY: void 0, prevTime: void 0 } };
        "onGestureStart onGestureChange onGestureEnd onTouchStart onTouchMove onTouchEnd onTransitionEnd toggle enable disable in out".split(" ").forEach(function(i3) {
          t2[i3] = he[i3].bind(e2);
        }), d.extend(e2, { zoom: t2 });
        var i2 = 1;
        Object.defineProperty(e2.zoom, "scale", { get: function() {
          return i2;
        }, set: function(t3) {
          if (i2 !== t3) {
            var s2 = e2.zoom.gesture.$imageEl ? e2.zoom.gesture.$imageEl[0] : void 0, a2 = e2.zoom.gesture.$slideEl ? e2.zoom.gesture.$slideEl[0] : void 0;
            e2.emit("zoomChange", t3, s2, a2);
          }
          i2 = t3;
        } });
      }, on: { init: function() {
        this.params.zoom.enabled && this.zoom.enable();
      }, destroy: function() {
        this.zoom.disable();
      }, touchStart: function(e2) {
        this.zoom.enabled && this.zoom.onTouchStart(e2);
      }, touchEnd: function(e2) {
        this.zoom.enabled && this.zoom.onTouchEnd(e2);
      }, doubleTap: function(e2) {
        this.params.zoom.enabled && this.zoom.enabled && this.params.zoom.toggle && this.zoom.toggle(e2);
      }, transitionEnd: function() {
        this.zoom.enabled && this.params.zoom.enabled && this.zoom.onTransitionEnd();
      }, slideChange: function() {
        this.zoom.enabled && this.params.zoom.enabled && this.params.cssMode && this.zoom.onTransitionEnd();
      } } }, { name: "lazy", params: { lazy: { enabled: false, loadPrevNext: false, loadPrevNextAmount: 1, loadOnTransitionStart: false, elementClass: "swiper-lazy", loadingClass: "swiper-lazy-loading", loadedClass: "swiper-lazy-loaded", preloaderClass: "swiper-lazy-preloader" } }, create: function() {
        d.extend(this, { lazy: { initialImageLoaded: false, load: pe.load.bind(this), loadInSlide: pe.loadInSlide.bind(this) } });
      }, on: { beforeInit: function() {
        this.params.lazy.enabled && this.params.preloadImages && (this.params.preloadImages = false);
      }, init: function() {
        this.params.lazy.enabled && !this.params.loop && 0 === this.params.initialSlide && this.lazy.load();
      }, scroll: function() {
        this.params.freeMode && !this.params.freeModeSticky && this.lazy.load();
      }, resize: function() {
        this.params.lazy.enabled && this.lazy.load();
      }, scrollbarDragMove: function() {
        this.params.lazy.enabled && this.lazy.load();
      }, transitionStart: function() {
        this.params.lazy.enabled && (this.params.lazy.loadOnTransitionStart || !this.params.lazy.loadOnTransitionStart && !this.lazy.initialImageLoaded) && this.lazy.load();
      }, transitionEnd: function() {
        this.params.lazy.enabled && !this.params.lazy.loadOnTransitionStart && this.lazy.load();
      }, slideChange: function() {
        this.params.lazy.enabled && this.params.cssMode && this.lazy.load();
      } } }, { name: "controller", params: { controller: { control: void 0, inverse: false, by: "slide" } }, create: function() {
        d.extend(this, { controller: { control: this.params.controller.control, getInterpolateFunction: ce.getInterpolateFunction.bind(this), setTranslate: ce.setTranslate.bind(this), setTransition: ce.setTransition.bind(this) } });
      }, on: { update: function() {
        this.controller.control && this.controller.spline && (this.controller.spline = void 0, delete this.controller.spline);
      }, resize: function() {
        this.controller.control && this.controller.spline && (this.controller.spline = void 0, delete this.controller.spline);
      }, observerUpdate: function() {
        this.controller.control && this.controller.spline && (this.controller.spline = void 0, delete this.controller.spline);
      }, setTranslate: function(e2, t2) {
        this.controller.control && this.controller.setTranslate(e2, t2);
      }, setTransition: function(e2, t2) {
        this.controller.control && this.controller.setTransition(e2, t2);
      } } }, { name: "a11y", params: { a11y: { enabled: true, notificationClass: "swiper-notification", prevSlideMessage: "Previous slide", nextSlideMessage: "Next slide", firstSlideMessage: "This is the first slide", lastSlideMessage: "This is the last slide", paginationBulletMessage: "Go to slide {{index}}" } }, create: function() {
        var e2 = this;
        d.extend(e2, { a11y: { liveRegion: n('<span class="' + e2.params.a11y.notificationClass + '" aria-live="assertive" aria-atomic="true"></span>') } }), Object.keys(ue).forEach(function(t2) {
          e2.a11y[t2] = ue[t2].bind(e2);
        });
      }, on: { init: function() {
        this.params.a11y.enabled && (this.a11y.init(), this.a11y.updateNavigation());
      }, toEdge: function() {
        this.params.a11y.enabled && this.a11y.updateNavigation();
      }, fromEdge: function() {
        this.params.a11y.enabled && this.a11y.updateNavigation();
      }, paginationUpdate: function() {
        this.params.a11y.enabled && this.a11y.updatePagination();
      }, destroy: function() {
        this.params.a11y.enabled && this.a11y.destroy();
      } } }, { name: "history", params: { history: { enabled: false, replaceState: false, key: "slides" } }, create: function() {
        d.extend(this, { history: { init: ve.init.bind(this), setHistory: ve.setHistory.bind(this), setHistoryPopState: ve.setHistoryPopState.bind(this), scrollToSlide: ve.scrollToSlide.bind(this), destroy: ve.destroy.bind(this) } });
      }, on: { init: function() {
        this.params.history.enabled && this.history.init();
      }, destroy: function() {
        this.params.history.enabled && this.history.destroy();
      }, transitionEnd: function() {
        this.history.initialized && this.history.setHistory(this.params.history.key, this.activeIndex);
      }, slideChange: function() {
        this.history.initialized && this.params.cssMode && this.history.setHistory(this.params.history.key, this.activeIndex);
      } } }, { name: "hash-navigation", params: { hashNavigation: { enabled: false, replaceState: false, watchState: false } }, create: function() {
        d.extend(this, { hashNavigation: { initialized: false, init: fe.init.bind(this), destroy: fe.destroy.bind(this), setHash: fe.setHash.bind(this), onHashCange: fe.onHashCange.bind(this) } });
      }, on: { init: function() {
        this.params.hashNavigation.enabled && this.hashNavigation.init();
      }, destroy: function() {
        this.params.hashNavigation.enabled && this.hashNavigation.destroy();
      }, transitionEnd: function() {
        this.hashNavigation.initialized && this.hashNavigation.setHash();
      }, slideChange: function() {
        this.hashNavigation.initialized && this.params.cssMode && this.hashNavigation.setHash();
      } } }, { name: "autoplay", params: { autoplay: { enabled: false, delay: 3e3, waitForTransition: true, disableOnInteraction: true, stopOnLastSlide: false, reverseDirection: false } }, create: function() {
        var e2 = this;
        d.extend(e2, { autoplay: { running: false, paused: false, run: me.run.bind(e2), start: me.start.bind(e2), stop: me.stop.bind(e2), pause: me.pause.bind(e2), onVisibilityChange: function() {
          "hidden" === document.visibilityState && e2.autoplay.running && e2.autoplay.pause(), "visible" === document.visibilityState && e2.autoplay.paused && (e2.autoplay.run(), e2.autoplay.paused = false);
        }, onTransitionEnd: function(t2) {
          e2 && !e2.destroyed && e2.$wrapperEl && t2.target === this && (e2.$wrapperEl[0].removeEventListener("transitionend", e2.autoplay.onTransitionEnd), e2.$wrapperEl[0].removeEventListener("webkitTransitionEnd", e2.autoplay.onTransitionEnd), e2.autoplay.paused = false, e2.autoplay.running ? e2.autoplay.run() : e2.autoplay.stop());
        } } });
      }, on: { init: function() {
        this.params.autoplay.enabled && (this.autoplay.start(), document.addEventListener("visibilitychange", this.autoplay.onVisibilityChange));
      }, beforeTransitionStart: function(e2, t2) {
        this.autoplay.running && (t2 || !this.params.autoplay.disableOnInteraction ? this.autoplay.pause(e2) : this.autoplay.stop());
      }, sliderFirstMove: function() {
        this.autoplay.running && (this.params.autoplay.disableOnInteraction ? this.autoplay.stop() : this.autoplay.pause());
      }, touchEnd: function() {
        this.params.cssMode && this.autoplay.paused && !this.params.autoplay.disableOnInteraction && this.autoplay.run();
      }, destroy: function() {
        this.autoplay.running && this.autoplay.stop(), document.removeEventListener("visibilitychange", this.autoplay.onVisibilityChange);
      } } }, { name: "effect-fade", params: { fadeEffect: { crossFade: false } }, create: function() {
        d.extend(this, { fadeEffect: { setTranslate: ge.setTranslate.bind(this), setTransition: ge.setTransition.bind(this) } });
      }, on: { beforeInit: function() {
        if ("fade" === this.params.effect) {
          this.classNames.push(this.params.containerModifierClass + "fade");
          var e2 = { slidesPerView: 1, slidesPerColumn: 1, slidesPerGroup: 1, watchSlidesProgress: true, spaceBetween: 0, virtualTranslate: true };
          d.extend(this.params, e2), d.extend(this.originalParams, e2);
        }
      }, setTranslate: function() {
        "fade" === this.params.effect && this.fadeEffect.setTranslate();
      }, setTransition: function(e2) {
        "fade" === this.params.effect && this.fadeEffect.setTransition(e2);
      } } }, { name: "effect-cube", params: { cubeEffect: { slideShadows: true, shadow: true, shadowOffset: 20, shadowScale: 0.94 } }, create: function() {
        d.extend(this, { cubeEffect: { setTranslate: be.setTranslate.bind(this), setTransition: be.setTransition.bind(this) } });
      }, on: { beforeInit: function() {
        if ("cube" === this.params.effect) {
          this.classNames.push(this.params.containerModifierClass + "cube"), this.classNames.push(this.params.containerModifierClass + "3d");
          var e2 = { slidesPerView: 1, slidesPerColumn: 1, slidesPerGroup: 1, watchSlidesProgress: true, resistanceRatio: 0, spaceBetween: 0, centeredSlides: false, virtualTranslate: true };
          d.extend(this.params, e2), d.extend(this.originalParams, e2);
        }
      }, setTranslate: function() {
        "cube" === this.params.effect && this.cubeEffect.setTranslate();
      }, setTransition: function(e2) {
        "cube" === this.params.effect && this.cubeEffect.setTransition(e2);
      } } }, { name: "effect-flip", params: { flipEffect: { slideShadows: true, limitRotation: true } }, create: function() {
        d.extend(this, { flipEffect: { setTranslate: we.setTranslate.bind(this), setTransition: we.setTransition.bind(this) } });
      }, on: { beforeInit: function() {
        if ("flip" === this.params.effect) {
          this.classNames.push(this.params.containerModifierClass + "flip"), this.classNames.push(this.params.containerModifierClass + "3d");
          var e2 = { slidesPerView: 1, slidesPerColumn: 1, slidesPerGroup: 1, watchSlidesProgress: true, spaceBetween: 0, virtualTranslate: true };
          d.extend(this.params, e2), d.extend(this.originalParams, e2);
        }
      }, setTranslate: function() {
        "flip" === this.params.effect && this.flipEffect.setTranslate();
      }, setTransition: function(e2) {
        "flip" === this.params.effect && this.flipEffect.setTransition(e2);
      } } }, { name: "effect-coverflow", params: { coverflowEffect: { rotate: 50, stretch: 0, depth: 100, scale: 1, modifier: 1, slideShadows: true } }, create: function() {
        d.extend(this, { coverflowEffect: { setTranslate: ye.setTranslate.bind(this), setTransition: ye.setTransition.bind(this) } });
      }, on: { beforeInit: function() {
        "coverflow" === this.params.effect && (this.classNames.push(this.params.containerModifierClass + "coverflow"), this.classNames.push(this.params.containerModifierClass + "3d"), this.params.watchSlidesProgress = true, this.originalParams.watchSlidesProgress = true);
      }, setTranslate: function() {
        "coverflow" === this.params.effect && this.coverflowEffect.setTranslate();
      }, setTransition: function(e2) {
        "coverflow" === this.params.effect && this.coverflowEffect.setTransition(e2);
      } } }, { name: "thumbs", params: { thumbs: { swiper: null, multipleActiveThumbs: true, autoScrollOffset: 0, slideThumbActiveClass: "swiper-slide-thumb-active", thumbsContainerClass: "swiper-container-thumbs" } }, create: function() {
        d.extend(this, { thumbs: { swiper: null, init: xe.init.bind(this), update: xe.update.bind(this), onThumbClick: xe.onThumbClick.bind(this) } });
      }, on: { beforeInit: function() {
        var e2 = this.params.thumbs;
        e2 && e2.swiper && (this.thumbs.init(), this.thumbs.update(true));
      }, slideChange: function() {
        this.thumbs.swiper && this.thumbs.update();
      }, update: function() {
        this.thumbs.swiper && this.thumbs.update();
      }, resize: function() {
        this.thumbs.swiper && this.thumbs.update();
      }, observerUpdate: function() {
        this.thumbs.swiper && this.thumbs.update();
      }, setTransition: function(e2) {
        var t2 = this.thumbs.swiper;
        t2 && t2.setTransition(e2);
      }, beforeDestroy: function() {
        var e2 = this.thumbs.swiper;
        e2 && this.thumbs.swiperCreated && e2 && e2.destroy();
      } } }];
      return void 0 === j.use && (j.use = j.Class.use, j.installModule = j.Class.installModule), j.use(Ee), j;
    });
  }
});

// dep:swiper_js_swiper_min_js
var swiper_js_swiper_min_js_default = require_swiper_min();
export {
  swiper_js_swiper_min_js_default as default
};
//# sourceMappingURL=swiper_js_swiper_min_js.js.map
